#
# PySNMP MIB module HWSMM-MIB (http://pysnmp.sf.net)
# ASN.1 source file:///home/jhzhang/OSCA-MIB.mib
# Produced by pysmi-0.1.3 at Wed May 10 04:14:59 2017
# On host MiWiFi-R1CL-srv platform Linux version 3.10.0-514.el7.x86_64 by user root
# Using Python version 2.7.5 (default, Nov  6 2016, 00:28:07) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, MibIdentifier, Bits, TimeTicks, Counter64, Unsigned32, enterprises, ModuleIdentity, Gauge32, iso, ObjectIdentity, IpAddress, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "MibIdentifier", "Bits", "TimeTicks", "Counter64", "Unsigned32", "enterprises", "ModuleIdentity", "Gauge32", "iso", "ObjectIdentity", "IpAddress", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hwSMM = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82))
if mibBuilder.loadTexts: hwSMM.setLastUpdated('201407070000Z')
huawei = MibIdentifier((1, 3, 6, 1, 4, 1, 2011))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2))
hwOSTA = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82))
hwUSP = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1))
system = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 1))
systemHealth = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 1, 1), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemHealth.setStatus('current')
systemUnHealthyLocations = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemUnHealthyLocations.setStatus('current')
shelf = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 2))
shelfListTargets = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 2, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfListTargets.setStatus('current')
shelfDomain = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 2, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shelfDomain.setStatus('current')
shelfLocation = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 2, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shelfLocation.setStatus('current')
shelfHealth = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 2, 5), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfHealth.setStatus('current')
shelfHealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 2, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfHealthEvents.setStatus('current')
shelfChassisID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 2, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shelfChassisID.setStatus('current')
shelfFanTraycontrolmode = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 2, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("auto", 0), ("manual", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shelfFanTraycontrolmode.setStatus('current')
shelfRealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 2, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfRealTimePower.setStatus('current')
shelfPowerCappingEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 2, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shelfPowerCappingEnable.setStatus('current')
shelfPowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 2, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shelfPowerCapping.setStatus('current')
shelfSubnet = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 2, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shelfSubnet.setStatus('current')
shelfChassisName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 2, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shelfChassisName.setStatus('current')
shelfPsuSleepConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 2, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shelfPsuSleepConfig.setStatus('current')
shelfPsuSleepStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 2, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfPsuSleepStatus.setStatus('current')
shelfRmvAlarmState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 2, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shelfRmvAlarmState.setStatus('current')
shelfFruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 2, 2001), )
if mibBuilder.loadTexts: shelfFruDescriptionTable.setStatus('current')
shelfFruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 2, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "shelfNumber"))
if mibBuilder.loadTexts: shelfFruDescriptionEntry.setStatus('current')
shelfNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 2, 2001, 1, 1), Integer32())
if mibBuilder.loadTexts: shelfNumber.setStatus('current')
shelfPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 2, 2001, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfPartNumber.setStatus('current')
shelfSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 2, 2001, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shelfSerialNumber.setStatus('current')
shelfType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 2, 2001, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfType.setStatus('current')
shelffruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 2, 2001, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelffruAll.setStatus('current')
smm = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3))
softwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: softwareVersion.setStatus('current')
smmRedundancy = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmRedundancy.setStatus('current')
smmPICMGProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmPICMGProperties.setStatus('current')
smmDeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmDeviceID.setStatus('current')
smmPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmPresence.setStatus('current')
smmHealth = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 9), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmHealth.setStatus('current')
smmHealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmHealthEvents.setStatus('current')
smmSNMPTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 11), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmSNMPTrapEnable.setStatus('current')
smmFailover = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmFailover.setStatus('current')
smmListPresent = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmListPresent.setStatus('current')
smmClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 20), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmClearSEL.setStatus('current')
smmSynchronize = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 24), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-set", 0), ("set", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmSynchronize.setStatus('current')
smmSNMPTrapAddress1 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 27), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmSNMPTrapAddress1.setStatus('current')
smmSNMPTrapAddress2 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 28), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmSNMPTrapAddress2.setStatus('current')
smmSNMPTrapAddress3 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 29), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmSNMPTrapAddress3.setStatus('current')
smmSNMPTrapAddress4 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 30), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmSNMPTrapAddress4.setStatus('current')
smmSNMPTrapAddress5 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 31), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmSNMPTrapAddress5.setStatus('current')
smmSNMPTrapCommunity = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmSNMPTrapCommunity.setStatus('current')
smmSNMPTrapVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 33), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmSNMPTrapVersion.setStatus('current')
smmSNMPTrapPort = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 34), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmSNMPTrapPort.setStatus('current')
smmKVMConnect = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 40), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmKVMConnect.setStatus('current')
smmSnmpReboot = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0)).clone(namedValues=NamedValues(("reboot", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmSnmpReboot.setStatus('current')
smmUniteLoad = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 43), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmUniteLoad.setStatus('current')
smmUniteLoadProgress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 44), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmUniteLoadProgress.setStatus('current')
smmPduEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 47), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmPduEnable.setStatus('current')
smmIpMode = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 48), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2)).clone(namedValues=NamedValues(("static", 1), ("dhcp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmIpMode.setStatus('current')
smmHostname = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmHostname.setStatus('current')
smmOutPortMode = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 50), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmOutPortMode.setStatus('current')
smmSmalert = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 51), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmSmalert.setStatus('current')
smmUseradd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmUseradd.setStatus('current')
smmUserdel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 53), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmUserdel.setStatus('current')
smmUserpasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 54), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmUserpasswd.setStatus('current')
smmUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 55), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmUserpropertychg.setStatus('current')
smmUserpasswdcomplex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 56), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmUserpasswdcomplex.setStatus('current')
smmPoweronControl = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 57), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmPoweronControl.setStatus('current')
smmAuthKey = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmAuthKey.setStatus('current')
smmPoweronResp = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 59), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmPoweronResp.setStatus('current')
smmSecretKVMConnect = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 60), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmSecretKVMConnect.setStatus('current')
smmUserIntfAuth = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 61), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmUserIntfAuth.setStatus('current')
smmGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 64), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmGateway.setStatus('current')
smmNTPEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 65), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmNTPEnable.setStatus('current')
smmNTPServerip = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 66), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmNTPServerip.setStatus('current')
smmNTPSyncinterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 67), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmNTPSyncinterval.setStatus('current')
smmTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 68), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmTimeZone.setStatus('current')
smmLCDUIDled = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 69), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmLCDUIDled.setStatus('current')
smmPowerOnInterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 70), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmPowerOnInterval.setStatus('current')
smmOtherVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 71), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmOtherVersion.setStatus('current')
smmDomainCreate = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 72), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: smmDomainCreate.setStatus('current')
smmDomainDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 73), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: smmDomainDel.setStatus('current')
smmProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 74), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmProductName.setStatus('current')
smmDNSHostname = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 75), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmDNSHostname.setStatus('current')
smmDNSDomainname = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 76), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmDNSDomainname.setStatus('current')
smmDNSServerip = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 77), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmDNSServerip.setStatus('current')
smmBundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 78), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmBundleVersion.setStatus('current')
smmOtherReboot = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 79), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmOtherReboot.setStatus('current')
smmTrapFormat = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 80), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmTrapFormat.setStatus('current')
smmFaultDetectSwitch = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 81), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmFaultDetectSwitch.setStatus('current')
smmUserSnmppasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 82), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmUserSnmppasswd.setStatus('current')
smmPasswdvalidPeriod = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 83), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmPasswdvalidPeriod.setStatus('current')
smmSnmpSwitchss = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 84), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2)).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmSnmpSwitchss.setStatus('current')
smmKVMServerPort = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 98), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmKVMServerPort.setStatus('current')
smmVMMServerPort = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 99), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmVMMServerPort.setStatus('current')
smmSensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2001), )
if mibBuilder.loadTexts: smmSensorTargetTable.setStatus('current')
smmSensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "smmTarget"))
if mibBuilder.loadTexts: smmSensorTargetEntry.setStatus('current')
smmTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: smmTarget.setStatus('current')
smmCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmCurrent.setStatus('current')
smmThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmThresholdsAll.setStatus('current')
smmUpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmUpperCritical.setStatus('current')
smmUpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmUpperNonCritical.setStatus('current')
smmUpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmUpperNonRecoverable.setStatus('current')
smmLowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmLowerNonCritical.setStatus('current')
smmLowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmLowerCritical.setStatus('current')
smmLowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmLowerNonRecoverable.setStatus('current')
smmSensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2001, 1, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmSensorHealth.setStatus('current')
smmSensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2001, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmSensorHealthEvents.setStatus('current')
smmNegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmNegativeHysteresis.setStatus('current')
smmPositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmPositiveHysteresis.setStatus('current')
smmSensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmSensorType.setStatus('current')
smmSensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmSensorFRUInfo.setStatus('current')
smmFruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2002), )
if mibBuilder.loadTexts: smmFruTable.setStatus('current')
smmFruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "smmfruNumber"))
if mibBuilder.loadTexts: smmFruEntry.setStatus('current')
smmfruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: smmfruNumber.setStatus('current')
smmFruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmFruHotSwapState.setStatus('current')
smmFruLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2002, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmFruLabel.setStatus('current')
smmDeleteFruLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2002, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmDeleteFruLabel.setStatus('current')
smmResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2002, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmResetReason.setStatus('current')
smmFruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2003), )
if mibBuilder.loadTexts: smmFruLedTable.setStatus('current')
smmFruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "smmFruID"), (0, "HWSMM-MIB", "smmFruLed"))
if mibBuilder.loadTexts: smmFruLedEntry.setStatus('current')
smmFruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: smmFruID.setStatus('current')
smmFruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: smmFruLed.setStatus('current')
smmFruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmFruLedColorProps.setStatus('current')
smmFruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmFruLedState.setStatus('current')
smmFruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2004), )
if mibBuilder.loadTexts: smmFruDescriptionTable.setStatus('current')
smmFruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "smmfruNum"))
if mibBuilder.loadTexts: smmFruDescriptionEntry.setStatus('current')
smmfruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: smmfruNum.setStatus('current')
smmfruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2004, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmfruBoardDescription.setStatus('current')
smmfruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmfruBoardManufacturer.setStatus('current')
smmfruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmfruBoardPartNumber.setStatus('current')
smmfruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2004, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmfruBoardSerialNumber.setStatus('current')
smmfruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2004, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmfruBoardManufactureDate.setStatus('current')
smmfruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmfruProductDescription.setStatus('current')
smmfruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmfruProductManufacturer.setStatus('current')
smmfruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmfruProductPartNumber.setStatus('current')
smmfruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmfruProductSerialNumber.setStatus('current')
smmfruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmfruProductRevision.setStatus('current')
smmfruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmfruAll.setStatus('current')
smmNetworkConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2005), )
if mibBuilder.loadTexts: smmNetworkConfigTable.setStatus('current')
smmNetworkConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2005, 1), ).setIndexNames((0, "HWSMM-MIB", "smmEthNum"))
if mibBuilder.loadTexts: smmNetworkConfigEntry.setStatus('current')
smmEthNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2005, 1, 1), Integer32())
if mibBuilder.loadTexts: smmEthNum.setStatus('current')
smmFloatIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2005, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmFloatIpAddr.setStatus('current')
smmStaticIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2005, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmStaticIpAddr.setStatus('current')
smmAllIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2005, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmAllIpAddr.setStatus('current')
smmDeleteIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2005, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmDeleteIpAddr.setStatus('current')
smmEthMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2005, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmEthMac.setStatus('current')
smmFloatIpgateway = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2005, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmFloatIpgateway.setStatus('current')
smmStaticIpgateway = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2005, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmStaticIpgateway.setStatus('current')
smmStandbyIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2005, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmStandbyIpAddr.setStatus('current')
smmDomainTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2006), )
if mibBuilder.loadTexts: smmDomainTable.setStatus('current')
smmDomainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "smmDomainName"))
if mibBuilder.loadTexts: smmDomainEntry.setStatus('current')
smmDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2006, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmDomainName.setStatus('current')
smmDomainUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2006, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmDomainUsers.setStatus('current')
smmDomainSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2006, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmDomainSlots.setStatus('current')
smmDomainAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2006, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmDomainAlias.setStatus('current')
smmRemoteSyslogTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2007), )
if mibBuilder.loadTexts: smmRemoteSyslogTable.setStatus('current')
smmRemoteSyslogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "smmRemoteSyslogTarget"))
if mibBuilder.loadTexts: smmRemoteSyslogEntry.setStatus('current')
smmRemoteSyslogTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: smmRemoteSyslogTarget.setStatus('current')
smmRemoteSyslogState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2007, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmRemoteSyslogState.setStatus('current')
smmRemoteSyslogServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2007, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmRemoteSyslogServerAddress.setStatus('current')
smmRemoteSyslogServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2007, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmRemoteSyslogServerPort.setStatus('current')
smmRemoteSyslogProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2007, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmRemoteSyslogProtocol.setStatus('current')
smmRemoteSyslogLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2007, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmRemoteSyslogLevel.setStatus('current')
smmRemoteSyslogTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2007, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmRemoteSyslogTransport.setStatus('current')
smmRemoteSyslogServerCA = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2007, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmRemoteSyslogServerCA.setStatus('current')
smmRemoteSyslogAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2007, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmRemoteSyslogAuth.setStatus('current')
smmRemoteSyslogClientCertificate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2007, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smmRemoteSyslogClientCertificate.setStatus('current')
smmTemperatureDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2008), )
if mibBuilder.loadTexts: smmTemperatureDescriptionTable.setStatus('current')
smmTemperatureDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "smmTemperatureIndex"), (0, "HWSMM-MIB", "smmTemperatureReading"))
if mibBuilder.loadTexts: smmTemperatureDescriptionEntry.setStatus('current')
smmTemperatureIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: smmTemperatureIndex.setStatus('current')
smmTemperatureReading = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 3, 2008, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmTemperatureReading.setStatus('current')
blades = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4))
blade1 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1))
b1DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1DeviceID.setStatus('current')
b1PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1PowerState.setStatus('current')
b1Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1Presence.setStatus('current')
b1Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1Health.setStatus('current')
b1HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1HealthEvents.setStatus('current')
b1ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1ClearSEL.setStatus('current')
b1ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1ExDiskBoardPresence.setStatus('current')
b1BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1BladeVersion.setStatus('current')
b1MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1MACAddress.setStatus('current')
b1Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1Safepwofftime.setStatus('current')
b1BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1BiosBootOption.setStatus('current')
b1Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1Systeminfo.setStatus('current')
b1SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1SystemProperties.setStatus('current')
b1BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1BiosCfg.setStatus('current')
b1WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1WDTBootEnable.setStatus('current')
b1RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1RealTimePower.setStatus('current')
b1PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1PowerCapping.setStatus('current')
b1Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1Powerreference.setStatus('current')
b1ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1ClearBiosConfig.setStatus('current')
b1BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1BmcIP.setStatus('current')
b1BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1BmcUserAdd.setStatus('current')
b1BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1BmcUserDel.setStatus('current')
b1BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1BmcUserPasswd.setStatus('current')
b1BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1BmcUserpropertychg.setStatus('current')
b1BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1BmcGateway.setStatus('current')
b1SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1SlotBitmap.setStatus('current')
b1systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1systemGuid.setStatus('current')
b1ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1ProductName.setStatus('current')
b1BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1BundleVersion.setStatus('current')
blade1SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2001), )
if mibBuilder.loadTexts: blade1SensorTargetTable.setStatus('current')
blade1SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b1Target"))
if mibBuilder.loadTexts: blade1SensorTargetEntry.setStatus('current')
b1Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b1Target.setStatus('current')
b1Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1Current.setStatus('current')
b1ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1ThresholdsAll.setStatus('current')
b1UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1UpperCritical.setStatus('current')
b1UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1UpperNonCritical.setStatus('current')
b1UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1UpperNonRecoverable.setStatus('current')
b1LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1LowerNonCritical.setStatus('current')
b1LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1LowerCritical.setStatus('current')
b1LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1LowerNonRecoverable.setStatus('current')
b1SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1SensorHealth.setStatus('current')
b1SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1SensorHealthEvents.setStatus('current')
b1NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1NegativeHysteresis.setStatus('current')
b1PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1PositiveHysteresis.setStatus('current')
b1SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1SensorType.setStatus('current')
b1SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1SensorFRUInfo.setStatus('current')
blade1FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2002), )
if mibBuilder.loadTexts: blade1FruTable.setStatus('current')
blade1FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b1fruNumber"))
if mibBuilder.loadTexts: blade1FruEntry.setStatus('current')
b1fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b1fruNumber.setStatus('current')
b1FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1FruHotSwapState.setStatus('current')
b1FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1FruLedProperties.setStatus('current')
b1FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1FRUControl.setStatus('current')
b1FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1FRULabel.setStatus('current')
b1ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1ResetReason.setStatus('current')
blade1FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2003), )
if mibBuilder.loadTexts: blade1FruLedTable.setStatus('current')
blade1FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b1FruID"), (0, "HWSMM-MIB", "b1FruLed"))
if mibBuilder.loadTexts: blade1FruLedEntry.setStatus('current')
b1FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b1FruID.setStatus('current')
b1FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b1FruLed.setStatus('current')
b1FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1FruLedColorProps.setStatus('current')
b1FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1FruLedState.setStatus('current')
blade1FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2004), )
if mibBuilder.loadTexts: blade1FruDescriptionTable.setStatus('current')
blade1FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b1fruNum"))
if mibBuilder.loadTexts: blade1FruDescriptionEntry.setStatus('current')
b1fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b1fruNum.setStatus('current')
b1fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1fruBoardDescription.setStatus('current')
b1fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1fruBoardManufacturer.setStatus('current')
b1fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1fruBoardPartNumber.setStatus('current')
b1fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1fruBoardSerialNumber.setStatus('current')
b1fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1fruBoardManufactureDate.setStatus('current')
b1fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1fruProductDescription.setStatus('current')
b1fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1fruProductManufacturer.setStatus('current')
b1fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1fruProductPartNumber.setStatus('current')
b1fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1fruProductSerialNumber.setStatus('current')
b1fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1fruProductRevision.setStatus('current')
b1fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1fruAll.setStatus('current')
blade1CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2006), )
if mibBuilder.loadTexts: blade1CPUTable.setStatus('current')
blade1CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b1CPUIndex"))
if mibBuilder.loadTexts: blade1CPUEntry.setStatus('current')
b1CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b1CPUIndex.setStatus('current')
b1CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1CPUMark.setStatus('current')
b1CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1CPUInfo.setStatus('current')
b1CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1CPUPresent.setStatus('current')
b1CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1CPUHealth.setStatus('current')
b1CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1CPULocation.setStatus('current')
blade1MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2007), )
if mibBuilder.loadTexts: blade1MemoryTable.setStatus('current')
blade1MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b1MEMIndex"))
if mibBuilder.loadTexts: blade1MemoryEntry.setStatus('current')
b1MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b1MEMIndex.setStatus('current')
b1MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1MEMMark.setStatus('current')
b1MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1MEMInfo.setStatus('current')
b1MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1MEMPresent.setStatus('current')
b1MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1MEMHealth.setStatus('current')
b1MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1MEMLocation.setStatus('current')
blade1MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2008), )
if mibBuilder.loadTexts: blade1MezzTable.setStatus('current')
blade1MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b1MezzIndex"))
if mibBuilder.loadTexts: blade1MezzEntry.setStatus('current')
b1MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b1MezzIndex.setStatus('current')
b1MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1MezzMark.setStatus('current')
b1MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1MezzInfo.setStatus('current')
b1MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1MezzPresent.setStatus('current')
b1MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1MezzHealth.setStatus('current')
b1MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1MezzLocation.setStatus('current')
b1MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1MezzMac.setStatus('current')
blade1DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2009), )
if mibBuilder.loadTexts: blade1DiskTable.setStatus('current')
blade1DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b1DiskIndex"))
if mibBuilder.loadTexts: blade1DiskEntry.setStatus('current')
b1DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b1DiskIndex.setStatus('current')
b1DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1DiskMark.setStatus('current')
b1DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1DiskInfo.setStatus('current')
b1DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1DiskPresent.setStatus('current')
b1DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1DiskHealth.setStatus('current')
b1DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1DiskLocation.setStatus('current')
blade1SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2010), )
if mibBuilder.loadTexts: blade1SecretKvmVmmTable.setStatus('current')
blade1SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b1SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade1SecretKvmVmmEntry.setStatus('current')
b1SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b1SecretKvmVmmIndex.setStatus('current')
b1SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1SecretKvmState.setStatus('current')
b1SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1SecretVmmState.setStatus('current')
b1MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b1MMSecretVmmKey.setStatus('current')
b1SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 1, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b1SecretVmmKey.setStatus('current')
blade2 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2))
b2DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2DeviceID.setStatus('current')
b2PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2PowerState.setStatus('current')
b2Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2Presence.setStatus('current')
b2Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2Health.setStatus('current')
b2HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2HealthEvents.setStatus('current')
b2ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2ClearSEL.setStatus('current')
b2ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2ExDiskBoardPresence.setStatus('current')
b2BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2BladeVersion.setStatus('current')
b2MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2MACAddress.setStatus('current')
b2Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2Safepwofftime.setStatus('current')
b2BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2BiosBootOption.setStatus('current')
b2Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2Systeminfo.setStatus('current')
b2SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2SystemProperties.setStatus('current')
b2BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2BiosCfg.setStatus('current')
b2WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2WDTBootEnable.setStatus('current')
b2RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2RealTimePower.setStatus('current')
b2PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2PowerCapping.setStatus('current')
b2Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2Powerreference.setStatus('current')
b2ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2ClearBiosConfig.setStatus('current')
b2BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2BmcIP.setStatus('current')
b2BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2BmcUserAdd.setStatus('current')
b2BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2BmcUserDel.setStatus('current')
b2BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2BmcUserPasswd.setStatus('current')
b2BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2BmcUserpropertychg.setStatus('current')
b2BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2BmcGateway.setStatus('current')
b2SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2SlotBitmap.setStatus('current')
b2systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2systemGuid.setStatus('current')
b2ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2ProductName.setStatus('current')
b2BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2BundleVersion.setStatus('current')
blade2SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2001), )
if mibBuilder.loadTexts: blade2SensorTargetTable.setStatus('current')
blade2SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b2Target"))
if mibBuilder.loadTexts: blade2SensorTargetEntry.setStatus('current')
b2Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b2Target.setStatus('current')
b2Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2Current.setStatus('current')
b2ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2ThresholdsAll.setStatus('current')
b2UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2UpperCritical.setStatus('current')
b2UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2UpperNonCritical.setStatus('current')
b2UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2UpperNonRecoverable.setStatus('current')
b2LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2LowerNonCritical.setStatus('current')
b2LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2LowerCritical.setStatus('current')
b2LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2LowerNonRecoverable.setStatus('current')
b2SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2SensorHealth.setStatus('current')
b2SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2SensorHealthEvents.setStatus('current')
b2NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2NegativeHysteresis.setStatus('current')
b2PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2PositiveHysteresis.setStatus('current')
b2SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2SensorType.setStatus('current')
b2SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2SensorFRUInfo.setStatus('current')
blade2FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2002), )
if mibBuilder.loadTexts: blade2FruTable.setStatus('current')
blade2FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b2fruNumber"))
if mibBuilder.loadTexts: blade2FruEntry.setStatus('current')
b2fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b2fruNumber.setStatus('current')
b2FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2FruHotSwapState.setStatus('current')
b2FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2FruLedProperties.setStatus('current')
b2FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2FRUControl.setStatus('current')
b2FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2FRULabel.setStatus('current')
b2ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2ResetReason.setStatus('current')
blade2FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2003), )
if mibBuilder.loadTexts: blade2FruLedTable.setStatus('current')
blade2FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b2FruID"), (0, "HWSMM-MIB", "b2FruLed"))
if mibBuilder.loadTexts: blade2FruLedEntry.setStatus('current')
b2FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b2FruID.setStatus('current')
b2FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b2FruLed.setStatus('current')
b2FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2FruLedColorProps.setStatus('current')
b2FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2FruLedState.setStatus('current')
blade2FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2004), )
if mibBuilder.loadTexts: blade2FruDescriptionTable.setStatus('current')
blade2FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b2fruNum"))
if mibBuilder.loadTexts: blade2FruDescriptionEntry.setStatus('current')
b2fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b2fruNum.setStatus('current')
b2fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2fruBoardDescription.setStatus('current')
b2fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2fruBoardManufacturer.setStatus('current')
b2fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2fruBoardPartNumber.setStatus('current')
b2fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2fruBoardSerialNumber.setStatus('current')
b2fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2fruBoardManufactureDate.setStatus('current')
b2fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2fruProductDescription.setStatus('current')
b2fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2fruProductManufacturer.setStatus('current')
b2fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2fruProductPartNumber.setStatus('current')
b2fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2fruProductSerialNumber.setStatus('current')
b2fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2fruProductRevision.setStatus('current')
b2fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2fruAll.setStatus('current')
blade2CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2006), )
if mibBuilder.loadTexts: blade2CPUTable.setStatus('current')
blade2CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b2CPUIndex"))
if mibBuilder.loadTexts: blade2CPUEntry.setStatus('current')
b2CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b2CPUIndex.setStatus('current')
b2CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2CPUMark.setStatus('current')
b2CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2CPUInfo.setStatus('current')
b2CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2CPUPresent.setStatus('current')
b2CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2CPUHealth.setStatus('current')
b2CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2CPULocation.setStatus('current')
blade2MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2007), )
if mibBuilder.loadTexts: blade2MemoryTable.setStatus('current')
blade2MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b2MEMIndex"))
if mibBuilder.loadTexts: blade2MemoryEntry.setStatus('current')
b2MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b2MEMIndex.setStatus('current')
b2MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2MEMMark.setStatus('current')
b2MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2MEMInfo.setStatus('current')
b2MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2MEMPresent.setStatus('current')
b2MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2MEMHealth.setStatus('current')
b2MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2MEMLocation.setStatus('current')
blade2MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2008), )
if mibBuilder.loadTexts: blade2MezzTable.setStatus('current')
blade2MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b2MezzIndex"))
if mibBuilder.loadTexts: blade2MezzEntry.setStatus('current')
b2MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b2MezzIndex.setStatus('current')
b2MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2MezzMark.setStatus('current')
b2MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2MezzInfo.setStatus('current')
b2MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2MezzPresent.setStatus('current')
b2MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2MezzHealth.setStatus('current')
b2MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2MezzLocation.setStatus('current')
b2MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2MezzMac.setStatus('current')
blade2DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2009), )
if mibBuilder.loadTexts: blade2DiskTable.setStatus('current')
blade2DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b2DiskIndex"))
if mibBuilder.loadTexts: blade2DiskEntry.setStatus('current')
b2DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b2DiskIndex.setStatus('current')
b2DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2DiskMark.setStatus('current')
b2DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2DiskInfo.setStatus('current')
b2DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2DiskPresent.setStatus('current')
b2DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2DiskHealth.setStatus('current')
b2DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2DiskLocation.setStatus('current')
blade2SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2010), )
if mibBuilder.loadTexts: blade2SecretKvmVmmTable.setStatus('current')
blade2SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b2SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade2SecretKvmVmmEntry.setStatus('current')
b2SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b2SecretKvmVmmIndex.setStatus('current')
b2SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2SecretKvmState.setStatus('current')
b2SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2SecretVmmState.setStatus('current')
b2MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b2MMSecretVmmKey.setStatus('current')
b2SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 2, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b2SecretVmmKey.setStatus('current')
blade3 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3))
b3DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3DeviceID.setStatus('current')
b3PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3PowerState.setStatus('current')
b3Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3Presence.setStatus('current')
b3Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3Health.setStatus('current')
b3HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3HealthEvents.setStatus('current')
b3ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3ClearSEL.setStatus('current')
b3ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3ExDiskBoardPresence.setStatus('current')
b3BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3BladeVersion.setStatus('current')
b3MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3MACAddress.setStatus('current')
b3Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3Safepwofftime.setStatus('current')
b3BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3BiosBootOption.setStatus('current')
b3Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3Systeminfo.setStatus('current')
b3SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3SystemProperties.setStatus('current')
b3BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3BiosCfg.setStatus('current')
b3WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3WDTBootEnable.setStatus('current')
b3RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3RealTimePower.setStatus('current')
b3PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3PowerCapping.setStatus('current')
b3Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3Powerreference.setStatus('current')
b3ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3ClearBiosConfig.setStatus('current')
b3BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3BmcIP.setStatus('current')
b3BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3BmcUserAdd.setStatus('current')
b3BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3BmcUserDel.setStatus('current')
b3BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3BmcUserPasswd.setStatus('current')
b3BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3BmcUserpropertychg.setStatus('current')
b3BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3BmcGateway.setStatus('current')
b3SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3SlotBitmap.setStatus('current')
b3systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3systemGuid.setStatus('current')
b3ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3ProductName.setStatus('current')
b3BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3BundleVersion.setStatus('current')
blade3SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2001), )
if mibBuilder.loadTexts: blade3SensorTargetTable.setStatus('current')
blade3SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b3Target"))
if mibBuilder.loadTexts: blade3SensorTargetEntry.setStatus('current')
b3Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b3Target.setStatus('current')
b3Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3Current.setStatus('current')
b3ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3ThresholdsAll.setStatus('current')
b3UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3UpperCritical.setStatus('current')
b3UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3UpperNonCritical.setStatus('current')
b3UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3UpperNonRecoverable.setStatus('current')
b3LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3LowerNonCritical.setStatus('current')
b3LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3LowerCritical.setStatus('current')
b3LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3LowerNonRecoverable.setStatus('current')
b3SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3SensorHealth.setStatus('current')
b3SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3SensorHealthEvents.setStatus('current')
b3NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3NegativeHysteresis.setStatus('current')
b3PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3PositiveHysteresis.setStatus('current')
b3SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3SensorType.setStatus('current')
b3SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3SensorFRUInfo.setStatus('current')
blade3FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2002), )
if mibBuilder.loadTexts: blade3FruTable.setStatus('current')
blade3FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b3fruNumber"))
if mibBuilder.loadTexts: blade3FruEntry.setStatus('current')
b3fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b3fruNumber.setStatus('current')
b3FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3FruHotSwapState.setStatus('current')
b3FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3FruLedProperties.setStatus('current')
b3FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3FRUControl.setStatus('current')
b3FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3FRULabel.setStatus('current')
b3ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3ResetReason.setStatus('current')
blade3FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2003), )
if mibBuilder.loadTexts: blade3FruLedTable.setStatus('current')
blade3FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b3FruID"), (0, "HWSMM-MIB", "b3FruLed"))
if mibBuilder.loadTexts: blade3FruLedEntry.setStatus('current')
b3FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b3FruID.setStatus('current')
b3FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b3FruLed.setStatus('current')
b3FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3FruLedColorProps.setStatus('current')
b3FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3FruLedState.setStatus('current')
blade3FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2004), )
if mibBuilder.loadTexts: blade3FruDescriptionTable.setStatus('current')
blade3FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b3fruNum"))
if mibBuilder.loadTexts: blade3FruDescriptionEntry.setStatus('current')
b3fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b3fruNum.setStatus('current')
b3fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3fruBoardDescription.setStatus('current')
b3fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3fruBoardManufacturer.setStatus('current')
b3fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3fruBoardPartNumber.setStatus('current')
b3fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3fruBoardSerialNumber.setStatus('current')
b3fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3fruBoardManufactureDate.setStatus('current')
b3fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3fruProductDescription.setStatus('current')
b3fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3fruProductManufacturer.setStatus('current')
b3fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3fruProductPartNumber.setStatus('current')
b3fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3fruProductSerialNumber.setStatus('current')
b3fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3fruProductRevision.setStatus('current')
b3fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3fruAll.setStatus('current')
blade3CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2006), )
if mibBuilder.loadTexts: blade3CPUTable.setStatus('current')
blade3CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b3CPUIndex"))
if mibBuilder.loadTexts: blade3CPUEntry.setStatus('current')
b3CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b3CPUIndex.setStatus('current')
b3CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3CPUMark.setStatus('current')
b3CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3CPUInfo.setStatus('current')
b3CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3CPUPresent.setStatus('current')
b3CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3CPUHealth.setStatus('current')
b3CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3CPULocation.setStatus('current')
blade3MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2007), )
if mibBuilder.loadTexts: blade3MemoryTable.setStatus('current')
blade3MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b3MEMIndex"))
if mibBuilder.loadTexts: blade3MemoryEntry.setStatus('current')
b3MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b3MEMIndex.setStatus('current')
b3MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3MEMMark.setStatus('current')
b3MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3MEMInfo.setStatus('current')
b3MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3MEMPresent.setStatus('current')
b3MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3MEMHealth.setStatus('current')
b3MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3MEMLocation.setStatus('current')
blade3MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2008), )
if mibBuilder.loadTexts: blade3MezzTable.setStatus('current')
blade3MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b3MezzIndex"))
if mibBuilder.loadTexts: blade3MezzEntry.setStatus('current')
b3MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b3MezzIndex.setStatus('current')
b3MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3MezzMark.setStatus('current')
b3MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3MezzInfo.setStatus('current')
b3MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3MezzPresent.setStatus('current')
b3MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3MezzHealth.setStatus('current')
b3MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3MezzLocation.setStatus('current')
b3MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3MezzMac.setStatus('current')
blade3DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2009), )
if mibBuilder.loadTexts: blade3DiskTable.setStatus('current')
blade3DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b3DiskIndex"))
if mibBuilder.loadTexts: blade3DiskEntry.setStatus('current')
b3DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b3DiskIndex.setStatus('current')
b3DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3DiskMark.setStatus('current')
b3DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3DiskInfo.setStatus('current')
b3DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3DiskPresent.setStatus('current')
b3DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3DiskHealth.setStatus('current')
b3DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3DiskLocation.setStatus('current')
blade3SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2010), )
if mibBuilder.loadTexts: blade3SecretKvmVmmTable.setStatus('current')
blade3SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b3SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade3SecretKvmVmmEntry.setStatus('current')
b3SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b3SecretKvmVmmIndex.setStatus('current')
b3SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3SecretKvmState.setStatus('current')
b3SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3SecretVmmState.setStatus('current')
b3MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b3MMSecretVmmKey.setStatus('current')
b3SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 3, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b3SecretVmmKey.setStatus('current')
blade4 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4))
b4DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4DeviceID.setStatus('current')
b4PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4PowerState.setStatus('current')
b4Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4Presence.setStatus('current')
b4Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4Health.setStatus('current')
b4HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4HealthEvents.setStatus('current')
b4ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4ClearSEL.setStatus('current')
b4ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4ExDiskBoardPresence.setStatus('current')
b4BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4BladeVersion.setStatus('current')
b4MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4MACAddress.setStatus('current')
b4Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4Safepwofftime.setStatus('current')
b4BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4BiosBootOption.setStatus('current')
b4Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4Systeminfo.setStatus('current')
b4SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4SystemProperties.setStatus('current')
b4BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4BiosCfg.setStatus('current')
b4WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4WDTBootEnable.setStatus('current')
b4RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4RealTimePower.setStatus('current')
b4PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4PowerCapping.setStatus('current')
b4Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4Powerreference.setStatus('current')
b4ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4ClearBiosConfig.setStatus('current')
b4BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4BmcIP.setStatus('current')
b4BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4BmcUserAdd.setStatus('current')
b4BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4BmcUserDel.setStatus('current')
b4BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4BmcUserPasswd.setStatus('current')
b4BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4BmcUserpropertychg.setStatus('current')
b4BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4BmcGateway.setStatus('current')
b4SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4SlotBitmap.setStatus('current')
b4systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4systemGuid.setStatus('current')
b4ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4ProductName.setStatus('current')
b4BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4BundleVersion.setStatus('current')
blade4SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2001), )
if mibBuilder.loadTexts: blade4SensorTargetTable.setStatus('current')
blade4SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b4Target"))
if mibBuilder.loadTexts: blade4SensorTargetEntry.setStatus('current')
b4Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b4Target.setStatus('current')
b4Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4Current.setStatus('current')
b4ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4ThresholdsAll.setStatus('current')
b4UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4UpperCritical.setStatus('current')
b4UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4UpperNonCritical.setStatus('current')
b4UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4UpperNonRecoverable.setStatus('current')
b4LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4LowerNonCritical.setStatus('current')
b4LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4LowerCritical.setStatus('current')
b4LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4LowerNonRecoverable.setStatus('current')
b4SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4SensorHealth.setStatus('current')
b4SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4SensorHealthEvents.setStatus('current')
b4NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4NegativeHysteresis.setStatus('current')
b4PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4PositiveHysteresis.setStatus('current')
b4SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4SensorType.setStatus('current')
b4SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4SensorFRUInfo.setStatus('current')
blade4FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2002), )
if mibBuilder.loadTexts: blade4FruTable.setStatus('current')
blade4FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b4fruNumber"))
if mibBuilder.loadTexts: blade4FruEntry.setStatus('current')
b4fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b4fruNumber.setStatus('current')
b4FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4FruHotSwapState.setStatus('current')
b4FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4FruLedProperties.setStatus('current')
b4FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4FRUControl.setStatus('current')
b4FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4FRULabel.setStatus('current')
b4ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4ResetReason.setStatus('current')
blade4FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2003), )
if mibBuilder.loadTexts: blade4FruLedTable.setStatus('current')
blade4FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b4FruID"), (0, "HWSMM-MIB", "b4FruLed"))
if mibBuilder.loadTexts: blade4FruLedEntry.setStatus('current')
b4FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b4FruID.setStatus('current')
b4FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b4FruLed.setStatus('current')
b4FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4FruLedColorProps.setStatus('current')
b4FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4FruLedState.setStatus('current')
blade4FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2004), )
if mibBuilder.loadTexts: blade4FruDescriptionTable.setStatus('current')
blade4FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b4fruNum"))
if mibBuilder.loadTexts: blade4FruDescriptionEntry.setStatus('current')
b4fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b4fruNum.setStatus('current')
b4fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4fruBoardDescription.setStatus('current')
b4fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4fruBoardManufacturer.setStatus('current')
b4fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4fruBoardPartNumber.setStatus('current')
b4fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4fruBoardSerialNumber.setStatus('current')
b4fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4fruBoardManufactureDate.setStatus('current')
b4fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4fruProductDescription.setStatus('current')
b4fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4fruProductManufacturer.setStatus('current')
b4fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4fruProductPartNumber.setStatus('current')
b4fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4fruProductSerialNumber.setStatus('current')
b4fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4fruProductRevision.setStatus('current')
b4fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4fruAll.setStatus('current')
blade4CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2006), )
if mibBuilder.loadTexts: blade4CPUTable.setStatus('current')
blade4CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b4CPUIndex"))
if mibBuilder.loadTexts: blade4CPUEntry.setStatus('current')
b4CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b4CPUIndex.setStatus('current')
b4CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4CPUMark.setStatus('current')
b4CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4CPUInfo.setStatus('current')
b4CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4CPUPresent.setStatus('current')
b4CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4CPUHealth.setStatus('current')
b4CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4CPULocation.setStatus('current')
blade4MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2007), )
if mibBuilder.loadTexts: blade4MemoryTable.setStatus('current')
blade4MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b4MEMIndex"))
if mibBuilder.loadTexts: blade4MemoryEntry.setStatus('current')
b4MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b4MEMIndex.setStatus('current')
b4MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4MEMMark.setStatus('current')
b4MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4MEMInfo.setStatus('current')
b4MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4MEMPresent.setStatus('current')
b4MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4MEMHealth.setStatus('current')
b4MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4MEMLocation.setStatus('current')
blade4MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2008), )
if mibBuilder.loadTexts: blade4MezzTable.setStatus('current')
blade4MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b4MezzIndex"))
if mibBuilder.loadTexts: blade4MezzEntry.setStatus('current')
b4MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b4MezzIndex.setStatus('current')
b4MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4MezzMark.setStatus('current')
b4MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4MezzInfo.setStatus('current')
b4MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4MezzPresent.setStatus('current')
b4MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4MezzHealth.setStatus('current')
b4MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4MezzLocation.setStatus('current')
b4MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4MezzMac.setStatus('current')
blade4DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2009), )
if mibBuilder.loadTexts: blade4DiskTable.setStatus('current')
blade4DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b4DiskIndex"))
if mibBuilder.loadTexts: blade4DiskEntry.setStatus('current')
b4DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b4DiskIndex.setStatus('current')
b4DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4DiskMark.setStatus('current')
b4DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4DiskInfo.setStatus('current')
b4DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4DiskPresent.setStatus('current')
b4DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4DiskHealth.setStatus('current')
b4DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4DiskLocation.setStatus('current')
blade4SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2010), )
if mibBuilder.loadTexts: blade4SecretKvmVmmTable.setStatus('current')
blade4SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b4SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade4SecretKvmVmmEntry.setStatus('current')
b4SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b4SecretKvmVmmIndex.setStatus('current')
b4SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4SecretKvmState.setStatus('current')
b4SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4SecretVmmState.setStatus('current')
b4MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b4MMSecretVmmKey.setStatus('current')
b4SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 4, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b4SecretVmmKey.setStatus('current')
blade5 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5))
b5DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5DeviceID.setStatus('current')
b5PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5PowerState.setStatus('current')
b5Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5Presence.setStatus('current')
b5Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5Health.setStatus('current')
b5HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5HealthEvents.setStatus('current')
b5ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5ClearSEL.setStatus('current')
b5ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5ExDiskBoardPresence.setStatus('current')
b5BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5BladeVersion.setStatus('current')
b5MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5MACAddress.setStatus('current')
b5Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5Safepwofftime.setStatus('current')
b5BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5BiosBootOption.setStatus('current')
b5Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5Systeminfo.setStatus('current')
b5SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5SystemProperties.setStatus('current')
b5BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5BiosCfg.setStatus('current')
b5WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5WDTBootEnable.setStatus('current')
b5RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5RealTimePower.setStatus('current')
b5PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5PowerCapping.setStatus('current')
b5Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5Powerreference.setStatus('current')
b5ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5ClearBiosConfig.setStatus('current')
b5BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5BmcIP.setStatus('current')
b5BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5BmcUserAdd.setStatus('current')
b5BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5BmcUserDel.setStatus('current')
b5BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5BmcUserPasswd.setStatus('current')
b5BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5BmcUserpropertychg.setStatus('current')
b5BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5BmcGateway.setStatus('current')
b5SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5SlotBitmap.setStatus('current')
b5systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5systemGuid.setStatus('current')
b5ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5ProductName.setStatus('current')
b5BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5BundleVersion.setStatus('current')
blade5SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2001), )
if mibBuilder.loadTexts: blade5SensorTargetTable.setStatus('current')
blade5SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b5Target"))
if mibBuilder.loadTexts: blade5SensorTargetEntry.setStatus('current')
b5Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b5Target.setStatus('current')
b5Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5Current.setStatus('current')
b5ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5ThresholdsAll.setStatus('current')
b5UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5UpperCritical.setStatus('current')
b5UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5UpperNonCritical.setStatus('current')
b5UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5UpperNonRecoverable.setStatus('current')
b5LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5LowerNonCritical.setStatus('current')
b5LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5LowerCritical.setStatus('current')
b5LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5LowerNonRecoverable.setStatus('current')
b5SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5SensorHealth.setStatus('current')
b5SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5SensorHealthEvents.setStatus('current')
b5NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5NegativeHysteresis.setStatus('current')
b5PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5PositiveHysteresis.setStatus('current')
b5SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5SensorType.setStatus('current')
b5SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5SensorFRUInfo.setStatus('current')
blade5FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2002), )
if mibBuilder.loadTexts: blade5FruTable.setStatus('current')
blade5FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b5fruNumber"))
if mibBuilder.loadTexts: blade5FruEntry.setStatus('current')
b5fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b5fruNumber.setStatus('current')
b5FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5FruHotSwapState.setStatus('current')
b5FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5FruLedProperties.setStatus('current')
b5FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5FRUControl.setStatus('current')
b5FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5FRULabel.setStatus('current')
b5ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5ResetReason.setStatus('current')
blade5FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2003), )
if mibBuilder.loadTexts: blade5FruLedTable.setStatus('current')
blade5FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b5FruID"), (0, "HWSMM-MIB", "b5FruLed"))
if mibBuilder.loadTexts: blade5FruLedEntry.setStatus('current')
b5FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b5FruID.setStatus('current')
b5FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b5FruLed.setStatus('current')
b5FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5FruLedColorProps.setStatus('current')
b5FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5FruLedState.setStatus('current')
blade5FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2004), )
if mibBuilder.loadTexts: blade5FruDescriptionTable.setStatus('current')
blade5FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b5fruNum"))
if mibBuilder.loadTexts: blade5FruDescriptionEntry.setStatus('current')
b5fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b5fruNum.setStatus('current')
b5fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5fruBoardDescription.setStatus('current')
b5fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5fruBoardManufacturer.setStatus('current')
b5fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5fruBoardPartNumber.setStatus('current')
b5fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5fruBoardSerialNumber.setStatus('current')
b5fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5fruBoardManufactureDate.setStatus('current')
b5fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5fruProductDescription.setStatus('current')
b5fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5fruProductManufacturer.setStatus('current')
b5fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5fruProductPartNumber.setStatus('current')
b5fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5fruProductSerialNumber.setStatus('current')
b5fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5fruProductRevision.setStatus('current')
b5fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5fruAll.setStatus('current')
blade5CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2006), )
if mibBuilder.loadTexts: blade5CPUTable.setStatus('current')
blade5CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b5CPUIndex"))
if mibBuilder.loadTexts: blade5CPUEntry.setStatus('current')
b5CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b5CPUIndex.setStatus('current')
b5CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5CPUMark.setStatus('current')
b5CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5CPUInfo.setStatus('current')
b5CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5CPUPresent.setStatus('current')
b5CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5CPUHealth.setStatus('current')
b5CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5CPULocation.setStatus('current')
blade5MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2007), )
if mibBuilder.loadTexts: blade5MemoryTable.setStatus('current')
blade5MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b5MEMIndex"))
if mibBuilder.loadTexts: blade5MemoryEntry.setStatus('current')
b5MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b5MEMIndex.setStatus('current')
b5MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5MEMMark.setStatus('current')
b5MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5MEMInfo.setStatus('current')
b5MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5MEMPresent.setStatus('current')
b5MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5MEMHealth.setStatus('current')
b5MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5MEMLocation.setStatus('current')
blade5MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2008), )
if mibBuilder.loadTexts: blade5MezzTable.setStatus('current')
blade5MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b5MezzIndex"))
if mibBuilder.loadTexts: blade5MezzEntry.setStatus('current')
b5MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b5MezzIndex.setStatus('current')
b5MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5MezzMark.setStatus('current')
b5MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5MezzInfo.setStatus('current')
b5MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5MezzPresent.setStatus('current')
b5MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5MezzHealth.setStatus('current')
b5MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5MezzLocation.setStatus('current')
b5MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5MezzMac.setStatus('current')
blade5DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2009), )
if mibBuilder.loadTexts: blade5DiskTable.setStatus('current')
blade5DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b5DiskIndex"))
if mibBuilder.loadTexts: blade5DiskEntry.setStatus('current')
b5DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b5DiskIndex.setStatus('current')
b5DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5DiskMark.setStatus('current')
b5DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5DiskInfo.setStatus('current')
b5DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5DiskPresent.setStatus('current')
b5DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5DiskHealth.setStatus('current')
b5DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5DiskLocation.setStatus('current')
blade5SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2010), )
if mibBuilder.loadTexts: blade5SecretKvmVmmTable.setStatus('current')
blade5SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b5SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade5SecretKvmVmmEntry.setStatus('current')
b5SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b5SecretKvmVmmIndex.setStatus('current')
b5SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5SecretKvmState.setStatus('current')
b5SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5SecretVmmState.setStatus('current')
b5MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b5MMSecretVmmKey.setStatus('current')
b5SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 5, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b5SecretVmmKey.setStatus('current')
blade6 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6))
b6DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6DeviceID.setStatus('current')
b6PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6PowerState.setStatus('current')
b6Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6Presence.setStatus('current')
b6Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6Health.setStatus('current')
b6HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6HealthEvents.setStatus('current')
b6ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6ClearSEL.setStatus('current')
b6ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6ExDiskBoardPresence.setStatus('current')
b6BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6BladeVersion.setStatus('current')
b6MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6MACAddress.setStatus('current')
b6Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6Safepwofftime.setStatus('current')
b6BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6BiosBootOption.setStatus('current')
b6Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6Systeminfo.setStatus('current')
b6SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6SystemProperties.setStatus('current')
b6BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6BiosCfg.setStatus('current')
b6WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6WDTBootEnable.setStatus('current')
b6RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6RealTimePower.setStatus('current')
b6PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6PowerCapping.setStatus('current')
b6Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6Powerreference.setStatus('current')
b6ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6ClearBiosConfig.setStatus('current')
b6BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6BmcIP.setStatus('current')
b6BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6BmcUserAdd.setStatus('current')
b6BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6BmcUserDel.setStatus('current')
b6BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6BmcUserPasswd.setStatus('current')
b6BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6BmcUserpropertychg.setStatus('current')
b6BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6BmcGateway.setStatus('current')
b6SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6SlotBitmap.setStatus('current')
b6systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6systemGuid.setStatus('current')
b6ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6ProductName.setStatus('current')
b6BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6BundleVersion.setStatus('current')
blade6SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2001), )
if mibBuilder.loadTexts: blade6SensorTargetTable.setStatus('current')
blade6SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b6Target"))
if mibBuilder.loadTexts: blade6SensorTargetEntry.setStatus('current')
b6Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b6Target.setStatus('current')
b6Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6Current.setStatus('current')
b6ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6ThresholdsAll.setStatus('current')
b6UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6UpperCritical.setStatus('current')
b6UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6UpperNonCritical.setStatus('current')
b6UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6UpperNonRecoverable.setStatus('current')
b6LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6LowerNonCritical.setStatus('current')
b6LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6LowerCritical.setStatus('current')
b6LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6LowerNonRecoverable.setStatus('current')
b6SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6SensorHealth.setStatus('current')
b6SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6SensorHealthEvents.setStatus('current')
b6NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6NegativeHysteresis.setStatus('current')
b6PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6PositiveHysteresis.setStatus('current')
b6SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6SensorType.setStatus('current')
b6SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6SensorFRUInfo.setStatus('current')
blade6FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2002), )
if mibBuilder.loadTexts: blade6FruTable.setStatus('current')
blade6FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b6fruNumber"))
if mibBuilder.loadTexts: blade6FruEntry.setStatus('current')
b6fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b6fruNumber.setStatus('current')
b6FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6FruHotSwapState.setStatus('current')
b6FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6FruLedProperties.setStatus('current')
b6FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6FRUControl.setStatus('current')
b6FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6FRULabel.setStatus('current')
b6ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6ResetReason.setStatus('current')
blade6FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2003), )
if mibBuilder.loadTexts: blade6FruLedTable.setStatus('current')
blade6FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b6FruID"), (0, "HWSMM-MIB", "b6FruLed"))
if mibBuilder.loadTexts: blade6FruLedEntry.setStatus('current')
b6FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b6FruID.setStatus('current')
b6FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b6FruLed.setStatus('current')
b6FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6FruLedColorProps.setStatus('current')
b6FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6FruLedState.setStatus('current')
blade6FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2004), )
if mibBuilder.loadTexts: blade6FruDescriptionTable.setStatus('current')
blade6FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b6fruNum"))
if mibBuilder.loadTexts: blade6FruDescriptionEntry.setStatus('current')
b6fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b6fruNum.setStatus('current')
b6fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6fruBoardDescription.setStatus('current')
b6fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6fruBoardManufacturer.setStatus('current')
b6fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6fruBoardPartNumber.setStatus('current')
b6fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6fruBoardSerialNumber.setStatus('current')
b6fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6fruBoardManufactureDate.setStatus('current')
b6fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6fruProductDescription.setStatus('current')
b6fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6fruProductManufacturer.setStatus('current')
b6fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6fruProductPartNumber.setStatus('current')
b6fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6fruProductSerialNumber.setStatus('current')
b6fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6fruProductRevision.setStatus('current')
b6fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6fruAll.setStatus('current')
blade6CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2006), )
if mibBuilder.loadTexts: blade6CPUTable.setStatus('current')
blade6CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b6CPUIndex"))
if mibBuilder.loadTexts: blade6CPUEntry.setStatus('current')
b6CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b6CPUIndex.setStatus('current')
b6CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6CPUMark.setStatus('current')
b6CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6CPUInfo.setStatus('current')
b6CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6CPUPresent.setStatus('current')
b6CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6CPUHealth.setStatus('current')
b6CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6CPULocation.setStatus('current')
blade6MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2007), )
if mibBuilder.loadTexts: blade6MemoryTable.setStatus('current')
blade6MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b6MEMIndex"))
if mibBuilder.loadTexts: blade6MemoryEntry.setStatus('current')
b6MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b6MEMIndex.setStatus('current')
b6MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6MEMMark.setStatus('current')
b6MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6MEMInfo.setStatus('current')
b6MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6MEMPresent.setStatus('current')
b6MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6MEMHealth.setStatus('current')
b6MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6MEMLocation.setStatus('current')
blade6MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2008), )
if mibBuilder.loadTexts: blade6MezzTable.setStatus('current')
blade6MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b6MezzIndex"))
if mibBuilder.loadTexts: blade6MezzEntry.setStatus('current')
b6MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b6MezzIndex.setStatus('current')
b6MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6MezzMark.setStatus('current')
b6MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6MezzInfo.setStatus('current')
b6MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6MezzPresent.setStatus('current')
b6MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6MezzHealth.setStatus('current')
b6MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6MezzLocation.setStatus('current')
b6MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6MezzMac.setStatus('current')
blade6DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2009), )
if mibBuilder.loadTexts: blade6DiskTable.setStatus('current')
blade6DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b6DiskIndex"))
if mibBuilder.loadTexts: blade6DiskEntry.setStatus('current')
b6DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b6DiskIndex.setStatus('current')
b6DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6DiskMark.setStatus('current')
b6DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6DiskInfo.setStatus('current')
b6DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6DiskPresent.setStatus('current')
b6DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6DiskHealth.setStatus('current')
b6DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6DiskLocation.setStatus('current')
blade6SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2010), )
if mibBuilder.loadTexts: blade6SecretKvmVmmTable.setStatus('current')
blade6SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b6SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade6SecretKvmVmmEntry.setStatus('current')
b6SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b6SecretKvmVmmIndex.setStatus('current')
b6SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6SecretKvmState.setStatus('current')
b6SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6SecretVmmState.setStatus('current')
b6MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b6MMSecretVmmKey.setStatus('current')
b6SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 6, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b6SecretVmmKey.setStatus('current')
blade7 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7))
b7DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7DeviceID.setStatus('current')
b7PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7PowerState.setStatus('current')
b7Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7Presence.setStatus('current')
b7Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7Health.setStatus('current')
b7HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7HealthEvents.setStatus('current')
b7ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7ClearSEL.setStatus('current')
b7ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7ExDiskBoardPresence.setStatus('current')
b7BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7BladeVersion.setStatus('current')
b7MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7MACAddress.setStatus('current')
b7Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7Safepwofftime.setStatus('current')
b7BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7BiosBootOption.setStatus('current')
b7Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7Systeminfo.setStatus('current')
b7SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7SystemProperties.setStatus('current')
b7BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7BiosCfg.setStatus('current')
b7WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7WDTBootEnable.setStatus('current')
b7RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7RealTimePower.setStatus('current')
b7PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7PowerCapping.setStatus('current')
b7Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7Powerreference.setStatus('current')
b7ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7ClearBiosConfig.setStatus('current')
b7BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7BmcIP.setStatus('current')
b7BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7BmcUserAdd.setStatus('current')
b7BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7BmcUserDel.setStatus('current')
b7BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7BmcUserPasswd.setStatus('current')
b7BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7BmcUserpropertychg.setStatus('current')
b7BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7BmcGateway.setStatus('current')
b7SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7SlotBitmap.setStatus('current')
b7systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7systemGuid.setStatus('current')
b7ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7ProductName.setStatus('current')
b7BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7BundleVersion.setStatus('current')
blade7SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2001), )
if mibBuilder.loadTexts: blade7SensorTargetTable.setStatus('current')
blade7SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b7Target"))
if mibBuilder.loadTexts: blade7SensorTargetEntry.setStatus('current')
b7Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b7Target.setStatus('current')
b7Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7Current.setStatus('current')
b7ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7ThresholdsAll.setStatus('current')
b7UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7UpperCritical.setStatus('current')
b7UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7UpperNonCritical.setStatus('current')
b7UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7UpperNonRecoverable.setStatus('current')
b7LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7LowerNonCritical.setStatus('current')
b7LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7LowerCritical.setStatus('current')
b7LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7LowerNonRecoverable.setStatus('current')
b7SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7SensorHealth.setStatus('current')
b7SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7SensorHealthEvents.setStatus('current')
b7NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7NegativeHysteresis.setStatus('current')
b7PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7PositiveHysteresis.setStatus('current')
b7SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7SensorType.setStatus('current')
b7SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7SensorFRUInfo.setStatus('current')
blade7FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2002), )
if mibBuilder.loadTexts: blade7FruTable.setStatus('current')
blade7FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b7fruNumber"))
if mibBuilder.loadTexts: blade7FruEntry.setStatus('current')
b7fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b7fruNumber.setStatus('current')
b7FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7FruHotSwapState.setStatus('current')
b7FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7FruLedProperties.setStatus('current')
b7FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7FRUControl.setStatus('current')
b7FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7FRULabel.setStatus('current')
b7ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7ResetReason.setStatus('current')
blade7FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2003), )
if mibBuilder.loadTexts: blade7FruLedTable.setStatus('current')
blade7FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b7FruID"), (0, "HWSMM-MIB", "b7FruLed"))
if mibBuilder.loadTexts: blade7FruLedEntry.setStatus('current')
b7FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b7FruID.setStatus('current')
b7FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b7FruLed.setStatus('current')
b7FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7FruLedColorProps.setStatus('current')
b7FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7FruLedState.setStatus('current')
blade7FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2004), )
if mibBuilder.loadTexts: blade7FruDescriptionTable.setStatus('current')
blade7FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b7fruNum"))
if mibBuilder.loadTexts: blade7FruDescriptionEntry.setStatus('current')
b7fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b7fruNum.setStatus('current')
b7fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7fruBoardDescription.setStatus('current')
b7fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7fruBoardManufacturer.setStatus('current')
b7fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7fruBoardPartNumber.setStatus('current')
b7fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7fruBoardSerialNumber.setStatus('current')
b7fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7fruBoardManufactureDate.setStatus('current')
b7fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7fruProductDescription.setStatus('current')
b7fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7fruProductManufacturer.setStatus('current')
b7fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7fruProductPartNumber.setStatus('current')
b7fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7fruProductSerialNumber.setStatus('current')
b7fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7fruProductRevision.setStatus('current')
b7fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7fruAll.setStatus('current')
blade7CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2006), )
if mibBuilder.loadTexts: blade7CPUTable.setStatus('current')
blade7CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b7CPUIndex"))
if mibBuilder.loadTexts: blade7CPUEntry.setStatus('current')
b7CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b7CPUIndex.setStatus('current')
b7CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7CPUMark.setStatus('current')
b7CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7CPUInfo.setStatus('current')
b7CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7CPUPresent.setStatus('current')
b7CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7CPUHealth.setStatus('current')
b7CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7CPULocation.setStatus('current')
blade7MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2007), )
if mibBuilder.loadTexts: blade7MemoryTable.setStatus('current')
blade7MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b7MEMIndex"))
if mibBuilder.loadTexts: blade7MemoryEntry.setStatus('current')
b7MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b7MEMIndex.setStatus('current')
b7MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7MEMMark.setStatus('current')
b7MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7MEMInfo.setStatus('current')
b7MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7MEMPresent.setStatus('current')
b7MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7MEMHealth.setStatus('current')
b7MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7MEMLocation.setStatus('current')
blade7MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2008), )
if mibBuilder.loadTexts: blade7MezzTable.setStatus('current')
blade7MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b7MezzIndex"))
if mibBuilder.loadTexts: blade7MezzEntry.setStatus('current')
b7MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b7MezzIndex.setStatus('current')
b7MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7MezzMark.setStatus('current')
b7MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7MezzInfo.setStatus('current')
b7MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7MezzPresent.setStatus('current')
b7MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7MezzHealth.setStatus('current')
b7MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7MezzLocation.setStatus('current')
b7MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7MezzMac.setStatus('current')
blade7DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2009), )
if mibBuilder.loadTexts: blade7DiskTable.setStatus('current')
blade7DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b7DiskIndex"))
if mibBuilder.loadTexts: blade7DiskEntry.setStatus('current')
b7DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b7DiskIndex.setStatus('current')
b7DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7DiskMark.setStatus('current')
b7DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7DiskInfo.setStatus('current')
b7DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7DiskPresent.setStatus('current')
b7DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7DiskHealth.setStatus('current')
b7DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7DiskLocation.setStatus('current')
blade7SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2010), )
if mibBuilder.loadTexts: blade7SecretKvmVmmTable.setStatus('current')
blade7SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b7SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade7SecretKvmVmmEntry.setStatus('current')
b7SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b7SecretKvmVmmIndex.setStatus('current')
b7SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7SecretKvmState.setStatus('current')
b7SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7SecretVmmState.setStatus('current')
b7MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b7MMSecretVmmKey.setStatus('current')
b7SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 7, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b7SecretVmmKey.setStatus('current')
blade8 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8))
b8DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8DeviceID.setStatus('current')
b8PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8PowerState.setStatus('current')
b8Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8Presence.setStatus('current')
b8Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8Health.setStatus('current')
b8HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8HealthEvents.setStatus('current')
b8ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8ClearSEL.setStatus('current')
b8ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8ExDiskBoardPresence.setStatus('current')
b8BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8BladeVersion.setStatus('current')
b8MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8MACAddress.setStatus('current')
b8Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8Safepwofftime.setStatus('current')
b8BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8BiosBootOption.setStatus('current')
b8Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8Systeminfo.setStatus('current')
b8SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8SystemProperties.setStatus('current')
b8BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8BiosCfg.setStatus('current')
b8WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8WDTBootEnable.setStatus('current')
b8RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8RealTimePower.setStatus('current')
b8PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8PowerCapping.setStatus('current')
b8Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8Powerreference.setStatus('current')
b8ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8ClearBiosConfig.setStatus('current')
b8BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8BmcIP.setStatus('current')
b8BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8BmcUserAdd.setStatus('current')
b8BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8BmcUserDel.setStatus('current')
b8BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8BmcUserPasswd.setStatus('current')
b8BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8BmcUserpropertychg.setStatus('current')
b8BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8BmcGateway.setStatus('current')
b8SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8SlotBitmap.setStatus('current')
b8systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8systemGuid.setStatus('current')
b8ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8ProductName.setStatus('current')
b8BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8BundleVersion.setStatus('current')
blade8SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2001), )
if mibBuilder.loadTexts: blade8SensorTargetTable.setStatus('current')
blade8SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b8Target"))
if mibBuilder.loadTexts: blade8SensorTargetEntry.setStatus('current')
b8Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b8Target.setStatus('current')
b8Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8Current.setStatus('current')
b8ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8ThresholdsAll.setStatus('current')
b8UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8UpperCritical.setStatus('current')
b8UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8UpperNonCritical.setStatus('current')
b8UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8UpperNonRecoverable.setStatus('current')
b8LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8LowerNonCritical.setStatus('current')
b8LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8LowerCritical.setStatus('current')
b8LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8LowerNonRecoverable.setStatus('current')
b8SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8SensorHealth.setStatus('current')
b8SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8SensorHealthEvents.setStatus('current')
b8NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8NegativeHysteresis.setStatus('current')
b8PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8PositiveHysteresis.setStatus('current')
b8SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8SensorType.setStatus('current')
b8SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8SensorFRUInfo.setStatus('current')
blade8FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2002), )
if mibBuilder.loadTexts: blade8FruTable.setStatus('current')
blade8FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b8fruNumber"))
if mibBuilder.loadTexts: blade8FruEntry.setStatus('current')
b8fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b8fruNumber.setStatus('current')
b8FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8FruHotSwapState.setStatus('current')
b8FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8FruLedProperties.setStatus('current')
b8FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8FRUControl.setStatus('current')
b8FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8FRULabel.setStatus('current')
b8ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8ResetReason.setStatus('current')
blade8FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2003), )
if mibBuilder.loadTexts: blade8FruLedTable.setStatus('current')
blade8FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b8FruID"), (0, "HWSMM-MIB", "b8FruLed"))
if mibBuilder.loadTexts: blade8FruLedEntry.setStatus('current')
b8FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b8FruID.setStatus('current')
b8FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b8FruLed.setStatus('current')
b8FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8FruLedColorProps.setStatus('current')
b8FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8FruLedState.setStatus('current')
blade8FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2004), )
if mibBuilder.loadTexts: blade8FruDescriptionTable.setStatus('current')
blade8FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b8fruNum"))
if mibBuilder.loadTexts: blade8FruDescriptionEntry.setStatus('current')
b8fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b8fruNum.setStatus('current')
b8fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8fruBoardDescription.setStatus('current')
b8fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8fruBoardManufacturer.setStatus('current')
b8fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8fruBoardPartNumber.setStatus('current')
b8fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8fruBoardSerialNumber.setStatus('current')
b8fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8fruBoardManufactureDate.setStatus('current')
b8fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8fruProductDescription.setStatus('current')
b8fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8fruProductManufacturer.setStatus('current')
b8fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8fruProductPartNumber.setStatus('current')
b8fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8fruProductSerialNumber.setStatus('current')
b8fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8fruProductRevision.setStatus('current')
b8fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8fruAll.setStatus('current')
blade8CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2006), )
if mibBuilder.loadTexts: blade8CPUTable.setStatus('current')
blade8CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b8CPUIndex"))
if mibBuilder.loadTexts: blade8CPUEntry.setStatus('current')
b8CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b8CPUIndex.setStatus('current')
b8CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8CPUMark.setStatus('current')
b8CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8CPUInfo.setStatus('current')
b8CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8CPUPresent.setStatus('current')
b8CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8CPUHealth.setStatus('current')
b8CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8CPULocation.setStatus('current')
blade8MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2007), )
if mibBuilder.loadTexts: blade8MemoryTable.setStatus('current')
blade8MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b8MEMIndex"))
if mibBuilder.loadTexts: blade8MemoryEntry.setStatus('current')
b8MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b8MEMIndex.setStatus('current')
b8MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8MEMMark.setStatus('current')
b8MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8MEMInfo.setStatus('current')
b8MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8MEMPresent.setStatus('current')
b8MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8MEMHealth.setStatus('current')
b8MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8MEMLocation.setStatus('current')
blade8MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2008), )
if mibBuilder.loadTexts: blade8MezzTable.setStatus('current')
blade8MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b8MezzIndex"))
if mibBuilder.loadTexts: blade8MezzEntry.setStatus('current')
b8MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b8MezzIndex.setStatus('current')
b8MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8MezzMark.setStatus('current')
b8MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8MezzInfo.setStatus('current')
b8MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8MezzPresent.setStatus('current')
b8MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8MezzHealth.setStatus('current')
b8MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8MezzLocation.setStatus('current')
b8MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8MezzMac.setStatus('current')
blade8DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2009), )
if mibBuilder.loadTexts: blade8DiskTable.setStatus('current')
blade8DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b8DiskIndex"))
if mibBuilder.loadTexts: blade8DiskEntry.setStatus('current')
b8DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b8DiskIndex.setStatus('current')
b8DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8DiskMark.setStatus('current')
b8DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8DiskInfo.setStatus('current')
b8DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8DiskPresent.setStatus('current')
b8DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8DiskHealth.setStatus('current')
b8DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8DiskLocation.setStatus('current')
blade8SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2010), )
if mibBuilder.loadTexts: blade8SecretKvmVmmTable.setStatus('current')
blade8SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b8SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade8SecretKvmVmmEntry.setStatus('current')
b8SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b8SecretKvmVmmIndex.setStatus('current')
b8SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8SecretKvmState.setStatus('current')
b8SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8SecretVmmState.setStatus('current')
b8MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b8MMSecretVmmKey.setStatus('current')
b8SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 8, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b8SecretVmmKey.setStatus('current')
blade9 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9))
b9DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9DeviceID.setStatus('current')
b9PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9PowerState.setStatus('current')
b9Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9Presence.setStatus('current')
b9Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9Health.setStatus('current')
b9HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9HealthEvents.setStatus('current')
b9ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9ClearSEL.setStatus('current')
b9ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9ExDiskBoardPresence.setStatus('current')
b9BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9BladeVersion.setStatus('current')
b9MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9MACAddress.setStatus('current')
b9Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9Safepwofftime.setStatus('current')
b9BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9BiosBootOption.setStatus('current')
b9Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9Systeminfo.setStatus('current')
b9SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9SystemProperties.setStatus('current')
b9BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9BiosCfg.setStatus('current')
b9WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9WDTBootEnable.setStatus('current')
b9RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9RealTimePower.setStatus('current')
b9PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9PowerCapping.setStatus('current')
b9Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9Powerreference.setStatus('current')
b9ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9ClearBiosConfig.setStatus('current')
b9BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9BmcIP.setStatus('current')
b9BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9BmcUserAdd.setStatus('current')
b9BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9BmcUserDel.setStatus('current')
b9BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9BmcUserPasswd.setStatus('current')
b9BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9BmcUserpropertychg.setStatus('current')
b9BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9BmcGateway.setStatus('current')
b9SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9SlotBitmap.setStatus('current')
b9systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9systemGuid.setStatus('current')
b9ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9ProductName.setStatus('current')
b9BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9BundleVersion.setStatus('current')
blade9SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2001), )
if mibBuilder.loadTexts: blade9SensorTargetTable.setStatus('current')
blade9SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b9Target"))
if mibBuilder.loadTexts: blade9SensorTargetEntry.setStatus('current')
b9Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b9Target.setStatus('current')
b9Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9Current.setStatus('current')
b9ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9ThresholdsAll.setStatus('current')
b9UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9UpperCritical.setStatus('current')
b9UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9UpperNonCritical.setStatus('current')
b9UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9UpperNonRecoverable.setStatus('current')
b9LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9LowerNonCritical.setStatus('current')
b9LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9LowerCritical.setStatus('current')
b9LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9LowerNonRecoverable.setStatus('current')
b9SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9SensorHealth.setStatus('current')
b9SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9SensorHealthEvents.setStatus('current')
b9NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9NegativeHysteresis.setStatus('current')
b9PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9PositiveHysteresis.setStatus('current')
b9SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9SensorType.setStatus('current')
b9SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9SensorFRUInfo.setStatus('current')
blade9FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2002), )
if mibBuilder.loadTexts: blade9FruTable.setStatus('current')
blade9FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b9fruNumber"))
if mibBuilder.loadTexts: blade9FruEntry.setStatus('current')
b9fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b9fruNumber.setStatus('current')
b9FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9FruHotSwapState.setStatus('current')
b9FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9FruLedProperties.setStatus('current')
b9FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9FRUControl.setStatus('current')
b9FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9FRULabel.setStatus('current')
b9ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9ResetReason.setStatus('current')
blade9FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2003), )
if mibBuilder.loadTexts: blade9FruLedTable.setStatus('current')
blade9FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b9FruID"), (0, "HWSMM-MIB", "b9FruLed"))
if mibBuilder.loadTexts: blade9FruLedEntry.setStatus('current')
b9FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b9FruID.setStatus('current')
b9FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b9FruLed.setStatus('current')
b9FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9FruLedColorProps.setStatus('current')
b9FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9FruLedState.setStatus('current')
blade9FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2004), )
if mibBuilder.loadTexts: blade9FruDescriptionTable.setStatus('current')
blade9FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b9fruNum"))
if mibBuilder.loadTexts: blade9FruDescriptionEntry.setStatus('current')
b9fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b9fruNum.setStatus('current')
b9fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9fruBoardDescription.setStatus('current')
b9fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9fruBoardManufacturer.setStatus('current')
b9fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9fruBoardPartNumber.setStatus('current')
b9fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9fruBoardSerialNumber.setStatus('current')
b9fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9fruBoardManufactureDate.setStatus('current')
b9fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9fruProductDescription.setStatus('current')
b9fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9fruProductManufacturer.setStatus('current')
b9fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9fruProductPartNumber.setStatus('current')
b9fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9fruProductSerialNumber.setStatus('current')
b9fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9fruProductRevision.setStatus('current')
b9fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9fruAll.setStatus('current')
blade9CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2006), )
if mibBuilder.loadTexts: blade9CPUTable.setStatus('current')
blade9CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b9CPUIndex"))
if mibBuilder.loadTexts: blade9CPUEntry.setStatus('current')
b9CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b9CPUIndex.setStatus('current')
b9CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9CPUMark.setStatus('current')
b9CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9CPUInfo.setStatus('current')
b9CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9CPUPresent.setStatus('current')
b9CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9CPUHealth.setStatus('current')
b9CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9CPULocation.setStatus('current')
blade9MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2007), )
if mibBuilder.loadTexts: blade9MemoryTable.setStatus('current')
blade9MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b9MEMIndex"))
if mibBuilder.loadTexts: blade9MemoryEntry.setStatus('current')
b9MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b9MEMIndex.setStatus('current')
b9MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9MEMMark.setStatus('current')
b9MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9MEMInfo.setStatus('current')
b9MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9MEMPresent.setStatus('current')
b9MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9MEMHealth.setStatus('current')
b9MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9MEMLocation.setStatus('current')
blade9MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2008), )
if mibBuilder.loadTexts: blade9MezzTable.setStatus('current')
blade9MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b9MezzIndex"))
if mibBuilder.loadTexts: blade9MezzEntry.setStatus('current')
b9MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b9MezzIndex.setStatus('current')
b9MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9MezzMark.setStatus('current')
b9MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9MezzInfo.setStatus('current')
b9MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9MezzPresent.setStatus('current')
b9MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9MezzHealth.setStatus('current')
b9MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9MezzLocation.setStatus('current')
b9MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9MezzMac.setStatus('current')
blade9DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2009), )
if mibBuilder.loadTexts: blade9DiskTable.setStatus('current')
blade9DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b9DiskIndex"))
if mibBuilder.loadTexts: blade9DiskEntry.setStatus('current')
b9DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b9DiskIndex.setStatus('current')
b9DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9DiskMark.setStatus('current')
b9DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9DiskInfo.setStatus('current')
b9DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9DiskPresent.setStatus('current')
b9DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9DiskHealth.setStatus('current')
b9DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9DiskLocation.setStatus('current')
blade9SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2010), )
if mibBuilder.loadTexts: blade9SecretKvmVmmTable.setStatus('current')
blade9SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b9SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade9SecretKvmVmmEntry.setStatus('current')
b9SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b9SecretKvmVmmIndex.setStatus('current')
b9SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9SecretKvmState.setStatus('current')
b9SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9SecretVmmState.setStatus('current')
b9MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b9MMSecretVmmKey.setStatus('current')
b9SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 9, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b9SecretVmmKey.setStatus('current')
blade10 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10))
b10DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10DeviceID.setStatus('current')
b10PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10PowerState.setStatus('current')
b10Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10Presence.setStatus('current')
b10Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10Health.setStatus('current')
b10HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10HealthEvents.setStatus('current')
b10ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10ClearSEL.setStatus('current')
b10ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10ExDiskBoardPresence.setStatus('current')
b10BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10BladeVersion.setStatus('current')
b10MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10MACAddress.setStatus('current')
b10Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10Safepwofftime.setStatus('current')
b10BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10BiosBootOption.setStatus('current')
b10Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10Systeminfo.setStatus('current')
b10SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10SystemProperties.setStatus('current')
b10BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10BiosCfg.setStatus('current')
b10WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10WDTBootEnable.setStatus('current')
b10RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10RealTimePower.setStatus('current')
b10PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10PowerCapping.setStatus('current')
b10Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10Powerreference.setStatus('current')
b10ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10ClearBiosConfig.setStatus('current')
b10BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10BmcIP.setStatus('current')
b10BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10BmcUserAdd.setStatus('current')
b10BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10BmcUserDel.setStatus('current')
b10BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10BmcUserPasswd.setStatus('current')
b10BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10BmcUserpropertychg.setStatus('current')
b10BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10BmcGateway.setStatus('current')
b10SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10SlotBitmap.setStatus('current')
b10systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10systemGuid.setStatus('current')
b10ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10ProductName.setStatus('current')
b10BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10BundleVersion.setStatus('current')
blade10SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2001), )
if mibBuilder.loadTexts: blade10SensorTargetTable.setStatus('current')
blade10SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b10Target"))
if mibBuilder.loadTexts: blade10SensorTargetEntry.setStatus('current')
b10Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b10Target.setStatus('current')
b10Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10Current.setStatus('current')
b10ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10ThresholdsAll.setStatus('current')
b10UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10UpperCritical.setStatus('current')
b10UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10UpperNonCritical.setStatus('current')
b10UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10UpperNonRecoverable.setStatus('current')
b10LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10LowerNonCritical.setStatus('current')
b10LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10LowerCritical.setStatus('current')
b10LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10LowerNonRecoverable.setStatus('current')
b10SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10SensorHealth.setStatus('current')
b10SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10SensorHealthEvents.setStatus('current')
b10NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10NegativeHysteresis.setStatus('current')
b10PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10PositiveHysteresis.setStatus('current')
b10SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10SensorType.setStatus('current')
b10SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10SensorFRUInfo.setStatus('current')
blade10FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2002), )
if mibBuilder.loadTexts: blade10FruTable.setStatus('current')
blade10FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b10fruNumber"))
if mibBuilder.loadTexts: blade10FruEntry.setStatus('current')
b10fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b10fruNumber.setStatus('current')
b10FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10FruHotSwapState.setStatus('current')
b10FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10FruLedProperties.setStatus('current')
b10FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10FRUControl.setStatus('current')
b10FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10FRULabel.setStatus('current')
b10ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10ResetReason.setStatus('current')
blade10FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2003), )
if mibBuilder.loadTexts: blade10FruLedTable.setStatus('current')
blade10FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b10FruID"), (0, "HWSMM-MIB", "b10FruLed"))
if mibBuilder.loadTexts: blade10FruLedEntry.setStatus('current')
b10FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b10FruID.setStatus('current')
b10FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b10FruLed.setStatus('current')
b10FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10FruLedColorProps.setStatus('current')
b10FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10FruLedState.setStatus('current')
blade10FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2004), )
if mibBuilder.loadTexts: blade10FruDescriptionTable.setStatus('current')
blade10FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b10fruNum"))
if mibBuilder.loadTexts: blade10FruDescriptionEntry.setStatus('current')
b10fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b10fruNum.setStatus('current')
b10fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10fruBoardDescription.setStatus('current')
b10fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10fruBoardManufacturer.setStatus('current')
b10fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10fruBoardPartNumber.setStatus('current')
b10fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10fruBoardSerialNumber.setStatus('current')
b10fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10fruBoardManufactureDate.setStatus('current')
b10fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10fruProductDescription.setStatus('current')
b10fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10fruProductManufacturer.setStatus('current')
b10fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10fruProductPartNumber.setStatus('current')
b10fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10fruProductSerialNumber.setStatus('current')
b10fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10fruProductRevision.setStatus('current')
b10fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10fruAll.setStatus('current')
blade10CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2006), )
if mibBuilder.loadTexts: blade10CPUTable.setStatus('current')
blade10CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b10CPUIndex"))
if mibBuilder.loadTexts: blade10CPUEntry.setStatus('current')
b10CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b10CPUIndex.setStatus('current')
b10CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10CPUMark.setStatus('current')
b10CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10CPUInfo.setStatus('current')
b10CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10CPUPresent.setStatus('current')
b10CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10CPUHealth.setStatus('current')
b10CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10CPULocation.setStatus('current')
blade10MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2007), )
if mibBuilder.loadTexts: blade10MemoryTable.setStatus('current')
blade10MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b10MEMIndex"))
if mibBuilder.loadTexts: blade10MemoryEntry.setStatus('current')
b10MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b10MEMIndex.setStatus('current')
b10MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10MEMMark.setStatus('current')
b10MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10MEMInfo.setStatus('current')
b10MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10MEMPresent.setStatus('current')
b10MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10MEMHealth.setStatus('current')
b10MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10MEMLocation.setStatus('current')
blade10MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2008), )
if mibBuilder.loadTexts: blade10MezzTable.setStatus('current')
blade10MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b10MezzIndex"))
if mibBuilder.loadTexts: blade10MezzEntry.setStatus('current')
b10MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b10MezzIndex.setStatus('current')
b10MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10MezzMark.setStatus('current')
b10MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10MezzInfo.setStatus('current')
b10MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10MezzPresent.setStatus('current')
b10MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10MezzHealth.setStatus('current')
b10MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10MezzLocation.setStatus('current')
b10MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10MezzMac.setStatus('current')
blade10DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2009), )
if mibBuilder.loadTexts: blade10DiskTable.setStatus('current')
blade10DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b10DiskIndex"))
if mibBuilder.loadTexts: blade10DiskEntry.setStatus('current')
b10DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b10DiskIndex.setStatus('current')
b10DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10DiskMark.setStatus('current')
b10DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10DiskInfo.setStatus('current')
b10DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10DiskPresent.setStatus('current')
b10DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10DiskHealth.setStatus('current')
b10DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10DiskLocation.setStatus('current')
blade10SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2010), )
if mibBuilder.loadTexts: blade10SecretKvmVmmTable.setStatus('current')
blade10SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b10SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade10SecretKvmVmmEntry.setStatus('current')
b10SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b10SecretKvmVmmIndex.setStatus('current')
b10SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10SecretKvmState.setStatus('current')
b10SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10SecretVmmState.setStatus('current')
b10MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b10MMSecretVmmKey.setStatus('current')
b10SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 10, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b10SecretVmmKey.setStatus('current')
blade11 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11))
b11DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11DeviceID.setStatus('current')
b11PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11PowerState.setStatus('current')
b11Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11Presence.setStatus('current')
b11Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11Health.setStatus('current')
b11HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11HealthEvents.setStatus('current')
b11ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11ClearSEL.setStatus('current')
b11ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11ExDiskBoardPresence.setStatus('current')
b11BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11BladeVersion.setStatus('current')
b11MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11MACAddress.setStatus('current')
b11Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11Safepwofftime.setStatus('current')
b11BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11BiosBootOption.setStatus('current')
b11Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11Systeminfo.setStatus('current')
b11SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11SystemProperties.setStatus('current')
b11BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11BiosCfg.setStatus('current')
b11WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11WDTBootEnable.setStatus('current')
b11RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11RealTimePower.setStatus('current')
b11PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11PowerCapping.setStatus('current')
b11Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11Powerreference.setStatus('current')
b11ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11ClearBiosConfig.setStatus('current')
b11BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11BmcIP.setStatus('current')
b11BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11BmcUserAdd.setStatus('current')
b11BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11BmcUserDel.setStatus('current')
b11BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11BmcUserPasswd.setStatus('current')
b11BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11BmcUserpropertychg.setStatus('current')
b11BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11BmcGateway.setStatus('current')
b11SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11SlotBitmap.setStatus('current')
b11systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11systemGuid.setStatus('current')
b11ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11ProductName.setStatus('current')
b11BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11BundleVersion.setStatus('current')
blade11SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2001), )
if mibBuilder.loadTexts: blade11SensorTargetTable.setStatus('current')
blade11SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b11Target"))
if mibBuilder.loadTexts: blade11SensorTargetEntry.setStatus('current')
b11Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b11Target.setStatus('current')
b11Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11Current.setStatus('current')
b11ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11ThresholdsAll.setStatus('current')
b11UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11UpperCritical.setStatus('current')
b11UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11UpperNonCritical.setStatus('current')
b11UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11UpperNonRecoverable.setStatus('current')
b11LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11LowerNonCritical.setStatus('current')
b11LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11LowerCritical.setStatus('current')
b11LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11LowerNonRecoverable.setStatus('current')
b11SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11SensorHealth.setStatus('current')
b11SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11SensorHealthEvents.setStatus('current')
b11NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11NegativeHysteresis.setStatus('current')
b11PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11PositiveHysteresis.setStatus('current')
b11SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11SensorType.setStatus('current')
b11SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11SensorFRUInfo.setStatus('current')
blade11FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2002), )
if mibBuilder.loadTexts: blade11FruTable.setStatus('current')
blade11FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b11fruNumber"))
if mibBuilder.loadTexts: blade11FruEntry.setStatus('current')
b11fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b11fruNumber.setStatus('current')
b11FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11FruHotSwapState.setStatus('current')
b11FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11FruLedProperties.setStatus('current')
b11FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11FRUControl.setStatus('current')
b11FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11FRULabel.setStatus('current')
b11ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11ResetReason.setStatus('current')
blade11FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2003), )
if mibBuilder.loadTexts: blade11FruLedTable.setStatus('current')
blade11FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b11FruID"), (0, "HWSMM-MIB", "b11FruLed"))
if mibBuilder.loadTexts: blade11FruLedEntry.setStatus('current')
b11FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b11FruID.setStatus('current')
b11FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b11FruLed.setStatus('current')
b11FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11FruLedColorProps.setStatus('current')
b11FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11FruLedState.setStatus('current')
blade11FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2004), )
if mibBuilder.loadTexts: blade11FruDescriptionTable.setStatus('current')
blade11FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b11fruNum"))
if mibBuilder.loadTexts: blade11FruDescriptionEntry.setStatus('current')
b11fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b11fruNum.setStatus('current')
b11fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11fruBoardDescription.setStatus('current')
b11fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11fruBoardManufacturer.setStatus('current')
b11fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11fruBoardPartNumber.setStatus('current')
b11fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11fruBoardSerialNumber.setStatus('current')
b11fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11fruBoardManufactureDate.setStatus('current')
b11fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11fruProductDescription.setStatus('current')
b11fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11fruProductManufacturer.setStatus('current')
b11fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11fruProductPartNumber.setStatus('current')
b11fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11fruProductSerialNumber.setStatus('current')
b11fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11fruProductRevision.setStatus('current')
b11fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11fruAll.setStatus('current')
blade11CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2006), )
if mibBuilder.loadTexts: blade11CPUTable.setStatus('current')
blade11CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b11CPUIndex"))
if mibBuilder.loadTexts: blade11CPUEntry.setStatus('current')
b11CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b11CPUIndex.setStatus('current')
b11CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11CPUMark.setStatus('current')
b11CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11CPUInfo.setStatus('current')
b11CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11CPUPresent.setStatus('current')
b11CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11CPUHealth.setStatus('current')
b11CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11CPULocation.setStatus('current')
blade11MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2007), )
if mibBuilder.loadTexts: blade11MemoryTable.setStatus('current')
blade11MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b11MEMIndex"))
if mibBuilder.loadTexts: blade11MemoryEntry.setStatus('current')
b11MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b11MEMIndex.setStatus('current')
b11MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11MEMMark.setStatus('current')
b11MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11MEMInfo.setStatus('current')
b11MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11MEMPresent.setStatus('current')
b11MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11MEMHealth.setStatus('current')
b11MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11MEMLocation.setStatus('current')
blade11MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2008), )
if mibBuilder.loadTexts: blade11MezzTable.setStatus('current')
blade11MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b11MezzIndex"))
if mibBuilder.loadTexts: blade11MezzEntry.setStatus('current')
b11MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b11MezzIndex.setStatus('current')
b11MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11MezzMark.setStatus('current')
b11MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11MezzInfo.setStatus('current')
b11MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11MezzPresent.setStatus('current')
b11MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11MezzHealth.setStatus('current')
b11MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11MezzLocation.setStatus('current')
b11MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11MezzMac.setStatus('current')
blade11DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2009), )
if mibBuilder.loadTexts: blade11DiskTable.setStatus('current')
blade11DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b11DiskIndex"))
if mibBuilder.loadTexts: blade11DiskEntry.setStatus('current')
b11DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b11DiskIndex.setStatus('current')
b11DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11DiskMark.setStatus('current')
b11DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11DiskInfo.setStatus('current')
b11DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11DiskPresent.setStatus('current')
b11DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11DiskHealth.setStatus('current')
b11DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11DiskLocation.setStatus('current')
blade11SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2010), )
if mibBuilder.loadTexts: blade11SecretKvmVmmTable.setStatus('current')
blade11SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b11SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade11SecretKvmVmmEntry.setStatus('current')
b11SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b11SecretKvmVmmIndex.setStatus('current')
b11SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11SecretKvmState.setStatus('current')
b11SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11SecretVmmState.setStatus('current')
b11MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b11MMSecretVmmKey.setStatus('current')
b11SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 11, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b11SecretVmmKey.setStatus('current')
blade12 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12))
b12DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12DeviceID.setStatus('current')
b12PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12PowerState.setStatus('current')
b12Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12Presence.setStatus('current')
b12Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12Health.setStatus('current')
b12HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12HealthEvents.setStatus('current')
b12ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12ClearSEL.setStatus('current')
b12ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12ExDiskBoardPresence.setStatus('current')
b12BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12BladeVersion.setStatus('current')
b12MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12MACAddress.setStatus('current')
b12Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12Safepwofftime.setStatus('current')
b12BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12BiosBootOption.setStatus('current')
b12Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12Systeminfo.setStatus('current')
b12SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12SystemProperties.setStatus('current')
b12BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12BiosCfg.setStatus('current')
b12WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12WDTBootEnable.setStatus('current')
b12RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12RealTimePower.setStatus('current')
b12PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12PowerCapping.setStatus('current')
b12Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12Powerreference.setStatus('current')
b12ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12ClearBiosConfig.setStatus('current')
b12BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12BmcIP.setStatus('current')
b12BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12BmcUserAdd.setStatus('current')
b12BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12BmcUserDel.setStatus('current')
b12BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12BmcUserPasswd.setStatus('current')
b12BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12BmcUserpropertychg.setStatus('current')
b12BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12BmcGateway.setStatus('current')
b12SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12SlotBitmap.setStatus('current')
b12systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12systemGuid.setStatus('current')
b12ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12ProductName.setStatus('current')
b12BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12BundleVersion.setStatus('current')
blade12SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2001), )
if mibBuilder.loadTexts: blade12SensorTargetTable.setStatus('current')
blade12SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b12Target"))
if mibBuilder.loadTexts: blade12SensorTargetEntry.setStatus('current')
b12Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b12Target.setStatus('current')
b12Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12Current.setStatus('current')
b12ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12ThresholdsAll.setStatus('current')
b12UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12UpperCritical.setStatus('current')
b12UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12UpperNonCritical.setStatus('current')
b12UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12UpperNonRecoverable.setStatus('current')
b12LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12LowerNonCritical.setStatus('current')
b12LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12LowerCritical.setStatus('current')
b12LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12LowerNonRecoverable.setStatus('current')
b12SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12SensorHealth.setStatus('current')
b12SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12SensorHealthEvents.setStatus('current')
b12NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12NegativeHysteresis.setStatus('current')
b12PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12PositiveHysteresis.setStatus('current')
b12SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12SensorType.setStatus('current')
b12SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12SensorFRUInfo.setStatus('current')
blade12FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2002), )
if mibBuilder.loadTexts: blade12FruTable.setStatus('current')
blade12FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b12fruNumber"))
if mibBuilder.loadTexts: blade12FruEntry.setStatus('current')
b12fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b12fruNumber.setStatus('current')
b12FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12FruHotSwapState.setStatus('current')
b12FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12FruLedProperties.setStatus('current')
b12FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12FRUControl.setStatus('current')
b12FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12FRULabel.setStatus('current')
b12ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12ResetReason.setStatus('current')
blade12FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2003), )
if mibBuilder.loadTexts: blade12FruLedTable.setStatus('current')
blade12FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b12FruID"), (0, "HWSMM-MIB", "b12FruLed"))
if mibBuilder.loadTexts: blade12FruLedEntry.setStatus('current')
b12FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b12FruID.setStatus('current')
b12FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b12FruLed.setStatus('current')
b12FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12FruLedColorProps.setStatus('current')
b12FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12FruLedState.setStatus('current')
blade12FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2004), )
if mibBuilder.loadTexts: blade12FruDescriptionTable.setStatus('current')
blade12FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b12fruNum"))
if mibBuilder.loadTexts: blade12FruDescriptionEntry.setStatus('current')
b12fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b12fruNum.setStatus('current')
b12fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12fruBoardDescription.setStatus('current')
b12fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12fruBoardManufacturer.setStatus('current')
b12fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12fruBoardPartNumber.setStatus('current')
b12fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12fruBoardSerialNumber.setStatus('current')
b12fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12fruBoardManufactureDate.setStatus('current')
b12fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12fruProductDescription.setStatus('current')
b12fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12fruProductManufacturer.setStatus('current')
b12fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12fruProductPartNumber.setStatus('current')
b12fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12fruProductSerialNumber.setStatus('current')
b12fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12fruProductRevision.setStatus('current')
b12fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12fruAll.setStatus('current')
blade12CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2006), )
if mibBuilder.loadTexts: blade12CPUTable.setStatus('current')
blade12CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b12CPUIndex"))
if mibBuilder.loadTexts: blade12CPUEntry.setStatus('current')
b12CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b12CPUIndex.setStatus('current')
b12CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12CPUMark.setStatus('current')
b12CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12CPUInfo.setStatus('current')
b12CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12CPUPresent.setStatus('current')
b12CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12CPUHealth.setStatus('current')
b12CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12CPULocation.setStatus('current')
blade12MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2007), )
if mibBuilder.loadTexts: blade12MemoryTable.setStatus('current')
blade12MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b12MEMIndex"))
if mibBuilder.loadTexts: blade12MemoryEntry.setStatus('current')
b12MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b12MEMIndex.setStatus('current')
b12MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12MEMMark.setStatus('current')
b12MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12MEMInfo.setStatus('current')
b12MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12MEMPresent.setStatus('current')
b12MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12MEMHealth.setStatus('current')
b12MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12MEMLocation.setStatus('current')
blade12MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2008), )
if mibBuilder.loadTexts: blade12MezzTable.setStatus('current')
blade12MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b12MezzIndex"))
if mibBuilder.loadTexts: blade12MezzEntry.setStatus('current')
b12MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b12MezzIndex.setStatus('current')
b12MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12MezzMark.setStatus('current')
b12MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12MezzInfo.setStatus('current')
b12MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12MezzPresent.setStatus('current')
b12MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12MezzHealth.setStatus('current')
b12MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12MezzLocation.setStatus('current')
b12MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12MezzMac.setStatus('current')
blade12DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2009), )
if mibBuilder.loadTexts: blade12DiskTable.setStatus('current')
blade12DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b12DiskIndex"))
if mibBuilder.loadTexts: blade12DiskEntry.setStatus('current')
b12DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b12DiskIndex.setStatus('current')
b12DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12DiskMark.setStatus('current')
b12DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12DiskInfo.setStatus('current')
b12DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12DiskPresent.setStatus('current')
b12DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12DiskHealth.setStatus('current')
b12DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12DiskLocation.setStatus('current')
blade12SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2010), )
if mibBuilder.loadTexts: blade12SecretKvmVmmTable.setStatus('current')
blade12SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b12SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade12SecretKvmVmmEntry.setStatus('current')
b12SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b12SecretKvmVmmIndex.setStatus('current')
b12SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12SecretKvmState.setStatus('current')
b12SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12SecretVmmState.setStatus('current')
b12MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b12MMSecretVmmKey.setStatus('current')
b12SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 12, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b12SecretVmmKey.setStatus('current')
blade13 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13))
b13DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13DeviceID.setStatus('current')
b13PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13PowerState.setStatus('current')
b13Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13Presence.setStatus('current')
b13Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13Health.setStatus('current')
b13HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13HealthEvents.setStatus('current')
b13ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13ClearSEL.setStatus('current')
b13ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13ExDiskBoardPresence.setStatus('current')
b13BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13BladeVersion.setStatus('current')
b13MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13MACAddress.setStatus('current')
b13Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13Safepwofftime.setStatus('current')
b13BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13BiosBootOption.setStatus('current')
b13Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13Systeminfo.setStatus('current')
b13SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13SystemProperties.setStatus('current')
b13BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13BiosCfg.setStatus('current')
b13WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13WDTBootEnable.setStatus('current')
b13RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13RealTimePower.setStatus('current')
b13PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13PowerCapping.setStatus('current')
b13Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13Powerreference.setStatus('current')
b13ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13ClearBiosConfig.setStatus('current')
b13BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13BmcIP.setStatus('current')
b13BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13BmcUserAdd.setStatus('current')
b13BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13BmcUserDel.setStatus('current')
b13BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13BmcUserPasswd.setStatus('current')
b13BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13BmcUserpropertychg.setStatus('current')
b13BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13BmcGateway.setStatus('current')
b13SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13SlotBitmap.setStatus('current')
b13systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13systemGuid.setStatus('current')
b13ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13ProductName.setStatus('current')
b13BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13BundleVersion.setStatus('current')
blade13SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2001), )
if mibBuilder.loadTexts: blade13SensorTargetTable.setStatus('current')
blade13SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b13Target"))
if mibBuilder.loadTexts: blade13SensorTargetEntry.setStatus('current')
b13Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b13Target.setStatus('current')
b13Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13Current.setStatus('current')
b13ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13ThresholdsAll.setStatus('current')
b13UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13UpperCritical.setStatus('current')
b13UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13UpperNonCritical.setStatus('current')
b13UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13UpperNonRecoverable.setStatus('current')
b13LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13LowerNonCritical.setStatus('current')
b13LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13LowerCritical.setStatus('current')
b13LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13LowerNonRecoverable.setStatus('current')
b13SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13SensorHealth.setStatus('current')
b13SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13SensorHealthEvents.setStatus('current')
b13NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13NegativeHysteresis.setStatus('current')
b13PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13PositiveHysteresis.setStatus('current')
b13SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13SensorType.setStatus('current')
b13SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13SensorFRUInfo.setStatus('current')
blade13FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2002), )
if mibBuilder.loadTexts: blade13FruTable.setStatus('current')
blade13FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b13fruNumber"))
if mibBuilder.loadTexts: blade13FruEntry.setStatus('current')
b13fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b13fruNumber.setStatus('current')
b13FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13FruHotSwapState.setStatus('current')
b13FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13FruLedProperties.setStatus('current')
b13FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13FRUControl.setStatus('current')
b13FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13FRULabel.setStatus('current')
b13ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13ResetReason.setStatus('current')
blade13FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2003), )
if mibBuilder.loadTexts: blade13FruLedTable.setStatus('current')
blade13FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b13FruID"), (0, "HWSMM-MIB", "b13FruLed"))
if mibBuilder.loadTexts: blade13FruLedEntry.setStatus('current')
b13FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b13FruID.setStatus('current')
b13FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b13FruLed.setStatus('current')
b13FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13FruLedColorProps.setStatus('current')
b13FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13FruLedState.setStatus('current')
blade13FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2004), )
if mibBuilder.loadTexts: blade13FruDescriptionTable.setStatus('current')
blade13FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b13fruNum"))
if mibBuilder.loadTexts: blade13FruDescriptionEntry.setStatus('current')
b13fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b13fruNum.setStatus('current')
b13fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13fruBoardDescription.setStatus('current')
b13fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13fruBoardManufacturer.setStatus('current')
b13fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13fruBoardPartNumber.setStatus('current')
b13fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13fruBoardSerialNumber.setStatus('current')
b13fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13fruBoardManufactureDate.setStatus('current')
b13fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13fruProductDescription.setStatus('current')
b13fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13fruProductManufacturer.setStatus('current')
b13fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13fruProductPartNumber.setStatus('current')
b13fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13fruProductSerialNumber.setStatus('current')
b13fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13fruProductRevision.setStatus('current')
b13fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13fruAll.setStatus('current')
blade13CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2006), )
if mibBuilder.loadTexts: blade13CPUTable.setStatus('current')
blade13CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b13CPUIndex"))
if mibBuilder.loadTexts: blade13CPUEntry.setStatus('current')
b13CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b13CPUIndex.setStatus('current')
b13CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13CPUMark.setStatus('current')
b13CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13CPUInfo.setStatus('current')
b13CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13CPUPresent.setStatus('current')
b13CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13CPUHealth.setStatus('current')
b13CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13CPULocation.setStatus('current')
blade13MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2007), )
if mibBuilder.loadTexts: blade13MemoryTable.setStatus('current')
blade13MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b13MEMIndex"))
if mibBuilder.loadTexts: blade13MemoryEntry.setStatus('current')
b13MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b13MEMIndex.setStatus('current')
b13MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13MEMMark.setStatus('current')
b13MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13MEMInfo.setStatus('current')
b13MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13MEMPresent.setStatus('current')
b13MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13MEMHealth.setStatus('current')
b13MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13MEMLocation.setStatus('current')
blade13MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2008), )
if mibBuilder.loadTexts: blade13MezzTable.setStatus('current')
blade13MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b13MezzIndex"))
if mibBuilder.loadTexts: blade13MezzEntry.setStatus('current')
b13MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b13MezzIndex.setStatus('current')
b13MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13MezzMark.setStatus('current')
b13MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13MezzInfo.setStatus('current')
b13MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13MezzPresent.setStatus('current')
b13MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13MezzHealth.setStatus('current')
b13MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13MezzLocation.setStatus('current')
b13MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13MezzMac.setStatus('current')
blade13DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2009), )
if mibBuilder.loadTexts: blade13DiskTable.setStatus('current')
blade13DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b13DiskIndex"))
if mibBuilder.loadTexts: blade13DiskEntry.setStatus('current')
b13DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b13DiskIndex.setStatus('current')
b13DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13DiskMark.setStatus('current')
b13DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13DiskInfo.setStatus('current')
b13DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13DiskPresent.setStatus('current')
b13DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13DiskHealth.setStatus('current')
b13DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13DiskLocation.setStatus('current')
blade13SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2010), )
if mibBuilder.loadTexts: blade13SecretKvmVmmTable.setStatus('current')
blade13SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b13SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade13SecretKvmVmmEntry.setStatus('current')
b13SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b13SecretKvmVmmIndex.setStatus('current')
b13SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13SecretKvmState.setStatus('current')
b13SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13SecretVmmState.setStatus('current')
b13MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b13MMSecretVmmKey.setStatus('current')
b13SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 13, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b13SecretVmmKey.setStatus('current')
blade14 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14))
b14DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14DeviceID.setStatus('current')
b14PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14PowerState.setStatus('current')
b14Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14Presence.setStatus('current')
b14Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14Health.setStatus('current')
b14HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14HealthEvents.setStatus('current')
b14ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14ClearSEL.setStatus('current')
b14ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14ExDiskBoardPresence.setStatus('current')
b14BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14BladeVersion.setStatus('current')
b14MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14MACAddress.setStatus('current')
b14Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14Safepwofftime.setStatus('current')
b14BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14BiosBootOption.setStatus('current')
b14Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14Systeminfo.setStatus('current')
b14SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14SystemProperties.setStatus('current')
b14BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14BiosCfg.setStatus('current')
b14WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14WDTBootEnable.setStatus('current')
b14RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14RealTimePower.setStatus('current')
b14PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14PowerCapping.setStatus('current')
b14Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14Powerreference.setStatus('current')
b14ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14ClearBiosConfig.setStatus('current')
b14BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14BmcIP.setStatus('current')
b14BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14BmcUserAdd.setStatus('current')
b14BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14BmcUserDel.setStatus('current')
b14BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14BmcUserPasswd.setStatus('current')
b14BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14BmcUserpropertychg.setStatus('current')
b14BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14BmcGateway.setStatus('current')
b14SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14SlotBitmap.setStatus('current')
b14systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14systemGuid.setStatus('current')
b14ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14ProductName.setStatus('current')
b14BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14BundleVersion.setStatus('current')
blade14SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2001), )
if mibBuilder.loadTexts: blade14SensorTargetTable.setStatus('current')
blade14SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b14Target"))
if mibBuilder.loadTexts: blade14SensorTargetEntry.setStatus('current')
b14Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b14Target.setStatus('current')
b14Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14Current.setStatus('current')
b14ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14ThresholdsAll.setStatus('current')
b14UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14UpperCritical.setStatus('current')
b14UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14UpperNonCritical.setStatus('current')
b14UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14UpperNonRecoverable.setStatus('current')
b14LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14LowerNonCritical.setStatus('current')
b14LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14LowerCritical.setStatus('current')
b14LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14LowerNonRecoverable.setStatus('current')
b14SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14SensorHealth.setStatus('current')
b14SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14SensorHealthEvents.setStatus('current')
b14NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14NegativeHysteresis.setStatus('current')
b14PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14PositiveHysteresis.setStatus('current')
b14SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14SensorType.setStatus('current')
b14SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14SensorFRUInfo.setStatus('current')
blade14FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2002), )
if mibBuilder.loadTexts: blade14FruTable.setStatus('current')
blade14FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b14fruNumber"))
if mibBuilder.loadTexts: blade14FruEntry.setStatus('current')
b14fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b14fruNumber.setStatus('current')
b14FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14FruHotSwapState.setStatus('current')
b14FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14FruLedProperties.setStatus('current')
b14FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14FRUControl.setStatus('current')
b14FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14FRULabel.setStatus('current')
b14ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14ResetReason.setStatus('current')
blade14FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2003), )
if mibBuilder.loadTexts: blade14FruLedTable.setStatus('current')
blade14FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b14FruID"), (0, "HWSMM-MIB", "b14FruLed"))
if mibBuilder.loadTexts: blade14FruLedEntry.setStatus('current')
b14FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b14FruID.setStatus('current')
b14FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b14FruLed.setStatus('current')
b14FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14FruLedColorProps.setStatus('current')
b14FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14FruLedState.setStatus('current')
blade14FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2004), )
if mibBuilder.loadTexts: blade14FruDescriptionTable.setStatus('current')
blade14FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b14fruNum"))
if mibBuilder.loadTexts: blade14FruDescriptionEntry.setStatus('current')
b14fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b14fruNum.setStatus('current')
b14fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14fruBoardDescription.setStatus('current')
b14fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14fruBoardManufacturer.setStatus('current')
b14fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14fruBoardPartNumber.setStatus('current')
b14fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14fruBoardSerialNumber.setStatus('current')
b14fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14fruBoardManufactureDate.setStatus('current')
b14fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14fruProductDescription.setStatus('current')
b14fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14fruProductManufacturer.setStatus('current')
b14fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14fruProductPartNumber.setStatus('current')
b14fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14fruProductSerialNumber.setStatus('current')
b14fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14fruProductRevision.setStatus('current')
b14fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14fruAll.setStatus('current')
blade14CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2006), )
if mibBuilder.loadTexts: blade14CPUTable.setStatus('current')
blade14CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b14CPUIndex"))
if mibBuilder.loadTexts: blade14CPUEntry.setStatus('current')
b14CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b14CPUIndex.setStatus('current')
b14CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14CPUMark.setStatus('current')
b14CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14CPUInfo.setStatus('current')
b14CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14CPUPresent.setStatus('current')
b14CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14CPUHealth.setStatus('current')
b14CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14CPULocation.setStatus('current')
blade14MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2007), )
if mibBuilder.loadTexts: blade14MemoryTable.setStatus('current')
blade14MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b14MEMIndex"))
if mibBuilder.loadTexts: blade14MemoryEntry.setStatus('current')
b14MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b14MEMIndex.setStatus('current')
b14MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14MEMMark.setStatus('current')
b14MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14MEMInfo.setStatus('current')
b14MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14MEMPresent.setStatus('current')
b14MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14MEMHealth.setStatus('current')
b14MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14MEMLocation.setStatus('current')
blade14MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2008), )
if mibBuilder.loadTexts: blade14MezzTable.setStatus('current')
blade14MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b14MezzIndex"))
if mibBuilder.loadTexts: blade14MezzEntry.setStatus('current')
b14MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b14MezzIndex.setStatus('current')
b14MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14MezzMark.setStatus('current')
b14MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14MezzInfo.setStatus('current')
b14MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14MezzPresent.setStatus('current')
b14MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14MezzHealth.setStatus('current')
b14MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14MezzLocation.setStatus('current')
b14MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14MezzMac.setStatus('current')
blade14DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2009), )
if mibBuilder.loadTexts: blade14DiskTable.setStatus('current')
blade14DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b14DiskIndex"))
if mibBuilder.loadTexts: blade14DiskEntry.setStatus('current')
b14DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b14DiskIndex.setStatus('current')
b14DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14DiskMark.setStatus('current')
b14DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14DiskInfo.setStatus('current')
b14DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14DiskPresent.setStatus('current')
b14DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14DiskHealth.setStatus('current')
b14DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14DiskLocation.setStatus('current')
blade14SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2010), )
if mibBuilder.loadTexts: blade14SecretKvmVmmTable.setStatus('current')
blade14SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b14SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade14SecretKvmVmmEntry.setStatus('current')
b14SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b14SecretKvmVmmIndex.setStatus('current')
b14SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14SecretKvmState.setStatus('current')
b14SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14SecretVmmState.setStatus('current')
b14MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b14MMSecretVmmKey.setStatus('current')
b14SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 14, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b14SecretVmmKey.setStatus('current')
blade15 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15))
b15DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15DeviceID.setStatus('current')
b15PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15PowerState.setStatus('current')
b15Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15Presence.setStatus('current')
b15Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15Health.setStatus('current')
b15HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15HealthEvents.setStatus('current')
b15ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15ClearSEL.setStatus('current')
b15ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15ExDiskBoardPresence.setStatus('current')
b15BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15BladeVersion.setStatus('current')
b15MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15MACAddress.setStatus('current')
b15Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15Safepwofftime.setStatus('current')
b15BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15BiosBootOption.setStatus('current')
b15Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15Systeminfo.setStatus('current')
b15SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15SystemProperties.setStatus('current')
b15BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15BiosCfg.setStatus('current')
b15WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15WDTBootEnable.setStatus('current')
b15RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15RealTimePower.setStatus('current')
b15PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15PowerCapping.setStatus('current')
b15Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15Powerreference.setStatus('current')
b15ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15ClearBiosConfig.setStatus('current')
b15BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15BmcIP.setStatus('current')
b15BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15BmcUserAdd.setStatus('current')
b15BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15BmcUserDel.setStatus('current')
b15BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15BmcUserPasswd.setStatus('current')
b15BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15BmcUserpropertychg.setStatus('current')
b15BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15BmcGateway.setStatus('current')
b15SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15SlotBitmap.setStatus('current')
b15systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15systemGuid.setStatus('current')
b15ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15ProductName.setStatus('current')
b15BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15BundleVersion.setStatus('current')
blade15SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2001), )
if mibBuilder.loadTexts: blade15SensorTargetTable.setStatus('current')
blade15SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b15Target"))
if mibBuilder.loadTexts: blade15SensorTargetEntry.setStatus('current')
b15Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b15Target.setStatus('current')
b15Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15Current.setStatus('current')
b15ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15ThresholdsAll.setStatus('current')
b15UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15UpperCritical.setStatus('current')
b15UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15UpperNonCritical.setStatus('current')
b15UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15UpperNonRecoverable.setStatus('current')
b15LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15LowerNonCritical.setStatus('current')
b15LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15LowerCritical.setStatus('current')
b15LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15LowerNonRecoverable.setStatus('current')
b15SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15SensorHealth.setStatus('current')
b15SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15SensorHealthEvents.setStatus('current')
b15NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15NegativeHysteresis.setStatus('current')
b15PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15PositiveHysteresis.setStatus('current')
b15SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15SensorType.setStatus('current')
b15SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15SensorFRUInfo.setStatus('current')
blade15FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2002), )
if mibBuilder.loadTexts: blade15FruTable.setStatus('current')
blade15FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b15fruNumber"))
if mibBuilder.loadTexts: blade15FruEntry.setStatus('current')
b15fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b15fruNumber.setStatus('current')
b15FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15FruHotSwapState.setStatus('current')
b15FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15FruLedProperties.setStatus('current')
b15FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15FRUControl.setStatus('current')
b15FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15FRULabel.setStatus('current')
b15ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15ResetReason.setStatus('current')
blade15FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2003), )
if mibBuilder.loadTexts: blade15FruLedTable.setStatus('current')
blade15FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b15FruID"), (0, "HWSMM-MIB", "b15FruLed"))
if mibBuilder.loadTexts: blade15FruLedEntry.setStatus('current')
b15FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b15FruID.setStatus('current')
b15FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b15FruLed.setStatus('current')
b15FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15FruLedColorProps.setStatus('current')
b15FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15FruLedState.setStatus('current')
blade15FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2004), )
if mibBuilder.loadTexts: blade15FruDescriptionTable.setStatus('current')
blade15FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b15fruNum"))
if mibBuilder.loadTexts: blade15FruDescriptionEntry.setStatus('current')
b15fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b15fruNum.setStatus('current')
b15fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15fruBoardDescription.setStatus('current')
b15fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15fruBoardManufacturer.setStatus('current')
b15fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15fruBoardPartNumber.setStatus('current')
b15fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15fruBoardSerialNumber.setStatus('current')
b15fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15fruBoardManufactureDate.setStatus('current')
b15fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15fruProductDescription.setStatus('current')
b15fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15fruProductManufacturer.setStatus('current')
b15fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15fruProductPartNumber.setStatus('current')
b15fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15fruProductSerialNumber.setStatus('current')
b15fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15fruProductRevision.setStatus('current')
b15fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15fruAll.setStatus('current')
blade15CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2006), )
if mibBuilder.loadTexts: blade15CPUTable.setStatus('current')
blade15CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b15CPUIndex"))
if mibBuilder.loadTexts: blade15CPUEntry.setStatus('current')
b15CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b15CPUIndex.setStatus('current')
b15CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15CPUMark.setStatus('current')
b15CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15CPUInfo.setStatus('current')
b15CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15CPUPresent.setStatus('current')
b15CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15CPUHealth.setStatus('current')
b15CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15CPULocation.setStatus('current')
blade15MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2007), )
if mibBuilder.loadTexts: blade15MemoryTable.setStatus('current')
blade15MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b15MEMIndex"))
if mibBuilder.loadTexts: blade15MemoryEntry.setStatus('current')
b15MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b15MEMIndex.setStatus('current')
b15MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15MEMMark.setStatus('current')
b15MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15MEMInfo.setStatus('current')
b15MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15MEMPresent.setStatus('current')
b15MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15MEMHealth.setStatus('current')
b15MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15MEMLocation.setStatus('current')
blade15MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2008), )
if mibBuilder.loadTexts: blade15MezzTable.setStatus('current')
blade15MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b15MezzIndex"))
if mibBuilder.loadTexts: blade15MezzEntry.setStatus('current')
b15MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b15MezzIndex.setStatus('current')
b15MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15MezzMark.setStatus('current')
b15MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15MezzInfo.setStatus('current')
b15MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15MezzPresent.setStatus('current')
b15MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15MezzHealth.setStatus('current')
b15MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15MezzLocation.setStatus('current')
b15MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15MezzMac.setStatus('current')
blade15DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2009), )
if mibBuilder.loadTexts: blade15DiskTable.setStatus('current')
blade15DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b15DiskIndex"))
if mibBuilder.loadTexts: blade15DiskEntry.setStatus('current')
b15DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b15DiskIndex.setStatus('current')
b15DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15DiskMark.setStatus('current')
b15DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15DiskInfo.setStatus('current')
b15DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15DiskPresent.setStatus('current')
b15DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15DiskHealth.setStatus('current')
b15DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15DiskLocation.setStatus('current')
blade15SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2010), )
if mibBuilder.loadTexts: blade15SecretKvmVmmTable.setStatus('current')
blade15SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b15SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade15SecretKvmVmmEntry.setStatus('current')
b15SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b15SecretKvmVmmIndex.setStatus('current')
b15SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15SecretKvmState.setStatus('current')
b15SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15SecretVmmState.setStatus('current')
b15MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b15MMSecretVmmKey.setStatus('current')
b15SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 15, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b15SecretVmmKey.setStatus('current')
blade16 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16))
b16DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16DeviceID.setStatus('current')
b16PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16PowerState.setStatus('current')
b16Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16Presence.setStatus('current')
b16Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16Health.setStatus('current')
b16HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16HealthEvents.setStatus('current')
b16ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16ClearSEL.setStatus('current')
b16ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16ExDiskBoardPresence.setStatus('current')
b16BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16BladeVersion.setStatus('current')
b16MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16MACAddress.setStatus('current')
b16Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16Safepwofftime.setStatus('current')
b16BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16BiosBootOption.setStatus('current')
b16Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16Systeminfo.setStatus('current')
b16SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16SystemProperties.setStatus('current')
b16BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16BiosCfg.setStatus('current')
b16WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16WDTBootEnable.setStatus('current')
b16RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16RealTimePower.setStatus('current')
b16PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16PowerCapping.setStatus('current')
b16Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16Powerreference.setStatus('current')
b16ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16ClearBiosConfig.setStatus('current')
b16BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16BmcIP.setStatus('current')
b16BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16BmcUserAdd.setStatus('current')
b16BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16BmcUserDel.setStatus('current')
b16BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16BmcUserPasswd.setStatus('current')
b16BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16BmcUserpropertychg.setStatus('current')
b16BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16BmcGateway.setStatus('current')
b16SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16SlotBitmap.setStatus('current')
b16systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16systemGuid.setStatus('current')
b16ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16ProductName.setStatus('current')
b16BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16BundleVersion.setStatus('current')
blade16SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2001), )
if mibBuilder.loadTexts: blade16SensorTargetTable.setStatus('current')
blade16SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b16Target"))
if mibBuilder.loadTexts: blade16SensorTargetEntry.setStatus('current')
b16Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b16Target.setStatus('current')
b16Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16Current.setStatus('current')
b16ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16ThresholdsAll.setStatus('current')
b16UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16UpperCritical.setStatus('current')
b16UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16UpperNonCritical.setStatus('current')
b16UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16UpperNonRecoverable.setStatus('current')
b16LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16LowerNonCritical.setStatus('current')
b16LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16LowerCritical.setStatus('current')
b16LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16LowerNonRecoverable.setStatus('current')
b16SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16SensorHealth.setStatus('current')
b16SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16SensorHealthEvents.setStatus('current')
b16NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16NegativeHysteresis.setStatus('current')
b16PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16PositiveHysteresis.setStatus('current')
b16SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16SensorType.setStatus('current')
b16SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16SensorFRUInfo.setStatus('current')
blade16FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2002), )
if mibBuilder.loadTexts: blade16FruTable.setStatus('current')
blade16FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b16fruNumber"))
if mibBuilder.loadTexts: blade16FruEntry.setStatus('current')
b16fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b16fruNumber.setStatus('current')
b16FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16FruHotSwapState.setStatus('current')
b16FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16FruLedProperties.setStatus('current')
b16FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16FRUControl.setStatus('current')
b16FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16FRULabel.setStatus('current')
b16ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16ResetReason.setStatus('current')
blade16FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2003), )
if mibBuilder.loadTexts: blade16FruLedTable.setStatus('current')
blade16FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b16FruID"), (0, "HWSMM-MIB", "b16FruLed"))
if mibBuilder.loadTexts: blade16FruLedEntry.setStatus('current')
b16FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b16FruID.setStatus('current')
b16FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b16FruLed.setStatus('current')
b16FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16FruLedColorProps.setStatus('current')
b16FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16FruLedState.setStatus('current')
blade16FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2004), )
if mibBuilder.loadTexts: blade16FruDescriptionTable.setStatus('current')
blade16FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b16fruNum"))
if mibBuilder.loadTexts: blade16FruDescriptionEntry.setStatus('current')
b16fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b16fruNum.setStatus('current')
b16fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16fruBoardDescription.setStatus('current')
b16fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16fruBoardManufacturer.setStatus('current')
b16fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16fruBoardPartNumber.setStatus('current')
b16fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16fruBoardSerialNumber.setStatus('current')
b16fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16fruBoardManufactureDate.setStatus('current')
b16fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16fruProductDescription.setStatus('current')
b16fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16fruProductManufacturer.setStatus('current')
b16fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16fruProductPartNumber.setStatus('current')
b16fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16fruProductSerialNumber.setStatus('current')
b16fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16fruProductRevision.setStatus('current')
b16fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16fruAll.setStatus('current')
blade16CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2006), )
if mibBuilder.loadTexts: blade16CPUTable.setStatus('current')
blade16CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b16CPUIndex"))
if mibBuilder.loadTexts: blade16CPUEntry.setStatus('current')
b16CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b16CPUIndex.setStatus('current')
b16CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16CPUMark.setStatus('current')
b16CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16CPUInfo.setStatus('current')
b16CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16CPUPresent.setStatus('current')
b16CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16CPUHealth.setStatus('current')
b16CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16CPULocation.setStatus('current')
blade16MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2007), )
if mibBuilder.loadTexts: blade16MemoryTable.setStatus('current')
blade16MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b16MEMIndex"))
if mibBuilder.loadTexts: blade16MemoryEntry.setStatus('current')
b16MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b16MEMIndex.setStatus('current')
b16MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16MEMMark.setStatus('current')
b16MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16MEMInfo.setStatus('current')
b16MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16MEMPresent.setStatus('current')
b16MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16MEMHealth.setStatus('current')
b16MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16MEMLocation.setStatus('current')
blade16MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2008), )
if mibBuilder.loadTexts: blade16MezzTable.setStatus('current')
blade16MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b16MezzIndex"))
if mibBuilder.loadTexts: blade16MezzEntry.setStatus('current')
b16MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b16MezzIndex.setStatus('current')
b16MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16MezzMark.setStatus('current')
b16MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16MezzInfo.setStatus('current')
b16MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16MezzPresent.setStatus('current')
b16MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16MezzHealth.setStatus('current')
b16MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16MezzLocation.setStatus('current')
b16MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16MezzMac.setStatus('current')
blade16DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2009), )
if mibBuilder.loadTexts: blade16DiskTable.setStatus('current')
blade16DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b16DiskIndex"))
if mibBuilder.loadTexts: blade16DiskEntry.setStatus('current')
b16DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b16DiskIndex.setStatus('current')
b16DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16DiskMark.setStatus('current')
b16DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16DiskInfo.setStatus('current')
b16DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16DiskPresent.setStatus('current')
b16DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16DiskHealth.setStatus('current')
b16DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16DiskLocation.setStatus('current')
blade16SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2010), )
if mibBuilder.loadTexts: blade16SecretKvmVmmTable.setStatus('current')
blade16SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b16SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade16SecretKvmVmmEntry.setStatus('current')
b16SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b16SecretKvmVmmIndex.setStatus('current')
b16SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16SecretKvmState.setStatus('current')
b16SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16SecretVmmState.setStatus('current')
b16MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b16MMSecretVmmKey.setStatus('current')
b16SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 16, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b16SecretVmmKey.setStatus('current')
blade17 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17))
b17DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17DeviceID.setStatus('current')
b17PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17PowerState.setStatus('current')
b17Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17Presence.setStatus('current')
b17Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17Health.setStatus('current')
b17HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17HealthEvents.setStatus('current')
b17ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17ClearSEL.setStatus('current')
b17ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17ExDiskBoardPresence.setStatus('current')
b17BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17BladeVersion.setStatus('current')
b17MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17MACAddress.setStatus('current')
b17Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17Safepwofftime.setStatus('current')
b17BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17BiosBootOption.setStatus('current')
b17Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17Systeminfo.setStatus('current')
b17SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17SystemProperties.setStatus('current')
b17BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17BiosCfg.setStatus('current')
b17WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17WDTBootEnable.setStatus('current')
b17RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17RealTimePower.setStatus('current')
b17PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17PowerCapping.setStatus('current')
b17Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17Powerreference.setStatus('current')
b17ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17ClearBiosConfig.setStatus('current')
b17BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17BmcIP.setStatus('current')
b17BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17BmcUserAdd.setStatus('current')
b17BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17BmcUserDel.setStatus('current')
b17BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17BmcUserPasswd.setStatus('current')
b17BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17BmcUserpropertychg.setStatus('current')
b17BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17BmcGateway.setStatus('current')
b17SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17SlotBitmap.setStatus('current')
b17systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17systemGuid.setStatus('current')
b17ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17ProductName.setStatus('current')
b17BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17BundleVersion.setStatus('current')
blade17SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2001), )
if mibBuilder.loadTexts: blade17SensorTargetTable.setStatus('current')
blade17SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b1Target"))
if mibBuilder.loadTexts: blade17SensorTargetEntry.setStatus('current')
b17Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b17Target.setStatus('current')
b17Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17Current.setStatus('current')
b17ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17ThresholdsAll.setStatus('current')
b17UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17UpperCritical.setStatus('current')
b17UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17UpperNonCritical.setStatus('current')
b17UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17UpperNonRecoverable.setStatus('current')
b17LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17LowerNonCritical.setStatus('current')
b17LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17LowerCritical.setStatus('current')
b17LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17LowerNonRecoverable.setStatus('current')
b17SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17SensorHealth.setStatus('current')
b17SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17SensorHealthEvents.setStatus('current')
b17NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17NegativeHysteresis.setStatus('current')
b17PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17PositiveHysteresis.setStatus('current')
b17SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17SensorType.setStatus('current')
b17SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17SensorFRUInfo.setStatus('current')
blade17FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2002), )
if mibBuilder.loadTexts: blade17FruTable.setStatus('current')
blade17FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b1fruNumber"))
if mibBuilder.loadTexts: blade17FruEntry.setStatus('current')
b17fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b17fruNumber.setStatus('current')
b17FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17FruHotSwapState.setStatus('current')
b17FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17FruLedProperties.setStatus('current')
b17FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17FRUControl.setStatus('current')
b17FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17FRULabel.setStatus('current')
b17ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17ResetReason.setStatus('current')
blade17FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2003), )
if mibBuilder.loadTexts: blade17FruLedTable.setStatus('current')
blade17FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b1FruID"), (0, "HWSMM-MIB", "b1FruLed"))
if mibBuilder.loadTexts: blade17FruLedEntry.setStatus('current')
b17FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b17FruID.setStatus('current')
b17FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b17FruLed.setStatus('current')
b17FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17FruLedColorProps.setStatus('current')
b17FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17FruLedState.setStatus('current')
blade17FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2004), )
if mibBuilder.loadTexts: blade17FruDescriptionTable.setStatus('current')
blade17FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b1fruNum"))
if mibBuilder.loadTexts: blade17FruDescriptionEntry.setStatus('current')
b17fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b17fruNum.setStatus('current')
b17fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17fruBoardDescription.setStatus('current')
b17fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17fruBoardManufacturer.setStatus('current')
b17fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17fruBoardPartNumber.setStatus('current')
b17fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17fruBoardSerialNumber.setStatus('current')
b17fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17fruBoardManufactureDate.setStatus('current')
b17fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17fruProductDescription.setStatus('current')
b17fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17fruProductManufacturer.setStatus('current')
b17fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17fruProductPartNumber.setStatus('current')
b17fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17fruProductSerialNumber.setStatus('current')
b17fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17fruProductRevision.setStatus('current')
b17fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17fruAll.setStatus('current')
blade17CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2006), )
if mibBuilder.loadTexts: blade17CPUTable.setStatus('current')
blade17CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b17CPUIndex"))
if mibBuilder.loadTexts: blade17CPUEntry.setStatus('current')
b17CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b17CPUIndex.setStatus('current')
b17CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17CPUMark.setStatus('current')
b17CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17CPUInfo.setStatus('current')
b17CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17CPUPresent.setStatus('current')
b17CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17CPUHealth.setStatus('current')
b17CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17CPULocation.setStatus('current')
blade17MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2007), )
if mibBuilder.loadTexts: blade17MemoryTable.setStatus('current')
blade17MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b17MEMIndex"))
if mibBuilder.loadTexts: blade17MemoryEntry.setStatus('current')
b17MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b17MEMIndex.setStatus('current')
b17MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17MEMMark.setStatus('current')
b17MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17MEMInfo.setStatus('current')
b17MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17MEMPresent.setStatus('current')
b17MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17MEMHealth.setStatus('current')
b17MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17MEMLocation.setStatus('current')
blade17MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2008), )
if mibBuilder.loadTexts: blade17MezzTable.setStatus('current')
blade17MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b17MezzIndex"))
if mibBuilder.loadTexts: blade17MezzEntry.setStatus('current')
b17MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b17MezzIndex.setStatus('current')
b17MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17MezzMark.setStatus('current')
b17MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17MezzInfo.setStatus('current')
b17MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17MezzPresent.setStatus('current')
b17MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17MezzHealth.setStatus('current')
b17MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17MezzLocation.setStatus('current')
b17MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17MezzMac.setStatus('current')
blade17DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2009), )
if mibBuilder.loadTexts: blade17DiskTable.setStatus('current')
blade17DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b17DiskIndex"))
if mibBuilder.loadTexts: blade17DiskEntry.setStatus('current')
b17DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b17DiskIndex.setStatus('current')
b17DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17DiskMark.setStatus('current')
b17DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17DiskInfo.setStatus('current')
b17DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17DiskPresent.setStatus('current')
b17DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17DiskHealth.setStatus('current')
b17DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17DiskLocation.setStatus('current')
blade17SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2010), )
if mibBuilder.loadTexts: blade17SecretKvmVmmTable.setStatus('current')
blade17SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b17SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade17SecretKvmVmmEntry.setStatus('current')
b17SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b17SecretKvmVmmIndex.setStatus('current')
b17SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17SecretKvmState.setStatus('current')
b17SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17SecretVmmState.setStatus('current')
b17MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b17MMSecretVmmKey.setStatus('current')
b17SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 17, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b17SecretVmmKey.setStatus('current')
blade18 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18))
b18DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18DeviceID.setStatus('current')
b18PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18PowerState.setStatus('current')
b18Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18Presence.setStatus('current')
b18Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18Health.setStatus('current')
b18HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18HealthEvents.setStatus('current')
b18ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18ClearSEL.setStatus('current')
b18ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18ExDiskBoardPresence.setStatus('current')
b18BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18BladeVersion.setStatus('current')
b18MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18MACAddress.setStatus('current')
b18Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18Safepwofftime.setStatus('current')
b18BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18BiosBootOption.setStatus('current')
b18Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18Systeminfo.setStatus('current')
b18SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18SystemProperties.setStatus('current')
b18BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18BiosCfg.setStatus('current')
b18WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18WDTBootEnable.setStatus('current')
b18RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18RealTimePower.setStatus('current')
b18PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18PowerCapping.setStatus('current')
b18Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18Powerreference.setStatus('current')
b18ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18ClearBiosConfig.setStatus('current')
b18BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18BmcIP.setStatus('current')
b18BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18BmcUserAdd.setStatus('current')
b18BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18BmcUserDel.setStatus('current')
b18BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18BmcUserPasswd.setStatus('current')
b18BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18BmcUserpropertychg.setStatus('current')
b18BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18BmcGateway.setStatus('current')
b18SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18SlotBitmap.setStatus('current')
b18systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18systemGuid.setStatus('current')
b18ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18ProductName.setStatus('current')
b18BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18BundleVersion.setStatus('current')
blade18SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2001), )
if mibBuilder.loadTexts: blade18SensorTargetTable.setStatus('current')
blade18SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b1Target"))
if mibBuilder.loadTexts: blade18SensorTargetEntry.setStatus('current')
b18Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b18Target.setStatus('current')
b18Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18Current.setStatus('current')
b18ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18ThresholdsAll.setStatus('current')
b18UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18UpperCritical.setStatus('current')
b18UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18UpperNonCritical.setStatus('current')
b18UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18UpperNonRecoverable.setStatus('current')
b18LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18LowerNonCritical.setStatus('current')
b18LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18LowerCritical.setStatus('current')
b18LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18LowerNonRecoverable.setStatus('current')
b18SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18SensorHealth.setStatus('current')
b18SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18SensorHealthEvents.setStatus('current')
b18NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18NegativeHysteresis.setStatus('current')
b18PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18PositiveHysteresis.setStatus('current')
b18SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18SensorType.setStatus('current')
b18SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18SensorFRUInfo.setStatus('current')
blade18FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2002), )
if mibBuilder.loadTexts: blade18FruTable.setStatus('current')
blade18FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b1fruNumber"))
if mibBuilder.loadTexts: blade18FruEntry.setStatus('current')
b18fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b18fruNumber.setStatus('current')
b18FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18FruHotSwapState.setStatus('current')
b18FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18FruLedProperties.setStatus('current')
b18FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18FRUControl.setStatus('current')
b18FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18FRULabel.setStatus('current')
b18ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18ResetReason.setStatus('current')
blade18FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2003), )
if mibBuilder.loadTexts: blade18FruLedTable.setStatus('current')
blade18FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b1FruID"), (0, "HWSMM-MIB", "b1FruLed"))
if mibBuilder.loadTexts: blade18FruLedEntry.setStatus('current')
b18FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b18FruID.setStatus('current')
b18FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b18FruLed.setStatus('current')
b18FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18FruLedColorProps.setStatus('current')
b18FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18FruLedState.setStatus('current')
blade18FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2004), )
if mibBuilder.loadTexts: blade18FruDescriptionTable.setStatus('current')
blade18FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b1fruNum"))
if mibBuilder.loadTexts: blade18FruDescriptionEntry.setStatus('current')
b18fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b18fruNum.setStatus('current')
b18fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18fruBoardDescription.setStatus('current')
b18fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18fruBoardManufacturer.setStatus('current')
b18fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18fruBoardPartNumber.setStatus('current')
b18fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18fruBoardSerialNumber.setStatus('current')
b18fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18fruBoardManufactureDate.setStatus('current')
b18fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18fruProductDescription.setStatus('current')
b18fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18fruProductManufacturer.setStatus('current')
b18fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18fruProductPartNumber.setStatus('current')
b18fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18fruProductSerialNumber.setStatus('current')
b18fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18fruProductRevision.setStatus('current')
b18fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18fruAll.setStatus('current')
blade18CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2006), )
if mibBuilder.loadTexts: blade18CPUTable.setStatus('current')
blade18CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b18CPUIndex"))
if mibBuilder.loadTexts: blade18CPUEntry.setStatus('current')
b18CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b18CPUIndex.setStatus('current')
b18CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18CPUMark.setStatus('current')
b18CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18CPUInfo.setStatus('current')
b18CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18CPUPresent.setStatus('current')
b18CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18CPUHealth.setStatus('current')
b18CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18CPULocation.setStatus('current')
blade18MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2007), )
if mibBuilder.loadTexts: blade18MemoryTable.setStatus('current')
blade18MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b18MEMIndex"))
if mibBuilder.loadTexts: blade18MemoryEntry.setStatus('current')
b18MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b18MEMIndex.setStatus('current')
b18MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18MEMMark.setStatus('current')
b18MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18MEMInfo.setStatus('current')
b18MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18MEMPresent.setStatus('current')
b18MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18MEMHealth.setStatus('current')
b18MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18MEMLocation.setStatus('current')
blade18MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2008), )
if mibBuilder.loadTexts: blade18MezzTable.setStatus('current')
blade18MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b18MezzIndex"))
if mibBuilder.loadTexts: blade18MezzEntry.setStatus('current')
b18MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b18MezzIndex.setStatus('current')
b18MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18MezzMark.setStatus('current')
b18MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18MezzInfo.setStatus('current')
b18MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18MezzPresent.setStatus('current')
b18MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18MezzHealth.setStatus('current')
b18MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18MezzLocation.setStatus('current')
b18MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18MezzMac.setStatus('current')
blade18DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2009), )
if mibBuilder.loadTexts: blade18DiskTable.setStatus('current')
blade18DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b18DiskIndex"))
if mibBuilder.loadTexts: blade18DiskEntry.setStatus('current')
b18DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b18DiskIndex.setStatus('current')
b18DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18DiskMark.setStatus('current')
b18DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18DiskInfo.setStatus('current')
b18DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18DiskPresent.setStatus('current')
b18DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18DiskHealth.setStatus('current')
b18DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18DiskLocation.setStatus('current')
blade18SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2010), )
if mibBuilder.loadTexts: blade18SecretKvmVmmTable.setStatus('current')
blade18SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b18SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade18SecretKvmVmmEntry.setStatus('current')
b18SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b18SecretKvmVmmIndex.setStatus('current')
b18SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18SecretKvmState.setStatus('current')
b18SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18SecretVmmState.setStatus('current')
b18MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b18MMSecretVmmKey.setStatus('current')
b18SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 18, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b18SecretVmmKey.setStatus('current')
blade19 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19))
b19DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19DeviceID.setStatus('current')
b19PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19PowerState.setStatus('current')
b19Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19Presence.setStatus('current')
b19Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19Health.setStatus('current')
b19HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19HealthEvents.setStatus('current')
b19ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19ClearSEL.setStatus('current')
b19ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19ExDiskBoardPresence.setStatus('current')
b19BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19BladeVersion.setStatus('current')
b19MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19MACAddress.setStatus('current')
b19Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19Safepwofftime.setStatus('current')
b19BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19BiosBootOption.setStatus('current')
b19Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19Systeminfo.setStatus('current')
b19SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19SystemProperties.setStatus('current')
b19BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19BiosCfg.setStatus('current')
b19WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19WDTBootEnable.setStatus('current')
b19RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19RealTimePower.setStatus('current')
b19PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19PowerCapping.setStatus('current')
b19Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19Powerreference.setStatus('current')
b19ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19ClearBiosConfig.setStatus('current')
b19BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19BmcIP.setStatus('current')
b19BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19BmcUserAdd.setStatus('current')
b19BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19BmcUserDel.setStatus('current')
b19BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19BmcUserPasswd.setStatus('current')
b19BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19BmcUserpropertychg.setStatus('current')
b19BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19BmcGateway.setStatus('current')
b19SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19SlotBitmap.setStatus('current')
b19systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19systemGuid.setStatus('current')
b19ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19ProductName.setStatus('current')
b19BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19BundleVersion.setStatus('current')
blade19SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2001), )
if mibBuilder.loadTexts: blade19SensorTargetTable.setStatus('current')
blade19SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b1Target"))
if mibBuilder.loadTexts: blade19SensorTargetEntry.setStatus('current')
b19Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b19Target.setStatus('current')
b19Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19Current.setStatus('current')
b19ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19ThresholdsAll.setStatus('current')
b19UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19UpperCritical.setStatus('current')
b19UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19UpperNonCritical.setStatus('current')
b19UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19UpperNonRecoverable.setStatus('current')
b19LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19LowerNonCritical.setStatus('current')
b19LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19LowerCritical.setStatus('current')
b19LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19LowerNonRecoverable.setStatus('current')
b19SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19SensorHealth.setStatus('current')
b19SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19SensorHealthEvents.setStatus('current')
b19NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19NegativeHysteresis.setStatus('current')
b19PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19PositiveHysteresis.setStatus('current')
b19SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19SensorType.setStatus('current')
b19SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19SensorFRUInfo.setStatus('current')
blade19FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2002), )
if mibBuilder.loadTexts: blade19FruTable.setStatus('current')
blade19FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b1fruNumber"))
if mibBuilder.loadTexts: blade19FruEntry.setStatus('current')
b19fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b19fruNumber.setStatus('current')
b19FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19FruHotSwapState.setStatus('current')
b19FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19FruLedProperties.setStatus('current')
b19FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19FRUControl.setStatus('current')
b19FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19FRULabel.setStatus('current')
b19ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19ResetReason.setStatus('current')
blade19FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2003), )
if mibBuilder.loadTexts: blade19FruLedTable.setStatus('current')
blade19FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b1FruID"), (0, "HWSMM-MIB", "b1FruLed"))
if mibBuilder.loadTexts: blade19FruLedEntry.setStatus('current')
b19FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b19FruID.setStatus('current')
b19FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b19FruLed.setStatus('current')
b19FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19FruLedColorProps.setStatus('current')
b19FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19FruLedState.setStatus('current')
blade19FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2004), )
if mibBuilder.loadTexts: blade19FruDescriptionTable.setStatus('current')
blade19FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b1fruNum"))
if mibBuilder.loadTexts: blade19FruDescriptionEntry.setStatus('current')
b19fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b19fruNum.setStatus('current')
b19fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19fruBoardDescription.setStatus('current')
b19fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19fruBoardManufacturer.setStatus('current')
b19fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19fruBoardPartNumber.setStatus('current')
b19fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19fruBoardSerialNumber.setStatus('current')
b19fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19fruBoardManufactureDate.setStatus('current')
b19fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19fruProductDescription.setStatus('current')
b19fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19fruProductManufacturer.setStatus('current')
b19fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19fruProductPartNumber.setStatus('current')
b19fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19fruProductSerialNumber.setStatus('current')
b19fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19fruProductRevision.setStatus('current')
b19fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19fruAll.setStatus('current')
blade19CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2006), )
if mibBuilder.loadTexts: blade19CPUTable.setStatus('current')
blade19CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b19CPUIndex"))
if mibBuilder.loadTexts: blade19CPUEntry.setStatus('current')
b19CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b19CPUIndex.setStatus('current')
b19CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19CPUMark.setStatus('current')
b19CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19CPUInfo.setStatus('current')
b19CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19CPUPresent.setStatus('current')
b19CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19CPUHealth.setStatus('current')
b19CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19CPULocation.setStatus('current')
blade19MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2007), )
if mibBuilder.loadTexts: blade19MemoryTable.setStatus('current')
blade19MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b19MEMIndex"))
if mibBuilder.loadTexts: blade19MemoryEntry.setStatus('current')
b19MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b19MEMIndex.setStatus('current')
b19MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19MEMMark.setStatus('current')
b19MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19MEMInfo.setStatus('current')
b19MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19MEMPresent.setStatus('current')
b19MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19MEMHealth.setStatus('current')
b19MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19MEMLocation.setStatus('current')
blade19MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2008), )
if mibBuilder.loadTexts: blade19MezzTable.setStatus('current')
blade19MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b19MezzIndex"))
if mibBuilder.loadTexts: blade19MezzEntry.setStatus('current')
b19MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b19MezzIndex.setStatus('current')
b19MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19MezzMark.setStatus('current')
b19MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19MezzInfo.setStatus('current')
b19MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19MezzPresent.setStatus('current')
b19MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19MezzHealth.setStatus('current')
b19MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19MezzLocation.setStatus('current')
b19MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19MezzMac.setStatus('current')
blade19DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2009), )
if mibBuilder.loadTexts: blade19DiskTable.setStatus('current')
blade19DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b19DiskIndex"))
if mibBuilder.loadTexts: blade19DiskEntry.setStatus('current')
b19DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b19DiskIndex.setStatus('current')
b19DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19DiskMark.setStatus('current')
b19DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19DiskInfo.setStatus('current')
b19DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19DiskPresent.setStatus('current')
b19DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19DiskHealth.setStatus('current')
b19DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19DiskLocation.setStatus('current')
blade19SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2010), )
if mibBuilder.loadTexts: blade19SecretKvmVmmTable.setStatus('current')
blade19SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b19SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade19SecretKvmVmmEntry.setStatus('current')
b19SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b19SecretKvmVmmIndex.setStatus('current')
b19SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19SecretKvmState.setStatus('current')
b19SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19SecretVmmState.setStatus('current')
b19MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b19MMSecretVmmKey.setStatus('current')
b19SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 19, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b19SecretVmmKey.setStatus('current')
blade20 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20))
b20DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20DeviceID.setStatus('current')
b20PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20PowerState.setStatus('current')
b20Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20Presence.setStatus('current')
b20Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20Health.setStatus('current')
b20HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20HealthEvents.setStatus('current')
b20ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20ClearSEL.setStatus('current')
b20ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20ExDiskBoardPresence.setStatus('current')
b20BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20BladeVersion.setStatus('current')
b20MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20MACAddress.setStatus('current')
b20Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20Safepwofftime.setStatus('current')
b20BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20BiosBootOption.setStatus('current')
b20Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20Systeminfo.setStatus('current')
b20SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20SystemProperties.setStatus('current')
b20BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20BiosCfg.setStatus('current')
b20WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20WDTBootEnable.setStatus('current')
b20RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20RealTimePower.setStatus('current')
b20PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20PowerCapping.setStatus('current')
b20Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20Powerreference.setStatus('current')
b20ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20ClearBiosConfig.setStatus('current')
b20BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20BmcIP.setStatus('current')
b20BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20BmcUserAdd.setStatus('current')
b20BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20BmcUserDel.setStatus('current')
b20BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20BmcUserPasswd.setStatus('current')
b20BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20BmcUserpropertychg.setStatus('current')
b20BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20BmcGateway.setStatus('current')
b20SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20SlotBitmap.setStatus('current')
b20systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20systemGuid.setStatus('current')
b20ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20ProductName.setStatus('current')
b20BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20BundleVersion.setStatus('current')
blade20SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2001), )
if mibBuilder.loadTexts: blade20SensorTargetTable.setStatus('current')
blade20SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b1Target"))
if mibBuilder.loadTexts: blade20SensorTargetEntry.setStatus('current')
b20Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b20Target.setStatus('current')
b20Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20Current.setStatus('current')
b20ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20ThresholdsAll.setStatus('current')
b20UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20UpperCritical.setStatus('current')
b20UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20UpperNonCritical.setStatus('current')
b20UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20UpperNonRecoverable.setStatus('current')
b20LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20LowerNonCritical.setStatus('current')
b20LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20LowerCritical.setStatus('current')
b20LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20LowerNonRecoverable.setStatus('current')
b20SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20SensorHealth.setStatus('current')
b20SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20SensorHealthEvents.setStatus('current')
b20NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20NegativeHysteresis.setStatus('current')
b20PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20PositiveHysteresis.setStatus('current')
b20SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20SensorType.setStatus('current')
b20SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20SensorFRUInfo.setStatus('current')
blade20FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2002), )
if mibBuilder.loadTexts: blade20FruTable.setStatus('current')
blade20FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b1fruNumber"))
if mibBuilder.loadTexts: blade20FruEntry.setStatus('current')
b20fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b20fruNumber.setStatus('current')
b20FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20FruHotSwapState.setStatus('current')
b20FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20FruLedProperties.setStatus('current')
b20FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20FRUControl.setStatus('current')
b20FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20FRULabel.setStatus('current')
b20ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20ResetReason.setStatus('current')
blade20FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2003), )
if mibBuilder.loadTexts: blade20FruLedTable.setStatus('current')
blade20FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b1FruID"), (0, "HWSMM-MIB", "b1FruLed"))
if mibBuilder.loadTexts: blade20FruLedEntry.setStatus('current')
b20FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b20FruID.setStatus('current')
b20FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b20FruLed.setStatus('current')
b20FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20FruLedColorProps.setStatus('current')
b20FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20FruLedState.setStatus('current')
blade20FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2004), )
if mibBuilder.loadTexts: blade20FruDescriptionTable.setStatus('current')
blade20FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b1fruNum"))
if mibBuilder.loadTexts: blade20FruDescriptionEntry.setStatus('current')
b20fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b20fruNum.setStatus('current')
b20fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20fruBoardDescription.setStatus('current')
b20fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20fruBoardManufacturer.setStatus('current')
b20fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20fruBoardPartNumber.setStatus('current')
b20fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20fruBoardSerialNumber.setStatus('current')
b20fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20fruBoardManufactureDate.setStatus('current')
b20fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20fruProductDescription.setStatus('current')
b20fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20fruProductManufacturer.setStatus('current')
b20fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20fruProductPartNumber.setStatus('current')
b20fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20fruProductSerialNumber.setStatus('current')
b20fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20fruProductRevision.setStatus('current')
b20fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20fruAll.setStatus('current')
blade20CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2006), )
if mibBuilder.loadTexts: blade20CPUTable.setStatus('current')
blade20CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b20CPUIndex"))
if mibBuilder.loadTexts: blade20CPUEntry.setStatus('current')
b20CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b20CPUIndex.setStatus('current')
b20CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20CPUMark.setStatus('current')
b20CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20CPUInfo.setStatus('current')
b20CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20CPUPresent.setStatus('current')
b20CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20CPUHealth.setStatus('current')
b20CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20CPULocation.setStatus('current')
blade20MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2007), )
if mibBuilder.loadTexts: blade20MemoryTable.setStatus('current')
blade20MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b20MEMIndex"))
if mibBuilder.loadTexts: blade20MemoryEntry.setStatus('current')
b20MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b20MEMIndex.setStatus('current')
b20MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20MEMMark.setStatus('current')
b20MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20MEMInfo.setStatus('current')
b20MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20MEMPresent.setStatus('current')
b20MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20MEMHealth.setStatus('current')
b20MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20MEMLocation.setStatus('current')
blade20MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2008), )
if mibBuilder.loadTexts: blade20MezzTable.setStatus('current')
blade20MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b20MezzIndex"))
if mibBuilder.loadTexts: blade20MezzEntry.setStatus('current')
b20MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b20MezzIndex.setStatus('current')
b20MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20MezzMark.setStatus('current')
b20MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20MezzInfo.setStatus('current')
b20MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20MezzPresent.setStatus('current')
b20MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20MezzHealth.setStatus('current')
b20MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20MezzLocation.setStatus('current')
b20MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20MezzMac.setStatus('current')
blade20DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2009), )
if mibBuilder.loadTexts: blade20DiskTable.setStatus('current')
blade20DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b20DiskIndex"))
if mibBuilder.loadTexts: blade20DiskEntry.setStatus('current')
b20DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b20DiskIndex.setStatus('current')
b20DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20DiskMark.setStatus('current')
b20DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20DiskInfo.setStatus('current')
b20DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20DiskPresent.setStatus('current')
b20DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20DiskHealth.setStatus('current')
b20DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20DiskLocation.setStatus('current')
blade20SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2010), )
if mibBuilder.loadTexts: blade20SecretKvmVmmTable.setStatus('current')
blade20SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b20SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade20SecretKvmVmmEntry.setStatus('current')
b20SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b20SecretKvmVmmIndex.setStatus('current')
b20SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20SecretKvmState.setStatus('current')
b20SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20SecretVmmState.setStatus('current')
b20MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b20MMSecretVmmKey.setStatus('current')
b20SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 20, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b20SecretVmmKey.setStatus('current')
blade21 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21))
b21DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21DeviceID.setStatus('current')
b21PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21PowerState.setStatus('current')
b21Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21Presence.setStatus('current')
b21Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21Health.setStatus('current')
b21HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21HealthEvents.setStatus('current')
b21ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21ClearSEL.setStatus('current')
b21ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21ExDiskBoardPresence.setStatus('current')
b21BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21BladeVersion.setStatus('current')
b21MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21MACAddress.setStatus('current')
b21Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21Safepwofftime.setStatus('current')
b21BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21BiosBootOption.setStatus('current')
b21Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21Systeminfo.setStatus('current')
b21SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21SystemProperties.setStatus('current')
b21BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21BiosCfg.setStatus('current')
b21WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21WDTBootEnable.setStatus('current')
b21RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21RealTimePower.setStatus('current')
b21PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21PowerCapping.setStatus('current')
b21Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21Powerreference.setStatus('current')
b21ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21ClearBiosConfig.setStatus('current')
b21BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21BmcIP.setStatus('current')
b21BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21BmcUserAdd.setStatus('current')
b21BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21BmcUserDel.setStatus('current')
b21BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21BmcUserPasswd.setStatus('current')
b21BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21BmcUserpropertychg.setStatus('current')
b21BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21BmcGateway.setStatus('current')
b21SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21SlotBitmap.setStatus('current')
b21systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21systemGuid.setStatus('current')
b21ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21ProductName.setStatus('current')
b21BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21BundleVersion.setStatus('current')
blade21SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2001), )
if mibBuilder.loadTexts: blade21SensorTargetTable.setStatus('current')
blade21SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b11Target"))
if mibBuilder.loadTexts: blade21SensorTargetEntry.setStatus('current')
b21Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b21Target.setStatus('current')
b21Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21Current.setStatus('current')
b21ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21ThresholdsAll.setStatus('current')
b21UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21UpperCritical.setStatus('current')
b21UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21UpperNonCritical.setStatus('current')
b21UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21UpperNonRecoverable.setStatus('current')
b21LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21LowerNonCritical.setStatus('current')
b21LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21LowerCritical.setStatus('current')
b21LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21LowerNonRecoverable.setStatus('current')
b21SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21SensorHealth.setStatus('current')
b21SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21SensorHealthEvents.setStatus('current')
b21NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21NegativeHysteresis.setStatus('current')
b21PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21PositiveHysteresis.setStatus('current')
b21SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21SensorType.setStatus('current')
b21SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21SensorFRUInfo.setStatus('current')
blade21FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2002), )
if mibBuilder.loadTexts: blade21FruTable.setStatus('current')
blade21FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b11fruNumber"))
if mibBuilder.loadTexts: blade21FruEntry.setStatus('current')
b21fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b21fruNumber.setStatus('current')
b21FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21FruHotSwapState.setStatus('current')
b21FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21FruLedProperties.setStatus('current')
b21FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21FRUControl.setStatus('current')
b21FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21FRULabel.setStatus('current')
b21ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21ResetReason.setStatus('current')
blade21FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2003), )
if mibBuilder.loadTexts: blade21FruLedTable.setStatus('current')
blade21FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b11FruID"), (0, "HWSMM-MIB", "b11FruLed"))
if mibBuilder.loadTexts: blade21FruLedEntry.setStatus('current')
b21FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b21FruID.setStatus('current')
b21FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b21FruLed.setStatus('current')
b21FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21FruLedColorProps.setStatus('current')
b21FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21FruLedState.setStatus('current')
blade21FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2004), )
if mibBuilder.loadTexts: blade21FruDescriptionTable.setStatus('current')
blade21FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b11fruNum"))
if mibBuilder.loadTexts: blade21FruDescriptionEntry.setStatus('current')
b21fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b21fruNum.setStatus('current')
b21fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21fruBoardDescription.setStatus('current')
b21fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21fruBoardManufacturer.setStatus('current')
b21fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21fruBoardPartNumber.setStatus('current')
b21fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21fruBoardSerialNumber.setStatus('current')
b21fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21fruBoardManufactureDate.setStatus('current')
b21fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21fruProductDescription.setStatus('current')
b21fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21fruProductManufacturer.setStatus('current')
b21fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21fruProductPartNumber.setStatus('current')
b21fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21fruProductSerialNumber.setStatus('current')
b21fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21fruProductRevision.setStatus('current')
b21fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21fruAll.setStatus('current')
blade21CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2006), )
if mibBuilder.loadTexts: blade21CPUTable.setStatus('current')
blade21CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b21CPUIndex"))
if mibBuilder.loadTexts: blade21CPUEntry.setStatus('current')
b21CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b21CPUIndex.setStatus('current')
b21CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21CPUMark.setStatus('current')
b21CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21CPUInfo.setStatus('current')
b21CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21CPUPresent.setStatus('current')
b21CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21CPUHealth.setStatus('current')
b21CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21CPULocation.setStatus('current')
blade21MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2007), )
if mibBuilder.loadTexts: blade21MemoryTable.setStatus('current')
blade21MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b21MEMIndex"))
if mibBuilder.loadTexts: blade21MemoryEntry.setStatus('current')
b21MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b21MEMIndex.setStatus('current')
b21MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21MEMMark.setStatus('current')
b21MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21MEMInfo.setStatus('current')
b21MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21MEMPresent.setStatus('current')
b21MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21MEMHealth.setStatus('current')
b21MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21MEMLocation.setStatus('current')
blade21MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2008), )
if mibBuilder.loadTexts: blade21MezzTable.setStatus('current')
blade21MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b21MezzIndex"))
if mibBuilder.loadTexts: blade21MezzEntry.setStatus('current')
b21MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b21MezzIndex.setStatus('current')
b21MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21MezzMark.setStatus('current')
b21MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21MezzInfo.setStatus('current')
b21MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21MezzPresent.setStatus('current')
b21MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21MezzHealth.setStatus('current')
b21MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21MezzLocation.setStatus('current')
b21MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21MezzMac.setStatus('current')
blade21DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2009), )
if mibBuilder.loadTexts: blade21DiskTable.setStatus('current')
blade21DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b21DiskIndex"))
if mibBuilder.loadTexts: blade21DiskEntry.setStatus('current')
b21DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b21DiskIndex.setStatus('current')
b21DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21DiskMark.setStatus('current')
b21DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21DiskInfo.setStatus('current')
b21DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21DiskPresent.setStatus('current')
b21DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21DiskHealth.setStatus('current')
b21DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21DiskLocation.setStatus('current')
blade21SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2010), )
if mibBuilder.loadTexts: blade21SecretKvmVmmTable.setStatus('current')
blade21SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b21SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade21SecretKvmVmmEntry.setStatus('current')
b21SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b21SecretKvmVmmIndex.setStatus('current')
b21SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21SecretKvmState.setStatus('current')
b21SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21SecretVmmState.setStatus('current')
b21MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b21MMSecretVmmKey.setStatus('current')
b21SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 21, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b21SecretVmmKey.setStatus('current')
blade22 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22))
b22DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22DeviceID.setStatus('current')
b22PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22PowerState.setStatus('current')
b22Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22Presence.setStatus('current')
b22Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22Health.setStatus('current')
b22HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22HealthEvents.setStatus('current')
b22ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22ClearSEL.setStatus('current')
b22ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22ExDiskBoardPresence.setStatus('current')
b22BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22BladeVersion.setStatus('current')
b22MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22MACAddress.setStatus('current')
b22Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22Safepwofftime.setStatus('current')
b22BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22BiosBootOption.setStatus('current')
b22Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22Systeminfo.setStatus('current')
b22SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22SystemProperties.setStatus('current')
b22BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22BiosCfg.setStatus('current')
b22WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22WDTBootEnable.setStatus('current')
b22RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22RealTimePower.setStatus('current')
b22PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22PowerCapping.setStatus('current')
b22Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22Powerreference.setStatus('current')
b22ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22ClearBiosConfig.setStatus('current')
b22BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22BmcIP.setStatus('current')
b22BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22BmcUserAdd.setStatus('current')
b22BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22BmcUserDel.setStatus('current')
b22BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22BmcUserPasswd.setStatus('current')
b22BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22BmcUserpropertychg.setStatus('current')
b22BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22BmcGateway.setStatus('current')
b22SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22SlotBitmap.setStatus('current')
b22systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22systemGuid.setStatus('current')
b22ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22ProductName.setStatus('current')
b22BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22BundleVersion.setStatus('current')
blade22SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2001), )
if mibBuilder.loadTexts: blade22SensorTargetTable.setStatus('current')
blade22SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b12Target"))
if mibBuilder.loadTexts: blade22SensorTargetEntry.setStatus('current')
b22Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b22Target.setStatus('current')
b22Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22Current.setStatus('current')
b22ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22ThresholdsAll.setStatus('current')
b22UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22UpperCritical.setStatus('current')
b22UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22UpperNonCritical.setStatus('current')
b22UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22UpperNonRecoverable.setStatus('current')
b22LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22LowerNonCritical.setStatus('current')
b22LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22LowerCritical.setStatus('current')
b22LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22LowerNonRecoverable.setStatus('current')
b22SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22SensorHealth.setStatus('current')
b22SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22SensorHealthEvents.setStatus('current')
b22NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22NegativeHysteresis.setStatus('current')
b22PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22PositiveHysteresis.setStatus('current')
b22SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22SensorType.setStatus('current')
b22SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22SensorFRUInfo.setStatus('current')
blade22FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2002), )
if mibBuilder.loadTexts: blade22FruTable.setStatus('current')
blade22FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b12fruNumber"))
if mibBuilder.loadTexts: blade22FruEntry.setStatus('current')
b22fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b22fruNumber.setStatus('current')
b22FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22FruHotSwapState.setStatus('current')
b22FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22FruLedProperties.setStatus('current')
b22FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22FRUControl.setStatus('current')
b22FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22FRULabel.setStatus('current')
b22ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22ResetReason.setStatus('current')
blade22FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2003), )
if mibBuilder.loadTexts: blade22FruLedTable.setStatus('current')
blade22FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b12FruID"), (0, "HWSMM-MIB", "b12FruLed"))
if mibBuilder.loadTexts: blade22FruLedEntry.setStatus('current')
b22FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b22FruID.setStatus('current')
b22FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b22FruLed.setStatus('current')
b22FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22FruLedColorProps.setStatus('current')
b22FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22FruLedState.setStatus('current')
blade22FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2004), )
if mibBuilder.loadTexts: blade22FruDescriptionTable.setStatus('current')
blade22FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b12fruNum"))
if mibBuilder.loadTexts: blade22FruDescriptionEntry.setStatus('current')
b22fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b22fruNum.setStatus('current')
b22fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22fruBoardDescription.setStatus('current')
b22fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22fruBoardManufacturer.setStatus('current')
b22fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22fruBoardPartNumber.setStatus('current')
b22fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22fruBoardSerialNumber.setStatus('current')
b22fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22fruBoardManufactureDate.setStatus('current')
b22fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22fruProductDescription.setStatus('current')
b22fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22fruProductManufacturer.setStatus('current')
b22fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22fruProductPartNumber.setStatus('current')
b22fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22fruProductSerialNumber.setStatus('current')
b22fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22fruProductRevision.setStatus('current')
b22fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22fruAll.setStatus('current')
blade22CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2006), )
if mibBuilder.loadTexts: blade22CPUTable.setStatus('current')
blade22CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b22CPUIndex"))
if mibBuilder.loadTexts: blade22CPUEntry.setStatus('current')
b22CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b22CPUIndex.setStatus('current')
b22CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22CPUMark.setStatus('current')
b22CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22CPUInfo.setStatus('current')
b22CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22CPUPresent.setStatus('current')
b22CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22CPUHealth.setStatus('current')
b22CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22CPULocation.setStatus('current')
blade22MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2007), )
if mibBuilder.loadTexts: blade22MemoryTable.setStatus('current')
blade22MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b22MEMIndex"))
if mibBuilder.loadTexts: blade22MemoryEntry.setStatus('current')
b22MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b22MEMIndex.setStatus('current')
b22MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22MEMMark.setStatus('current')
b22MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22MEMInfo.setStatus('current')
b22MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22MEMPresent.setStatus('current')
b22MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22MEMHealth.setStatus('current')
b22MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22MEMLocation.setStatus('current')
blade22MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2008), )
if mibBuilder.loadTexts: blade22MezzTable.setStatus('current')
blade22MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b22MezzIndex"))
if mibBuilder.loadTexts: blade22MezzEntry.setStatus('current')
b22MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b22MezzIndex.setStatus('current')
b22MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22MezzMark.setStatus('current')
b22MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22MezzInfo.setStatus('current')
b22MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22MezzPresent.setStatus('current')
b22MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22MezzHealth.setStatus('current')
b22MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22MezzLocation.setStatus('current')
b22MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22MezzMac.setStatus('current')
blade22DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2009), )
if mibBuilder.loadTexts: blade22DiskTable.setStatus('current')
blade22DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b22DiskIndex"))
if mibBuilder.loadTexts: blade22DiskEntry.setStatus('current')
b22DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b22DiskIndex.setStatus('current')
b22DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22DiskMark.setStatus('current')
b22DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22DiskInfo.setStatus('current')
b22DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22DiskPresent.setStatus('current')
b22DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22DiskHealth.setStatus('current')
b22DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22DiskLocation.setStatus('current')
blade22SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2010), )
if mibBuilder.loadTexts: blade22SecretKvmVmmTable.setStatus('current')
blade22SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b22SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade22SecretKvmVmmEntry.setStatus('current')
b22SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b22SecretKvmVmmIndex.setStatus('current')
b22SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22SecretKvmState.setStatus('current')
b22SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22SecretVmmState.setStatus('current')
b22MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b22MMSecretVmmKey.setStatus('current')
b22SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 22, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b22SecretVmmKey.setStatus('current')
blade23 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23))
b23DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23DeviceID.setStatus('current')
b23PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23PowerState.setStatus('current')
b23Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23Presence.setStatus('current')
b23Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23Health.setStatus('current')
b23HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23HealthEvents.setStatus('current')
b23ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23ClearSEL.setStatus('current')
b23ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23ExDiskBoardPresence.setStatus('current')
b23BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23BladeVersion.setStatus('current')
b23MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23MACAddress.setStatus('current')
b23Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23Safepwofftime.setStatus('current')
b23BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23BiosBootOption.setStatus('current')
b23Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23Systeminfo.setStatus('current')
b23SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23SystemProperties.setStatus('current')
b23BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23BiosCfg.setStatus('current')
b23WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23WDTBootEnable.setStatus('current')
b23RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23RealTimePower.setStatus('current')
b23PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23PowerCapping.setStatus('current')
b23Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23Powerreference.setStatus('current')
b23ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23ClearBiosConfig.setStatus('current')
b23BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23BmcIP.setStatus('current')
b23BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23BmcUserAdd.setStatus('current')
b23BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23BmcUserDel.setStatus('current')
b23BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23BmcUserPasswd.setStatus('current')
b23BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23BmcUserpropertychg.setStatus('current')
b23BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23BmcGateway.setStatus('current')
b23SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23SlotBitmap.setStatus('current')
b23systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23systemGuid.setStatus('current')
b23ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23ProductName.setStatus('current')
b23BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23BundleVersion.setStatus('current')
blade23SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2001), )
if mibBuilder.loadTexts: blade23SensorTargetTable.setStatus('current')
blade23SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b13Target"))
if mibBuilder.loadTexts: blade23SensorTargetEntry.setStatus('current')
b23Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b23Target.setStatus('current')
b23Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23Current.setStatus('current')
b23ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23ThresholdsAll.setStatus('current')
b23UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23UpperCritical.setStatus('current')
b23UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23UpperNonCritical.setStatus('current')
b23UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23UpperNonRecoverable.setStatus('current')
b23LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23LowerNonCritical.setStatus('current')
b23LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23LowerCritical.setStatus('current')
b23LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23LowerNonRecoverable.setStatus('current')
b23SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23SensorHealth.setStatus('current')
b23SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23SensorHealthEvents.setStatus('current')
b23NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23NegativeHysteresis.setStatus('current')
b23PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23PositiveHysteresis.setStatus('current')
b23SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23SensorType.setStatus('current')
b23SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23SensorFRUInfo.setStatus('current')
blade23FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2002), )
if mibBuilder.loadTexts: blade23FruTable.setStatus('current')
blade23FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b13fruNumber"))
if mibBuilder.loadTexts: blade23FruEntry.setStatus('current')
b23fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b23fruNumber.setStatus('current')
b23FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23FruHotSwapState.setStatus('current')
b23FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23FruLedProperties.setStatus('current')
b23FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23FRUControl.setStatus('current')
b23FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23FRULabel.setStatus('current')
b23ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23ResetReason.setStatus('current')
blade23FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2003), )
if mibBuilder.loadTexts: blade23FruLedTable.setStatus('current')
blade23FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b13FruID"), (0, "HWSMM-MIB", "b13FruLed"))
if mibBuilder.loadTexts: blade23FruLedEntry.setStatus('current')
b23FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b23FruID.setStatus('current')
b23FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b23FruLed.setStatus('current')
b23FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23FruLedColorProps.setStatus('current')
b23FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23FruLedState.setStatus('current')
blade23FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2004), )
if mibBuilder.loadTexts: blade23FruDescriptionTable.setStatus('current')
blade23FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b13fruNum"))
if mibBuilder.loadTexts: blade23FruDescriptionEntry.setStatus('current')
b23fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b23fruNum.setStatus('current')
b23fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23fruBoardDescription.setStatus('current')
b23fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23fruBoardManufacturer.setStatus('current')
b23fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23fruBoardPartNumber.setStatus('current')
b23fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23fruBoardSerialNumber.setStatus('current')
b23fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23fruBoardManufactureDate.setStatus('current')
b23fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23fruProductDescription.setStatus('current')
b23fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23fruProductManufacturer.setStatus('current')
b23fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23fruProductPartNumber.setStatus('current')
b23fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23fruProductSerialNumber.setStatus('current')
b23fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23fruProductRevision.setStatus('current')
b23fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23fruAll.setStatus('current')
blade23CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2006), )
if mibBuilder.loadTexts: blade23CPUTable.setStatus('current')
blade23CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b23CPUIndex"))
if mibBuilder.loadTexts: blade23CPUEntry.setStatus('current')
b23CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b23CPUIndex.setStatus('current')
b23CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23CPUMark.setStatus('current')
b23CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23CPUInfo.setStatus('current')
b23CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23CPUPresent.setStatus('current')
b23CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23CPUHealth.setStatus('current')
b23CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23CPULocation.setStatus('current')
blade23MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2007), )
if mibBuilder.loadTexts: blade23MemoryTable.setStatus('current')
blade23MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b23MEMIndex"))
if mibBuilder.loadTexts: blade23MemoryEntry.setStatus('current')
b23MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b23MEMIndex.setStatus('current')
b23MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23MEMMark.setStatus('current')
b23MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23MEMInfo.setStatus('current')
b23MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23MEMPresent.setStatus('current')
b23MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23MEMHealth.setStatus('current')
b23MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23MEMLocation.setStatus('current')
blade23MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2008), )
if mibBuilder.loadTexts: blade23MezzTable.setStatus('current')
blade23MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b23MezzIndex"))
if mibBuilder.loadTexts: blade23MezzEntry.setStatus('current')
b23MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b23MezzIndex.setStatus('current')
b23MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23MezzMark.setStatus('current')
b23MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23MezzInfo.setStatus('current')
b23MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23MezzPresent.setStatus('current')
b23MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23MezzHealth.setStatus('current')
b23MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23MezzLocation.setStatus('current')
b23MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23MezzMac.setStatus('current')
blade23DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2009), )
if mibBuilder.loadTexts: blade23DiskTable.setStatus('current')
blade23DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b23DiskIndex"))
if mibBuilder.loadTexts: blade23DiskEntry.setStatus('current')
b23DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b23DiskIndex.setStatus('current')
b23DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23DiskMark.setStatus('current')
b23DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23DiskInfo.setStatus('current')
b23DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23DiskPresent.setStatus('current')
b23DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23DiskHealth.setStatus('current')
b23DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23DiskLocation.setStatus('current')
blade23SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2010), )
if mibBuilder.loadTexts: blade23SecretKvmVmmTable.setStatus('current')
blade23SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b23SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade23SecretKvmVmmEntry.setStatus('current')
b23SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b23SecretKvmVmmIndex.setStatus('current')
b23SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23SecretKvmState.setStatus('current')
b23SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23SecretVmmState.setStatus('current')
b23MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b23MMSecretVmmKey.setStatus('current')
b23SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 23, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b23SecretVmmKey.setStatus('current')
blade24 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24))
b24DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24DeviceID.setStatus('current')
b24PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24PowerState.setStatus('current')
b24Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24Presence.setStatus('current')
b24Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24Health.setStatus('current')
b24HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24HealthEvents.setStatus('current')
b24ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24ClearSEL.setStatus('current')
b24ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24ExDiskBoardPresence.setStatus('current')
b24BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24BladeVersion.setStatus('current')
b24MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24MACAddress.setStatus('current')
b24Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24Safepwofftime.setStatus('current')
b24BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24BiosBootOption.setStatus('current')
b24Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24Systeminfo.setStatus('current')
b24SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24SystemProperties.setStatus('current')
b24BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24BiosCfg.setStatus('current')
b24WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24WDTBootEnable.setStatus('current')
b24RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24RealTimePower.setStatus('current')
b24PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24PowerCapping.setStatus('current')
b24Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24Powerreference.setStatus('current')
b24ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24ClearBiosConfig.setStatus('current')
b24BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24BmcIP.setStatus('current')
b24BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24BmcUserAdd.setStatus('current')
b24BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24BmcUserDel.setStatus('current')
b24BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24BmcUserPasswd.setStatus('current')
b24BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24BmcUserpropertychg.setStatus('current')
b24BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24BmcGateway.setStatus('current')
b24SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24SlotBitmap.setStatus('current')
b24systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24systemGuid.setStatus('current')
b24ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24ProductName.setStatus('current')
b24BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24BundleVersion.setStatus('current')
blade24SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2001), )
if mibBuilder.loadTexts: blade24SensorTargetTable.setStatus('current')
blade24SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b14Target"))
if mibBuilder.loadTexts: blade24SensorTargetEntry.setStatus('current')
b24Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b24Target.setStatus('current')
b24Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24Current.setStatus('current')
b24ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24ThresholdsAll.setStatus('current')
b24UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24UpperCritical.setStatus('current')
b24UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24UpperNonCritical.setStatus('current')
b24UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24UpperNonRecoverable.setStatus('current')
b24LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24LowerNonCritical.setStatus('current')
b24LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24LowerCritical.setStatus('current')
b24LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24LowerNonRecoverable.setStatus('current')
b24SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24SensorHealth.setStatus('current')
b24SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24SensorHealthEvents.setStatus('current')
b24NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24NegativeHysteresis.setStatus('current')
b24PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24PositiveHysteresis.setStatus('current')
b24SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24SensorType.setStatus('current')
b24SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24SensorFRUInfo.setStatus('current')
blade24FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2002), )
if mibBuilder.loadTexts: blade24FruTable.setStatus('current')
blade24FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b14fruNumber"))
if mibBuilder.loadTexts: blade24FruEntry.setStatus('current')
b24fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b24fruNumber.setStatus('current')
b24FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24FruHotSwapState.setStatus('current')
b24FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24FruLedProperties.setStatus('current')
b24FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24FRUControl.setStatus('current')
b24FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24FRULabel.setStatus('current')
b24ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24ResetReason.setStatus('current')
blade24FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2003), )
if mibBuilder.loadTexts: blade24FruLedTable.setStatus('current')
blade24FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b14FruID"), (0, "HWSMM-MIB", "b14FruLed"))
if mibBuilder.loadTexts: blade24FruLedEntry.setStatus('current')
b24FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b24FruID.setStatus('current')
b24FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b24FruLed.setStatus('current')
b24FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24FruLedColorProps.setStatus('current')
b24FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24FruLedState.setStatus('current')
blade24FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2004), )
if mibBuilder.loadTexts: blade24FruDescriptionTable.setStatus('current')
blade24FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b14fruNum"))
if mibBuilder.loadTexts: blade24FruDescriptionEntry.setStatus('current')
b24fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b24fruNum.setStatus('current')
b24fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24fruBoardDescription.setStatus('current')
b24fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24fruBoardManufacturer.setStatus('current')
b24fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24fruBoardPartNumber.setStatus('current')
b24fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24fruBoardSerialNumber.setStatus('current')
b24fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24fruBoardManufactureDate.setStatus('current')
b24fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24fruProductDescription.setStatus('current')
b24fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24fruProductManufacturer.setStatus('current')
b24fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24fruProductPartNumber.setStatus('current')
b24fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24fruProductSerialNumber.setStatus('current')
b24fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24fruProductRevision.setStatus('current')
b24fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24fruAll.setStatus('current')
blade24CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2006), )
if mibBuilder.loadTexts: blade24CPUTable.setStatus('current')
blade24CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b24CPUIndex"))
if mibBuilder.loadTexts: blade24CPUEntry.setStatus('current')
b24CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b24CPUIndex.setStatus('current')
b24CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24CPUMark.setStatus('current')
b24CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24CPUInfo.setStatus('current')
b24CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24CPUPresent.setStatus('current')
b24CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24CPUHealth.setStatus('current')
b24CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24CPULocation.setStatus('current')
blade24MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2007), )
if mibBuilder.loadTexts: blade24MemoryTable.setStatus('current')
blade24MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b24MEMIndex"))
if mibBuilder.loadTexts: blade24MemoryEntry.setStatus('current')
b24MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b24MEMIndex.setStatus('current')
b24MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24MEMMark.setStatus('current')
b24MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24MEMInfo.setStatus('current')
b24MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24MEMPresent.setStatus('current')
b24MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24MEMHealth.setStatus('current')
b24MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24MEMLocation.setStatus('current')
blade24MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2008), )
if mibBuilder.loadTexts: blade24MezzTable.setStatus('current')
blade24MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b24MezzIndex"))
if mibBuilder.loadTexts: blade24MezzEntry.setStatus('current')
b24MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b24MezzIndex.setStatus('current')
b24MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24MezzMark.setStatus('current')
b24MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24MezzInfo.setStatus('current')
b24MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24MezzPresent.setStatus('current')
b24MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24MezzHealth.setStatus('current')
b24MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24MezzLocation.setStatus('current')
b24MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24MezzMac.setStatus('current')
blade24DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2009), )
if mibBuilder.loadTexts: blade24DiskTable.setStatus('current')
blade24DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b24DiskIndex"))
if mibBuilder.loadTexts: blade24DiskEntry.setStatus('current')
b24DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b24DiskIndex.setStatus('current')
b24DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24DiskMark.setStatus('current')
b24DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24DiskInfo.setStatus('current')
b24DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24DiskPresent.setStatus('current')
b24DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24DiskHealth.setStatus('current')
b24DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24DiskLocation.setStatus('current')
blade24SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2010), )
if mibBuilder.loadTexts: blade24SecretKvmVmmTable.setStatus('current')
blade24SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b24SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade24SecretKvmVmmEntry.setStatus('current')
b24SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b24SecretKvmVmmIndex.setStatus('current')
b24SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24SecretKvmState.setStatus('current')
b24SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24SecretVmmState.setStatus('current')
b24MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b24MMSecretVmmKey.setStatus('current')
b24SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 24, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b24SecretVmmKey.setStatus('current')
blade25 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25))
b25DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25DeviceID.setStatus('current')
b25PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25PowerState.setStatus('current')
b25Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25Presence.setStatus('current')
b25Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25Health.setStatus('current')
b25HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25HealthEvents.setStatus('current')
b25ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25ClearSEL.setStatus('current')
b25ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25ExDiskBoardPresence.setStatus('current')
b25BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25BladeVersion.setStatus('current')
b25MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25MACAddress.setStatus('current')
b25Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25Safepwofftime.setStatus('current')
b25BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25BiosBootOption.setStatus('current')
b25Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25Systeminfo.setStatus('current')
b25SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25SystemProperties.setStatus('current')
b25BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25BiosCfg.setStatus('current')
b25WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25WDTBootEnable.setStatus('current')
b25RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25RealTimePower.setStatus('current')
b25PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25PowerCapping.setStatus('current')
b25Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25Powerreference.setStatus('current')
b25ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25ClearBiosConfig.setStatus('current')
b25BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25BmcIP.setStatus('current')
b25BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25BmcUserAdd.setStatus('current')
b25BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25BmcUserDel.setStatus('current')
b25BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25BmcUserPasswd.setStatus('current')
b25BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25BmcUserpropertychg.setStatus('current')
b25BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25BmcGateway.setStatus('current')
b25SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25SlotBitmap.setStatus('current')
b25systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25systemGuid.setStatus('current')
b25ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25ProductName.setStatus('current')
b25BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25BundleVersion.setStatus('current')
blade25SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2001), )
if mibBuilder.loadTexts: blade25SensorTargetTable.setStatus('current')
blade25SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b14Target"))
if mibBuilder.loadTexts: blade25SensorTargetEntry.setStatus('current')
b25Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b25Target.setStatus('current')
b25Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25Current.setStatus('current')
b25ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25ThresholdsAll.setStatus('current')
b25UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25UpperCritical.setStatus('current')
b25UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25UpperNonCritical.setStatus('current')
b25UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25UpperNonRecoverable.setStatus('current')
b25LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25LowerNonCritical.setStatus('current')
b25LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25LowerCritical.setStatus('current')
b25LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25LowerNonRecoverable.setStatus('current')
b25SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25SensorHealth.setStatus('current')
b25SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25SensorHealthEvents.setStatus('current')
b25NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25NegativeHysteresis.setStatus('current')
b25PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25PositiveHysteresis.setStatus('current')
b25SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25SensorType.setStatus('current')
b25SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25SensorFRUInfo.setStatus('current')
blade25FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2002), )
if mibBuilder.loadTexts: blade25FruTable.setStatus('current')
blade25FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b14fruNumber"))
if mibBuilder.loadTexts: blade25FruEntry.setStatus('current')
b25fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b25fruNumber.setStatus('current')
b25FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25FruHotSwapState.setStatus('current')
b25FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25FruLedProperties.setStatus('current')
b25FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25FRUControl.setStatus('current')
b25FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25FRULabel.setStatus('current')
b25ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25ResetReason.setStatus('current')
blade25FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2003), )
if mibBuilder.loadTexts: blade25FruLedTable.setStatus('current')
blade25FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b14FruID"), (0, "HWSMM-MIB", "b14FruLed"))
if mibBuilder.loadTexts: blade25FruLedEntry.setStatus('current')
b25FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b25FruID.setStatus('current')
b25FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b25FruLed.setStatus('current')
b25FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25FruLedColorProps.setStatus('current')
b25FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25FruLedState.setStatus('current')
blade25FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2004), )
if mibBuilder.loadTexts: blade25FruDescriptionTable.setStatus('current')
blade25FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b14fruNum"))
if mibBuilder.loadTexts: blade25FruDescriptionEntry.setStatus('current')
b25fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b25fruNum.setStatus('current')
b25fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25fruBoardDescription.setStatus('current')
b25fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25fruBoardManufacturer.setStatus('current')
b25fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25fruBoardPartNumber.setStatus('current')
b25fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25fruBoardSerialNumber.setStatus('current')
b25fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25fruBoardManufactureDate.setStatus('current')
b25fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25fruProductDescription.setStatus('current')
b25fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25fruProductManufacturer.setStatus('current')
b25fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25fruProductPartNumber.setStatus('current')
b25fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25fruProductSerialNumber.setStatus('current')
b25fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25fruProductRevision.setStatus('current')
b25fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25fruAll.setStatus('current')
blade25CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2006), )
if mibBuilder.loadTexts: blade25CPUTable.setStatus('current')
blade25CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b25CPUIndex"))
if mibBuilder.loadTexts: blade25CPUEntry.setStatus('current')
b25CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b25CPUIndex.setStatus('current')
b25CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25CPUMark.setStatus('current')
b25CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25CPUInfo.setStatus('current')
b25CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25CPUPresent.setStatus('current')
b25CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25CPUHealth.setStatus('current')
b25CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25CPULocation.setStatus('current')
blade25MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2007), )
if mibBuilder.loadTexts: blade25MemoryTable.setStatus('current')
blade25MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b25MEMIndex"))
if mibBuilder.loadTexts: blade25MemoryEntry.setStatus('current')
b25MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b25MEMIndex.setStatus('current')
b25MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25MEMMark.setStatus('current')
b25MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25MEMInfo.setStatus('current')
b25MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25MEMPresent.setStatus('current')
b25MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25MEMHealth.setStatus('current')
b25MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25MEMLocation.setStatus('current')
blade25MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2008), )
if mibBuilder.loadTexts: blade25MezzTable.setStatus('current')
blade25MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b25MezzIndex"))
if mibBuilder.loadTexts: blade25MezzEntry.setStatus('current')
b25MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b25MezzIndex.setStatus('current')
b25MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25MezzMark.setStatus('current')
b25MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25MezzInfo.setStatus('current')
b25MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25MezzPresent.setStatus('current')
b25MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25MezzHealth.setStatus('current')
b25MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25MezzLocation.setStatus('current')
b25MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25MezzMac.setStatus('current')
blade25DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2009), )
if mibBuilder.loadTexts: blade25DiskTable.setStatus('current')
blade25DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b25DiskIndex"))
if mibBuilder.loadTexts: blade25DiskEntry.setStatus('current')
b25DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b25DiskIndex.setStatus('current')
b25DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25DiskMark.setStatus('current')
b25DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25DiskInfo.setStatus('current')
b25DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25DiskPresent.setStatus('current')
b25DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25DiskHealth.setStatus('current')
b25DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25DiskLocation.setStatus('current')
blade25SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2010), )
if mibBuilder.loadTexts: blade25SecretKvmVmmTable.setStatus('current')
blade25SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b25SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade25SecretKvmVmmEntry.setStatus('current')
b25SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b25SecretKvmVmmIndex.setStatus('current')
b25SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25SecretKvmState.setStatus('current')
b25SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25SecretVmmState.setStatus('current')
b25MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b25MMSecretVmmKey.setStatus('current')
b25SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 25, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b25SecretVmmKey.setStatus('current')
blade26 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26))
b26DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26DeviceID.setStatus('current')
b26PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26PowerState.setStatus('current')
b26Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26Presence.setStatus('current')
b26Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26Health.setStatus('current')
b26HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26HealthEvents.setStatus('current')
b26ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26ClearSEL.setStatus('current')
b26ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26ExDiskBoardPresence.setStatus('current')
b26BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26BladeVersion.setStatus('current')
b26MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26MACAddress.setStatus('current')
b26Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26Safepwofftime.setStatus('current')
b26BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26BiosBootOption.setStatus('current')
b26Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26Systeminfo.setStatus('current')
b26SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26SystemProperties.setStatus('current')
b26BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26BiosCfg.setStatus('current')
b26WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26WDTBootEnable.setStatus('current')
b26RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26RealTimePower.setStatus('current')
b26PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26PowerCapping.setStatus('current')
b26Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26Powerreference.setStatus('current')
b26ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26ClearBiosConfig.setStatus('current')
b26BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26BmcIP.setStatus('current')
b26BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26BmcUserAdd.setStatus('current')
b26BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26BmcUserDel.setStatus('current')
b26BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26BmcUserPasswd.setStatus('current')
b26BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26BmcUserpropertychg.setStatus('current')
b26BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26BmcGateway.setStatus('current')
b26SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26SlotBitmap.setStatus('current')
b26systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26systemGuid.setStatus('current')
b26ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26ProductName.setStatus('current')
b26BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26BundleVersion.setStatus('current')
blade26SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2001), )
if mibBuilder.loadTexts: blade26SensorTargetTable.setStatus('current')
blade26SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b14Target"))
if mibBuilder.loadTexts: blade26SensorTargetEntry.setStatus('current')
b26Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b26Target.setStatus('current')
b26Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26Current.setStatus('current')
b26ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26ThresholdsAll.setStatus('current')
b26UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26UpperCritical.setStatus('current')
b26UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26UpperNonCritical.setStatus('current')
b26UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26UpperNonRecoverable.setStatus('current')
b26LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26LowerNonCritical.setStatus('current')
b26LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26LowerCritical.setStatus('current')
b26LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26LowerNonRecoverable.setStatus('current')
b26SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26SensorHealth.setStatus('current')
b26SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26SensorHealthEvents.setStatus('current')
b26NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26NegativeHysteresis.setStatus('current')
b26PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26PositiveHysteresis.setStatus('current')
b26SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26SensorType.setStatus('current')
b26SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26SensorFRUInfo.setStatus('current')
blade26FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2002), )
if mibBuilder.loadTexts: blade26FruTable.setStatus('current')
blade26FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b14fruNumber"))
if mibBuilder.loadTexts: blade26FruEntry.setStatus('current')
b26fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b26fruNumber.setStatus('current')
b26FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26FruHotSwapState.setStatus('current')
b26FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26FruLedProperties.setStatus('current')
b26FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26FRUControl.setStatus('current')
b26FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26FRULabel.setStatus('current')
b26ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26ResetReason.setStatus('current')
blade26FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2003), )
if mibBuilder.loadTexts: blade26FruLedTable.setStatus('current')
blade26FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b14FruID"), (0, "HWSMM-MIB", "b14FruLed"))
if mibBuilder.loadTexts: blade26FruLedEntry.setStatus('current')
b26FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b26FruID.setStatus('current')
b26FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b26FruLed.setStatus('current')
b26FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26FruLedColorProps.setStatus('current')
b26FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26FruLedState.setStatus('current')
blade26FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2004), )
if mibBuilder.loadTexts: blade26FruDescriptionTable.setStatus('current')
blade26FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b14fruNum"))
if mibBuilder.loadTexts: blade26FruDescriptionEntry.setStatus('current')
b26fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b26fruNum.setStatus('current')
b26fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26fruBoardDescription.setStatus('current')
b26fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26fruBoardManufacturer.setStatus('current')
b26fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26fruBoardPartNumber.setStatus('current')
b26fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26fruBoardSerialNumber.setStatus('current')
b26fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26fruBoardManufactureDate.setStatus('current')
b26fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26fruProductDescription.setStatus('current')
b26fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26fruProductManufacturer.setStatus('current')
b26fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26fruProductPartNumber.setStatus('current')
b26fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26fruProductSerialNumber.setStatus('current')
b26fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26fruProductRevision.setStatus('current')
b26fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26fruAll.setStatus('current')
blade26CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2006), )
if mibBuilder.loadTexts: blade26CPUTable.setStatus('current')
blade26CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b26CPUIndex"))
if mibBuilder.loadTexts: blade26CPUEntry.setStatus('current')
b26CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b26CPUIndex.setStatus('current')
b26CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26CPUMark.setStatus('current')
b26CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26CPUInfo.setStatus('current')
b26CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26CPUPresent.setStatus('current')
b26CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26CPUHealth.setStatus('current')
b26CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26CPULocation.setStatus('current')
blade26MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2007), )
if mibBuilder.loadTexts: blade26MemoryTable.setStatus('current')
blade26MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b26MEMIndex"))
if mibBuilder.loadTexts: blade26MemoryEntry.setStatus('current')
b26MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b26MEMIndex.setStatus('current')
b26MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26MEMMark.setStatus('current')
b26MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26MEMInfo.setStatus('current')
b26MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26MEMPresent.setStatus('current')
b26MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26MEMHealth.setStatus('current')
b26MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26MEMLocation.setStatus('current')
blade26MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2008), )
if mibBuilder.loadTexts: blade26MezzTable.setStatus('current')
blade26MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b26MezzIndex"))
if mibBuilder.loadTexts: blade26MezzEntry.setStatus('current')
b26MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b26MezzIndex.setStatus('current')
b26MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26MezzMark.setStatus('current')
b26MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26MezzInfo.setStatus('current')
b26MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26MezzPresent.setStatus('current')
b26MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26MezzHealth.setStatus('current')
b26MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26MezzLocation.setStatus('current')
b26MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26MezzMac.setStatus('current')
blade26DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2009), )
if mibBuilder.loadTexts: blade26DiskTable.setStatus('current')
blade26DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b26DiskIndex"))
if mibBuilder.loadTexts: blade26DiskEntry.setStatus('current')
b26DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b26DiskIndex.setStatus('current')
b26DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26DiskMark.setStatus('current')
b26DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26DiskInfo.setStatus('current')
b26DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26DiskPresent.setStatus('current')
b26DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26DiskHealth.setStatus('current')
b26DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26DiskLocation.setStatus('current')
blade26SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2010), )
if mibBuilder.loadTexts: blade26SecretKvmVmmTable.setStatus('current')
blade26SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b26SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade26SecretKvmVmmEntry.setStatus('current')
b26SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b26SecretKvmVmmIndex.setStatus('current')
b26SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26SecretKvmState.setStatus('current')
b26SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26SecretVmmState.setStatus('current')
b26MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b26MMSecretVmmKey.setStatus('current')
b26SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 26, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b26SecretVmmKey.setStatus('current')
blade27 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27))
b27DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27DeviceID.setStatus('current')
b27PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27PowerState.setStatus('current')
b27Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27Presence.setStatus('current')
b27Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27Health.setStatus('current')
b27HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27HealthEvents.setStatus('current')
b27ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27ClearSEL.setStatus('current')
b27ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27ExDiskBoardPresence.setStatus('current')
b27BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27BladeVersion.setStatus('current')
b27MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27MACAddress.setStatus('current')
b27Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27Safepwofftime.setStatus('current')
b27BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27BiosBootOption.setStatus('current')
b27Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27Systeminfo.setStatus('current')
b27SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27SystemProperties.setStatus('current')
b27BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27BiosCfg.setStatus('current')
b27WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27WDTBootEnable.setStatus('current')
b27RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27RealTimePower.setStatus('current')
b27PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27PowerCapping.setStatus('current')
b27Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27Powerreference.setStatus('current')
b27ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27ClearBiosConfig.setStatus('current')
b27BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27BmcIP.setStatus('current')
b27BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27BmcUserAdd.setStatus('current')
b27BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27BmcUserDel.setStatus('current')
b27BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27BmcUserPasswd.setStatus('current')
b27BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27BmcUserpropertychg.setStatus('current')
b27BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27BmcGateway.setStatus('current')
b27SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27SlotBitmap.setStatus('current')
b27systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27systemGuid.setStatus('current')
b27ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27ProductName.setStatus('current')
b27BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27BundleVersion.setStatus('current')
blade27SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2001), )
if mibBuilder.loadTexts: blade27SensorTargetTable.setStatus('current')
blade27SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b1Target"))
if mibBuilder.loadTexts: blade27SensorTargetEntry.setStatus('current')
b27Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b27Target.setStatus('current')
b27Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27Current.setStatus('current')
b27ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27ThresholdsAll.setStatus('current')
b27UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27UpperCritical.setStatus('current')
b27UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27UpperNonCritical.setStatus('current')
b27UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27UpperNonRecoverable.setStatus('current')
b27LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27LowerNonCritical.setStatus('current')
b27LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27LowerCritical.setStatus('current')
b27LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27LowerNonRecoverable.setStatus('current')
b27SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27SensorHealth.setStatus('current')
b27SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27SensorHealthEvents.setStatus('current')
b27NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27NegativeHysteresis.setStatus('current')
b27PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27PositiveHysteresis.setStatus('current')
b27SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27SensorType.setStatus('current')
b27SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27SensorFRUInfo.setStatus('current')
blade27FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2002), )
if mibBuilder.loadTexts: blade27FruTable.setStatus('current')
blade27FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b1fruNumber"))
if mibBuilder.loadTexts: blade27FruEntry.setStatus('current')
b27fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b27fruNumber.setStatus('current')
b27FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27FruHotSwapState.setStatus('current')
b27FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27FruLedProperties.setStatus('current')
b27FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27FRUControl.setStatus('current')
b27FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27FRULabel.setStatus('current')
b27ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27ResetReason.setStatus('current')
blade27FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2003), )
if mibBuilder.loadTexts: blade27FruLedTable.setStatus('current')
blade27FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b1FruID"), (0, "HWSMM-MIB", "b1FruLed"))
if mibBuilder.loadTexts: blade27FruLedEntry.setStatus('current')
b27FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b27FruID.setStatus('current')
b27FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b27FruLed.setStatus('current')
b27FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27FruLedColorProps.setStatus('current')
b27FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27FruLedState.setStatus('current')
blade27FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2004), )
if mibBuilder.loadTexts: blade27FruDescriptionTable.setStatus('current')
blade27FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b1fruNum"))
if mibBuilder.loadTexts: blade27FruDescriptionEntry.setStatus('current')
b27fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b27fruNum.setStatus('current')
b27fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27fruBoardDescription.setStatus('current')
b27fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27fruBoardManufacturer.setStatus('current')
b27fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27fruBoardPartNumber.setStatus('current')
b27fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27fruBoardSerialNumber.setStatus('current')
b27fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27fruBoardManufactureDate.setStatus('current')
b27fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27fruProductDescription.setStatus('current')
b27fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27fruProductManufacturer.setStatus('current')
b27fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27fruProductPartNumber.setStatus('current')
b27fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27fruProductSerialNumber.setStatus('current')
b27fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27fruProductRevision.setStatus('current')
b27fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27fruAll.setStatus('current')
blade27CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2006), )
if mibBuilder.loadTexts: blade27CPUTable.setStatus('current')
blade27CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b27CPUIndex"))
if mibBuilder.loadTexts: blade27CPUEntry.setStatus('current')
b27CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b27CPUIndex.setStatus('current')
b27CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27CPUMark.setStatus('current')
b27CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27CPUInfo.setStatus('current')
b27CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27CPUPresent.setStatus('current')
b27CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27CPUHealth.setStatus('current')
b27CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27CPULocation.setStatus('current')
blade27MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2007), )
if mibBuilder.loadTexts: blade27MemoryTable.setStatus('current')
blade27MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b27MEMIndex"))
if mibBuilder.loadTexts: blade27MemoryEntry.setStatus('current')
b27MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b27MEMIndex.setStatus('current')
b27MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27MEMMark.setStatus('current')
b27MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27MEMInfo.setStatus('current')
b27MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27MEMPresent.setStatus('current')
b27MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27MEMHealth.setStatus('current')
b27MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27MEMLocation.setStatus('current')
blade27MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2008), )
if mibBuilder.loadTexts: blade27MezzTable.setStatus('current')
blade27MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b27MezzIndex"))
if mibBuilder.loadTexts: blade27MezzEntry.setStatus('current')
b27MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b27MezzIndex.setStatus('current')
b27MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27MezzMark.setStatus('current')
b27MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27MezzInfo.setStatus('current')
b27MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27MezzPresent.setStatus('current')
b27MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27MezzHealth.setStatus('current')
b27MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27MezzLocation.setStatus('current')
b27MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27MezzMac.setStatus('current')
blade27DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2009), )
if mibBuilder.loadTexts: blade27DiskTable.setStatus('current')
blade27DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b27DiskIndex"))
if mibBuilder.loadTexts: blade27DiskEntry.setStatus('current')
b27DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b27DiskIndex.setStatus('current')
b27DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27DiskMark.setStatus('current')
b27DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27DiskInfo.setStatus('current')
b27DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27DiskPresent.setStatus('current')
b27DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27DiskHealth.setStatus('current')
b27DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27DiskLocation.setStatus('current')
blade27SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2010), )
if mibBuilder.loadTexts: blade27SecretKvmVmmTable.setStatus('current')
blade27SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b27SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade27SecretKvmVmmEntry.setStatus('current')
b27SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b27SecretKvmVmmIndex.setStatus('current')
b27SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27SecretKvmState.setStatus('current')
b27SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27SecretVmmState.setStatus('current')
b27MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b27MMSecretVmmKey.setStatus('current')
b27SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 27, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b27SecretVmmKey.setStatus('current')
blade28 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28))
b28DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28DeviceID.setStatus('current')
b28PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28PowerState.setStatus('current')
b28Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28Presence.setStatus('current')
b28Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28Health.setStatus('current')
b28HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28HealthEvents.setStatus('current')
b28ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28ClearSEL.setStatus('current')
b28ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28ExDiskBoardPresence.setStatus('current')
b28BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28BladeVersion.setStatus('current')
b28MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28MACAddress.setStatus('current')
b28Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28Safepwofftime.setStatus('current')
b28BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28BiosBootOption.setStatus('current')
b28Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28Systeminfo.setStatus('current')
b28SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28SystemProperties.setStatus('current')
b28BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28BiosCfg.setStatus('current')
b28WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28WDTBootEnable.setStatus('current')
b28RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28RealTimePower.setStatus('current')
b28PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28PowerCapping.setStatus('current')
b28Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28Powerreference.setStatus('current')
b28ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28ClearBiosConfig.setStatus('current')
b28BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28BmcIP.setStatus('current')
b28BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28BmcUserAdd.setStatus('current')
b28BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28BmcUserDel.setStatus('current')
b28BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28BmcUserPasswd.setStatus('current')
b28BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28BmcUserpropertychg.setStatus('current')
b28BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28BmcGateway.setStatus('current')
b28SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28SlotBitmap.setStatus('current')
b28systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28systemGuid.setStatus('current')
b28ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28ProductName.setStatus('current')
b28BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28BundleVersion.setStatus('current')
blade28SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2001), )
if mibBuilder.loadTexts: blade28SensorTargetTable.setStatus('current')
blade28SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b1Target"))
if mibBuilder.loadTexts: blade28SensorTargetEntry.setStatus('current')
b28Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b28Target.setStatus('current')
b28Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28Current.setStatus('current')
b28ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28ThresholdsAll.setStatus('current')
b28UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28UpperCritical.setStatus('current')
b28UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28UpperNonCritical.setStatus('current')
b28UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28UpperNonRecoverable.setStatus('current')
b28LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28LowerNonCritical.setStatus('current')
b28LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28LowerCritical.setStatus('current')
b28LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28LowerNonRecoverable.setStatus('current')
b28SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28SensorHealth.setStatus('current')
b28SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28SensorHealthEvents.setStatus('current')
b28NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28NegativeHysteresis.setStatus('current')
b28PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28PositiveHysteresis.setStatus('current')
b28SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28SensorType.setStatus('current')
b28SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28SensorFRUInfo.setStatus('current')
blade28FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2002), )
if mibBuilder.loadTexts: blade28FruTable.setStatus('current')
blade28FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b1fruNumber"))
if mibBuilder.loadTexts: blade28FruEntry.setStatus('current')
b28fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b28fruNumber.setStatus('current')
b28FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28FruHotSwapState.setStatus('current')
b28FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28FruLedProperties.setStatus('current')
b28FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28FRUControl.setStatus('current')
b28FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28FRULabel.setStatus('current')
b28ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28ResetReason.setStatus('current')
blade28FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2003), )
if mibBuilder.loadTexts: blade28FruLedTable.setStatus('current')
blade28FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b1FruID"), (0, "HWSMM-MIB", "b1FruLed"))
if mibBuilder.loadTexts: blade28FruLedEntry.setStatus('current')
b28FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b28FruID.setStatus('current')
b28FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b28FruLed.setStatus('current')
b28FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28FruLedColorProps.setStatus('current')
b28FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28FruLedState.setStatus('current')
blade28FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2004), )
if mibBuilder.loadTexts: blade28FruDescriptionTable.setStatus('current')
blade28FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b1fruNum"))
if mibBuilder.loadTexts: blade28FruDescriptionEntry.setStatus('current')
b28fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b28fruNum.setStatus('current')
b28fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28fruBoardDescription.setStatus('current')
b28fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28fruBoardManufacturer.setStatus('current')
b28fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28fruBoardPartNumber.setStatus('current')
b28fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28fruBoardSerialNumber.setStatus('current')
b28fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28fruBoardManufactureDate.setStatus('current')
b28fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28fruProductDescription.setStatus('current')
b28fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28fruProductManufacturer.setStatus('current')
b28fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28fruProductPartNumber.setStatus('current')
b28fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28fruProductSerialNumber.setStatus('current')
b28fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28fruProductRevision.setStatus('current')
b28fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28fruAll.setStatus('current')
blade28CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2006), )
if mibBuilder.loadTexts: blade28CPUTable.setStatus('current')
blade28CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b28CPUIndex"))
if mibBuilder.loadTexts: blade28CPUEntry.setStatus('current')
b28CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b28CPUIndex.setStatus('current')
b28CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28CPUMark.setStatus('current')
b28CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28CPUInfo.setStatus('current')
b28CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28CPUPresent.setStatus('current')
b28CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28CPUHealth.setStatus('current')
b28CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28CPULocation.setStatus('current')
blade28MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2007), )
if mibBuilder.loadTexts: blade28MemoryTable.setStatus('current')
blade28MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b28MEMIndex"))
if mibBuilder.loadTexts: blade28MemoryEntry.setStatus('current')
b28MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b28MEMIndex.setStatus('current')
b28MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28MEMMark.setStatus('current')
b28MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28MEMInfo.setStatus('current')
b28MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28MEMPresent.setStatus('current')
b28MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28MEMHealth.setStatus('current')
b28MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28MEMLocation.setStatus('current')
blade28MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2008), )
if mibBuilder.loadTexts: blade28MezzTable.setStatus('current')
blade28MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b28MezzIndex"))
if mibBuilder.loadTexts: blade28MezzEntry.setStatus('current')
b28MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b28MezzIndex.setStatus('current')
b28MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28MezzMark.setStatus('current')
b28MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28MezzInfo.setStatus('current')
b28MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28MezzPresent.setStatus('current')
b28MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28MezzHealth.setStatus('current')
b28MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28MezzLocation.setStatus('current')
b28MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28MezzMac.setStatus('current')
blade28DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2009), )
if mibBuilder.loadTexts: blade28DiskTable.setStatus('current')
blade28DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b28DiskIndex"))
if mibBuilder.loadTexts: blade28DiskEntry.setStatus('current')
b28DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b28DiskIndex.setStatus('current')
b28DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28DiskMark.setStatus('current')
b28DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28DiskInfo.setStatus('current')
b28DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28DiskPresent.setStatus('current')
b28DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28DiskHealth.setStatus('current')
b28DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28DiskLocation.setStatus('current')
blade28SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2010), )
if mibBuilder.loadTexts: blade28SecretKvmVmmTable.setStatus('current')
blade28SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b28SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade28SecretKvmVmmEntry.setStatus('current')
b28SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b28SecretKvmVmmIndex.setStatus('current')
b28SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28SecretKvmState.setStatus('current')
b28SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28SecretVmmState.setStatus('current')
b28MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b28MMSecretVmmKey.setStatus('current')
b28SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 28, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b28SecretVmmKey.setStatus('current')
blade29 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29))
b29DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29DeviceID.setStatus('current')
b29PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29PowerState.setStatus('current')
b29Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29Presence.setStatus('current')
b29Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29Health.setStatus('current')
b29HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29HealthEvents.setStatus('current')
b29ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29ClearSEL.setStatus('current')
b29ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29ExDiskBoardPresence.setStatus('current')
b29BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29BladeVersion.setStatus('current')
b29MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29MACAddress.setStatus('current')
b29Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29Safepwofftime.setStatus('current')
b29BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29BiosBootOption.setStatus('current')
b29Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29Systeminfo.setStatus('current')
b29SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29SystemProperties.setStatus('current')
b29BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29BiosCfg.setStatus('current')
b29WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29WDTBootEnable.setStatus('current')
b29RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29RealTimePower.setStatus('current')
b29PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29PowerCapping.setStatus('current')
b29Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29Powerreference.setStatus('current')
b29ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29ClearBiosConfig.setStatus('current')
b29BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29BmcIP.setStatus('current')
b29BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29BmcUserAdd.setStatus('current')
b29BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29BmcUserDel.setStatus('current')
b29BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29BmcUserPasswd.setStatus('current')
b29BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29BmcUserpropertychg.setStatus('current')
b29BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29BmcGateway.setStatus('current')
b29SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29SlotBitmap.setStatus('current')
b29systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29systemGuid.setStatus('current')
b29ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29ProductName.setStatus('current')
b29BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29BundleVersion.setStatus('current')
blade29SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2001), )
if mibBuilder.loadTexts: blade29SensorTargetTable.setStatus('current')
blade29SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b1Target"))
if mibBuilder.loadTexts: blade29SensorTargetEntry.setStatus('current')
b29Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b29Target.setStatus('current')
b29Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29Current.setStatus('current')
b29ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29ThresholdsAll.setStatus('current')
b29UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29UpperCritical.setStatus('current')
b29UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29UpperNonCritical.setStatus('current')
b29UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29UpperNonRecoverable.setStatus('current')
b29LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29LowerNonCritical.setStatus('current')
b29LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29LowerCritical.setStatus('current')
b29LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29LowerNonRecoverable.setStatus('current')
b29SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29SensorHealth.setStatus('current')
b29SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29SensorHealthEvents.setStatus('current')
b29NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29NegativeHysteresis.setStatus('current')
b29PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29PositiveHysteresis.setStatus('current')
b29SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29SensorType.setStatus('current')
b29SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29SensorFRUInfo.setStatus('current')
blade29FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2002), )
if mibBuilder.loadTexts: blade29FruTable.setStatus('current')
blade29FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b1fruNumber"))
if mibBuilder.loadTexts: blade29FruEntry.setStatus('current')
b29fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b29fruNumber.setStatus('current')
b29FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29FruHotSwapState.setStatus('current')
b29FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29FruLedProperties.setStatus('current')
b29FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29FRUControl.setStatus('current')
b29FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29FRULabel.setStatus('current')
b29ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29ResetReason.setStatus('current')
blade29FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2003), )
if mibBuilder.loadTexts: blade29FruLedTable.setStatus('current')
blade29FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b1FruID"), (0, "HWSMM-MIB", "b1FruLed"))
if mibBuilder.loadTexts: blade29FruLedEntry.setStatus('current')
b29FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b29FruID.setStatus('current')
b29FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b29FruLed.setStatus('current')
b29FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29FruLedColorProps.setStatus('current')
b29FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29FruLedState.setStatus('current')
blade29FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2004), )
if mibBuilder.loadTexts: blade29FruDescriptionTable.setStatus('current')
blade29FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b1fruNum"))
if mibBuilder.loadTexts: blade29FruDescriptionEntry.setStatus('current')
b29fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b29fruNum.setStatus('current')
b29fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29fruBoardDescription.setStatus('current')
b29fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29fruBoardManufacturer.setStatus('current')
b29fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29fruBoardPartNumber.setStatus('current')
b29fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29fruBoardSerialNumber.setStatus('current')
b29fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29fruBoardManufactureDate.setStatus('current')
b29fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29fruProductDescription.setStatus('current')
b29fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29fruProductManufacturer.setStatus('current')
b29fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29fruProductPartNumber.setStatus('current')
b29fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29fruProductSerialNumber.setStatus('current')
b29fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29fruProductRevision.setStatus('current')
b29fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29fruAll.setStatus('current')
blade29CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2006), )
if mibBuilder.loadTexts: blade29CPUTable.setStatus('current')
blade29CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b29CPUIndex"))
if mibBuilder.loadTexts: blade29CPUEntry.setStatus('current')
b29CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b29CPUIndex.setStatus('current')
b29CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29CPUMark.setStatus('current')
b29CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29CPUInfo.setStatus('current')
b29CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29CPUPresent.setStatus('current')
b29CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29CPUHealth.setStatus('current')
b29CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29CPULocation.setStatus('current')
blade29MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2007), )
if mibBuilder.loadTexts: blade29MemoryTable.setStatus('current')
blade29MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b29MEMIndex"))
if mibBuilder.loadTexts: blade29MemoryEntry.setStatus('current')
b29MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b29MEMIndex.setStatus('current')
b29MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29MEMMark.setStatus('current')
b29MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29MEMInfo.setStatus('current')
b29MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29MEMPresent.setStatus('current')
b29MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29MEMHealth.setStatus('current')
b29MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29MEMLocation.setStatus('current')
blade29MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2008), )
if mibBuilder.loadTexts: blade29MezzTable.setStatus('current')
blade29MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b29MezzIndex"))
if mibBuilder.loadTexts: blade29MezzEntry.setStatus('current')
b29MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b29MezzIndex.setStatus('current')
b29MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29MezzMark.setStatus('current')
b29MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29MezzInfo.setStatus('current')
b29MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29MezzPresent.setStatus('current')
b29MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29MezzHealth.setStatus('current')
b29MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29MezzLocation.setStatus('current')
b29MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29MezzMac.setStatus('current')
blade29DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2009), )
if mibBuilder.loadTexts: blade29DiskTable.setStatus('current')
blade29DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b29DiskIndex"))
if mibBuilder.loadTexts: blade29DiskEntry.setStatus('current')
b29DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b29DiskIndex.setStatus('current')
b29DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29DiskMark.setStatus('current')
b29DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29DiskInfo.setStatus('current')
b29DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29DiskPresent.setStatus('current')
b29DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29DiskHealth.setStatus('current')
b29DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29DiskLocation.setStatus('current')
blade29SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2010), )
if mibBuilder.loadTexts: blade29SecretKvmVmmTable.setStatus('current')
blade29SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b29SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade29SecretKvmVmmEntry.setStatus('current')
b29SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b29SecretKvmVmmIndex.setStatus('current')
b29SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29SecretKvmState.setStatus('current')
b29SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29SecretVmmState.setStatus('current')
b29MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b29MMSecretVmmKey.setStatus('current')
b29SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 29, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b29SecretVmmKey.setStatus('current')
blade30 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30))
b30DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30DeviceID.setStatus('current')
b30PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30PowerState.setStatus('current')
b30Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30Presence.setStatus('current')
b30Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30Health.setStatus('current')
b30HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30HealthEvents.setStatus('current')
b30ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30ClearSEL.setStatus('current')
b30ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30ExDiskBoardPresence.setStatus('current')
b30BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30BladeVersion.setStatus('current')
b30MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30MACAddress.setStatus('current')
b30Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30Safepwofftime.setStatus('current')
b30BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30BiosBootOption.setStatus('current')
b30Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30Systeminfo.setStatus('current')
b30SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30SystemProperties.setStatus('current')
b30BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30BiosCfg.setStatus('current')
b30WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30WDTBootEnable.setStatus('current')
b30RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30RealTimePower.setStatus('current')
b30PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30PowerCapping.setStatus('current')
b30Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30Powerreference.setStatus('current')
b30ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30ClearBiosConfig.setStatus('current')
b30BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30BmcIP.setStatus('current')
b30BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30BmcUserAdd.setStatus('current')
b30BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30BmcUserDel.setStatus('current')
b30BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30BmcUserPasswd.setStatus('current')
b30BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30BmcUserpropertychg.setStatus('current')
b30BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30BmcGateway.setStatus('current')
b30SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30SlotBitmap.setStatus('current')
b30systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30systemGuid.setStatus('current')
b30ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30ProductName.setStatus('current')
b30BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30BundleVersion.setStatus('current')
blade30SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2001), )
if mibBuilder.loadTexts: blade30SensorTargetTable.setStatus('current')
blade30SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b1Target"))
if mibBuilder.loadTexts: blade30SensorTargetEntry.setStatus('current')
b30Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b30Target.setStatus('current')
b30Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30Current.setStatus('current')
b30ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30ThresholdsAll.setStatus('current')
b30UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30UpperCritical.setStatus('current')
b30UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30UpperNonCritical.setStatus('current')
b30UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30UpperNonRecoverable.setStatus('current')
b30LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30LowerNonCritical.setStatus('current')
b30LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30LowerCritical.setStatus('current')
b30LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30LowerNonRecoverable.setStatus('current')
b30SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30SensorHealth.setStatus('current')
b30SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30SensorHealthEvents.setStatus('current')
b30NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30NegativeHysteresis.setStatus('current')
b30PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30PositiveHysteresis.setStatus('current')
b30SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30SensorType.setStatus('current')
b30SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30SensorFRUInfo.setStatus('current')
blade30FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2002), )
if mibBuilder.loadTexts: blade30FruTable.setStatus('current')
blade30FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b1fruNumber"))
if mibBuilder.loadTexts: blade30FruEntry.setStatus('current')
b30fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b30fruNumber.setStatus('current')
b30FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30FruHotSwapState.setStatus('current')
b30FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30FruLedProperties.setStatus('current')
b30FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30FRUControl.setStatus('current')
b30FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30FRULabel.setStatus('current')
b30ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30ResetReason.setStatus('current')
blade30FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2003), )
if mibBuilder.loadTexts: blade30FruLedTable.setStatus('current')
blade30FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b1FruID"), (0, "HWSMM-MIB", "b1FruLed"))
if mibBuilder.loadTexts: blade30FruLedEntry.setStatus('current')
b30FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b30FruID.setStatus('current')
b30FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b30FruLed.setStatus('current')
b30FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30FruLedColorProps.setStatus('current')
b30FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30FruLedState.setStatus('current')
blade30FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2004), )
if mibBuilder.loadTexts: blade30FruDescriptionTable.setStatus('current')
blade30FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b1fruNum"))
if mibBuilder.loadTexts: blade30FruDescriptionEntry.setStatus('current')
b30fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b30fruNum.setStatus('current')
b30fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30fruBoardDescription.setStatus('current')
b30fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30fruBoardManufacturer.setStatus('current')
b30fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30fruBoardPartNumber.setStatus('current')
b30fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30fruBoardSerialNumber.setStatus('current')
b30fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30fruBoardManufactureDate.setStatus('current')
b30fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30fruProductDescription.setStatus('current')
b30fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30fruProductManufacturer.setStatus('current')
b30fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30fruProductPartNumber.setStatus('current')
b30fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30fruProductSerialNumber.setStatus('current')
b30fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30fruProductRevision.setStatus('current')
b30fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30fruAll.setStatus('current')
blade30CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2006), )
if mibBuilder.loadTexts: blade30CPUTable.setStatus('current')
blade30CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b30CPUIndex"))
if mibBuilder.loadTexts: blade30CPUEntry.setStatus('current')
b30CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b30CPUIndex.setStatus('current')
b30CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30CPUMark.setStatus('current')
b30CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30CPUInfo.setStatus('current')
b30CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30CPUPresent.setStatus('current')
b30CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30CPUHealth.setStatus('current')
b30CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30CPULocation.setStatus('current')
blade30MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2007), )
if mibBuilder.loadTexts: blade30MemoryTable.setStatus('current')
blade30MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b30MEMIndex"))
if mibBuilder.loadTexts: blade30MemoryEntry.setStatus('current')
b30MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b30MEMIndex.setStatus('current')
b30MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30MEMMark.setStatus('current')
b30MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30MEMInfo.setStatus('current')
b30MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30MEMPresent.setStatus('current')
b30MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30MEMHealth.setStatus('current')
b30MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30MEMLocation.setStatus('current')
blade30MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2008), )
if mibBuilder.loadTexts: blade30MezzTable.setStatus('current')
blade30MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b30MezzIndex"))
if mibBuilder.loadTexts: blade30MezzEntry.setStatus('current')
b30MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b30MezzIndex.setStatus('current')
b30MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30MezzMark.setStatus('current')
b30MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30MezzInfo.setStatus('current')
b30MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30MezzPresent.setStatus('current')
b30MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30MezzHealth.setStatus('current')
b30MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30MezzLocation.setStatus('current')
b30MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30MezzMac.setStatus('current')
blade30DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2009), )
if mibBuilder.loadTexts: blade30DiskTable.setStatus('current')
blade30DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b30DiskIndex"))
if mibBuilder.loadTexts: blade30DiskEntry.setStatus('current')
b30DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b30DiskIndex.setStatus('current')
b30DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30DiskMark.setStatus('current')
b30DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30DiskInfo.setStatus('current')
b30DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30DiskPresent.setStatus('current')
b30DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30DiskHealth.setStatus('current')
b30DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30DiskLocation.setStatus('current')
blade30SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2010), )
if mibBuilder.loadTexts: blade30SecretKvmVmmTable.setStatus('current')
blade30SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b30SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade30SecretKvmVmmEntry.setStatus('current')
b30SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b30SecretKvmVmmIndex.setStatus('current')
b30SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30SecretKvmState.setStatus('current')
b30SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30SecretVmmState.setStatus('current')
b30MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b30MMSecretVmmKey.setStatus('current')
b30SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 30, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b30SecretVmmKey.setStatus('current')
blade31 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31))
b31DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31DeviceID.setStatus('current')
b31PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31PowerState.setStatus('current')
b31Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31Presence.setStatus('current')
b31Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31Health.setStatus('current')
b31HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31HealthEvents.setStatus('current')
b31ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31ClearSEL.setStatus('current')
b31ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31ExDiskBoardPresence.setStatus('current')
b31BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31BladeVersion.setStatus('current')
b31MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31MACAddress.setStatus('current')
b31Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31Safepwofftime.setStatus('current')
b31BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31BiosBootOption.setStatus('current')
b31Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31Systeminfo.setStatus('current')
b31SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31SystemProperties.setStatus('current')
b31BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31BiosCfg.setStatus('current')
b31WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31WDTBootEnable.setStatus('current')
b31RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31RealTimePower.setStatus('current')
b31PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31PowerCapping.setStatus('current')
b31Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31Powerreference.setStatus('current')
b31ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31ClearBiosConfig.setStatus('current')
b31BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31BmcIP.setStatus('current')
b31BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31BmcUserAdd.setStatus('current')
b31BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31BmcUserDel.setStatus('current')
b31BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31BmcUserPasswd.setStatus('current')
b31BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31BmcUserpropertychg.setStatus('current')
b31BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31BmcGateway.setStatus('current')
b31SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31SlotBitmap.setStatus('current')
b31systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31systemGuid.setStatus('current')
b31ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31ProductName.setStatus('current')
b31BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31BundleVersion.setStatus('current')
blade31SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2001), )
if mibBuilder.loadTexts: blade31SensorTargetTable.setStatus('current')
blade31SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b11Target"))
if mibBuilder.loadTexts: blade31SensorTargetEntry.setStatus('current')
b31Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b31Target.setStatus('current')
b31Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31Current.setStatus('current')
b31ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31ThresholdsAll.setStatus('current')
b31UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31UpperCritical.setStatus('current')
b31UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31UpperNonCritical.setStatus('current')
b31UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31UpperNonRecoverable.setStatus('current')
b31LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31LowerNonCritical.setStatus('current')
b31LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31LowerCritical.setStatus('current')
b31LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31LowerNonRecoverable.setStatus('current')
b31SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31SensorHealth.setStatus('current')
b31SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31SensorHealthEvents.setStatus('current')
b31NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31NegativeHysteresis.setStatus('current')
b31PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31PositiveHysteresis.setStatus('current')
b31SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31SensorType.setStatus('current')
b31SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31SensorFRUInfo.setStatus('current')
blade31FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2002), )
if mibBuilder.loadTexts: blade31FruTable.setStatus('current')
blade31FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b11fruNumber"))
if mibBuilder.loadTexts: blade31FruEntry.setStatus('current')
b31fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b31fruNumber.setStatus('current')
b31FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31FruHotSwapState.setStatus('current')
b31FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31FruLedProperties.setStatus('current')
b31FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31FRUControl.setStatus('current')
b31FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31FRULabel.setStatus('current')
b31ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31ResetReason.setStatus('current')
blade31FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2003), )
if mibBuilder.loadTexts: blade31FruLedTable.setStatus('current')
blade31FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b11FruID"), (0, "HWSMM-MIB", "b11FruLed"))
if mibBuilder.loadTexts: blade31FruLedEntry.setStatus('current')
b31FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b31FruID.setStatus('current')
b31FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b31FruLed.setStatus('current')
b31FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31FruLedColorProps.setStatus('current')
b31FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31FruLedState.setStatus('current')
blade31FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2004), )
if mibBuilder.loadTexts: blade31FruDescriptionTable.setStatus('current')
blade31FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b11fruNum"))
if mibBuilder.loadTexts: blade31FruDescriptionEntry.setStatus('current')
b31fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b31fruNum.setStatus('current')
b31fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31fruBoardDescription.setStatus('current')
b31fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31fruBoardManufacturer.setStatus('current')
b31fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31fruBoardPartNumber.setStatus('current')
b31fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31fruBoardSerialNumber.setStatus('current')
b31fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31fruBoardManufactureDate.setStatus('current')
b31fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31fruProductDescription.setStatus('current')
b31fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31fruProductManufacturer.setStatus('current')
b31fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31fruProductPartNumber.setStatus('current')
b31fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31fruProductSerialNumber.setStatus('current')
b31fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31fruProductRevision.setStatus('current')
b31fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31fruAll.setStatus('current')
blade31CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2006), )
if mibBuilder.loadTexts: blade31CPUTable.setStatus('current')
blade31CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b31CPUIndex"))
if mibBuilder.loadTexts: blade31CPUEntry.setStatus('current')
b31CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b31CPUIndex.setStatus('current')
b31CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31CPUMark.setStatus('current')
b31CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31CPUInfo.setStatus('current')
b31CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31CPUPresent.setStatus('current')
b31CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31CPUHealth.setStatus('current')
b31CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31CPULocation.setStatus('current')
blade31MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2007), )
if mibBuilder.loadTexts: blade31MemoryTable.setStatus('current')
blade31MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b31MEMIndex"))
if mibBuilder.loadTexts: blade31MemoryEntry.setStatus('current')
b31MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b31MEMIndex.setStatus('current')
b31MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31MEMMark.setStatus('current')
b31MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31MEMInfo.setStatus('current')
b31MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31MEMPresent.setStatus('current')
b31MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31MEMHealth.setStatus('current')
b31MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31MEMLocation.setStatus('current')
blade31MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2008), )
if mibBuilder.loadTexts: blade31MezzTable.setStatus('current')
blade31MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b31MezzIndex"))
if mibBuilder.loadTexts: blade31MezzEntry.setStatus('current')
b31MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b31MezzIndex.setStatus('current')
b31MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31MezzMark.setStatus('current')
b31MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31MezzInfo.setStatus('current')
b31MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31MezzPresent.setStatus('current')
b31MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31MezzHealth.setStatus('current')
b31MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31MezzLocation.setStatus('current')
b31MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31MezzMac.setStatus('current')
blade31DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2009), )
if mibBuilder.loadTexts: blade31DiskTable.setStatus('current')
blade31DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b31DiskIndex"))
if mibBuilder.loadTexts: blade31DiskEntry.setStatus('current')
b31DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b31DiskIndex.setStatus('current')
b31DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31DiskMark.setStatus('current')
b31DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31DiskInfo.setStatus('current')
b31DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31DiskPresent.setStatus('current')
b31DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31DiskHealth.setStatus('current')
b31DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31DiskLocation.setStatus('current')
blade31SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2010), )
if mibBuilder.loadTexts: blade31SecretKvmVmmTable.setStatus('current')
blade31SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b31SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade31SecretKvmVmmEntry.setStatus('current')
b31SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b31SecretKvmVmmIndex.setStatus('current')
b31SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31SecretKvmState.setStatus('current')
b31SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31SecretVmmState.setStatus('current')
b31MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b31MMSecretVmmKey.setStatus('current')
b31SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 31, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b31SecretVmmKey.setStatus('current')
blade32 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32))
b32DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32DeviceID.setStatus('current')
b32PowerState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32PowerState.setStatus('current')
b32Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32Presence.setStatus('current')
b32Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32Health.setStatus('current')
b32HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32HealthEvents.setStatus('current')
b32ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32ClearSEL.setStatus('current')
b32ExDiskBoardPresence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32ExDiskBoardPresence.setStatus('current')
b32BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32BladeVersion.setStatus('current')
b32MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32MACAddress.setStatus('current')
b32Safepwofftime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32Safepwofftime.setStatus('current')
b32BiosBootOption = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32BiosBootOption.setStatus('current')
b32Systeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32Systeminfo.setStatus('current')
b32SystemProperties = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32SystemProperties.setStatus('current')
b32BiosCfg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32BiosCfg.setStatus('current')
b32WDTBootEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 41), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32WDTBootEnable.setStatus('current')
b32RealTimePower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32RealTimePower.setStatus('current')
b32PowerCapping = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32PowerCapping.setStatus('current')
b32Powerreference = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32Powerreference.setStatus('current')
b32ClearBiosConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32ClearBiosConfig.setStatus('current')
b32BmcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32BmcIP.setStatus('current')
b32BmcUserAdd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32BmcUserAdd.setStatus('current')
b32BmcUserDel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32BmcUserDel.setStatus('current')
b32BmcUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32BmcUserPasswd.setStatus('current')
b32BmcUserpropertychg = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32BmcUserpropertychg.setStatus('current')
b32BmcGateway = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32BmcGateway.setStatus('current')
b32SlotBitmap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32SlotBitmap.setStatus('current')
b32systemGuid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32systemGuid.setStatus('current')
b32ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32ProductName.setStatus('current')
b32BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32BundleVersion.setStatus('current')
blade32SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2001), )
if mibBuilder.loadTexts: blade32SensorTargetTable.setStatus('current')
blade32SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "b12Target"))
if mibBuilder.loadTexts: blade32SensorTargetEntry.setStatus('current')
b32Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: b32Target.setStatus('current')
b32Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32Current.setStatus('current')
b32ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32ThresholdsAll.setStatus('current')
b32UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32UpperCritical.setStatus('current')
b32UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32UpperNonCritical.setStatus('current')
b32UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32UpperNonRecoverable.setStatus('current')
b32LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32LowerNonCritical.setStatus('current')
b32LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32LowerCritical.setStatus('current')
b32LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32LowerNonRecoverable.setStatus('current')
b32SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32SensorHealth.setStatus('current')
b32SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32SensorHealthEvents.setStatus('current')
b32NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32NegativeHysteresis.setStatus('current')
b32PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32PositiveHysteresis.setStatus('current')
b32SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32SensorType.setStatus('current')
b32SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32SensorFRUInfo.setStatus('current')
blade32FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2002), )
if mibBuilder.loadTexts: blade32FruTable.setStatus('current')
blade32FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "b12fruNumber"))
if mibBuilder.loadTexts: blade32FruEntry.setStatus('current')
b32fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: b32fruNumber.setStatus('current')
b32FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32FruHotSwapState.setStatus('current')
b32FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32FruLedProperties.setStatus('current')
b32FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32FRUControl.setStatus('current')
b32FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32FRULabel.setStatus('current')
b32ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32ResetReason.setStatus('current')
blade32FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2003), )
if mibBuilder.loadTexts: blade32FruLedTable.setStatus('current')
blade32FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "b12FruID"), (0, "HWSMM-MIB", "b12FruLed"))
if mibBuilder.loadTexts: blade32FruLedEntry.setStatus('current')
b32FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: b32FruID.setStatus('current')
b32FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: b32FruLed.setStatus('current')
b32FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32FruLedColorProps.setStatus('current')
b32FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32FruLedState.setStatus('current')
blade32FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2004), )
if mibBuilder.loadTexts: blade32FruDescriptionTable.setStatus('current')
blade32FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "b12fruNum"))
if mibBuilder.loadTexts: blade32FruDescriptionEntry.setStatus('current')
b32fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: b32fruNum.setStatus('current')
b32fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32fruBoardDescription.setStatus('current')
b32fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32fruBoardManufacturer.setStatus('current')
b32fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32fruBoardPartNumber.setStatus('current')
b32fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32fruBoardSerialNumber.setStatus('current')
b32fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32fruBoardManufactureDate.setStatus('current')
b32fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32fruProductDescription.setStatus('current')
b32fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32fruProductManufacturer.setStatus('current')
b32fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32fruProductPartNumber.setStatus('current')
b32fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32fruProductSerialNumber.setStatus('current')
b32fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32fruProductRevision.setStatus('current')
b32fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32fruAll.setStatus('current')
blade32CPUTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2006), )
if mibBuilder.loadTexts: blade32CPUTable.setStatus('current')
blade32CPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2006, 1), ).setIndexNames((0, "HWSMM-MIB", "b32CPUIndex"))
if mibBuilder.loadTexts: blade32CPUEntry.setStatus('current')
b32CPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2006, 1, 1), Integer32())
if mibBuilder.loadTexts: b32CPUIndex.setStatus('current')
b32CPUMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2006, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32CPUMark.setStatus('current')
b32CPUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2006, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32CPUInfo.setStatus('current')
b32CPUPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2006, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32CPUPresent.setStatus('current')
b32CPUHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2006, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32CPUHealth.setStatus('current')
b32CPULocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2006, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32CPULocation.setStatus('current')
blade32MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2007), )
if mibBuilder.loadTexts: blade32MemoryTable.setStatus('current')
blade32MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2007, 1), ).setIndexNames((0, "HWSMM-MIB", "b32MEMIndex"))
if mibBuilder.loadTexts: blade32MemoryEntry.setStatus('current')
b32MEMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2007, 1, 1), Integer32())
if mibBuilder.loadTexts: b32MEMIndex.setStatus('current')
b32MEMMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2007, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32MEMMark.setStatus('current')
b32MEMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2007, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32MEMInfo.setStatus('current')
b32MEMPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2007, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32MEMPresent.setStatus('current')
b32MEMHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2007, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32MEMHealth.setStatus('current')
b32MEMLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2007, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32MEMLocation.setStatus('current')
blade32MezzTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2008), )
if mibBuilder.loadTexts: blade32MezzTable.setStatus('current')
blade32MezzEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2008, 1), ).setIndexNames((0, "HWSMM-MIB", "b32MezzIndex"))
if mibBuilder.loadTexts: blade32MezzEntry.setStatus('current')
b32MezzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2008, 1, 1), Integer32())
if mibBuilder.loadTexts: b32MezzIndex.setStatus('current')
b32MezzMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2008, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32MezzMark.setStatus('current')
b32MezzInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2008, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32MezzInfo.setStatus('current')
b32MezzPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2008, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32MezzPresent.setStatus('current')
b32MezzHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2008, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32MezzHealth.setStatus('current')
b32MezzLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2008, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32MezzLocation.setStatus('current')
b32MezzMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2008, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32MezzMac.setStatus('current')
blade32DiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2009), )
if mibBuilder.loadTexts: blade32DiskTable.setStatus('current')
blade32DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2009, 1), ).setIndexNames((0, "HWSMM-MIB", "b32DiskIndex"))
if mibBuilder.loadTexts: blade32DiskEntry.setStatus('current')
b32DiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2009, 1, 1), Integer32())
if mibBuilder.loadTexts: b32DiskIndex.setStatus('current')
b32DiskMark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2009, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32DiskMark.setStatus('current')
b32DiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2009, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32DiskInfo.setStatus('current')
b32DiskPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2009, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32DiskPresent.setStatus('current')
b32DiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2009, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32DiskHealth.setStatus('current')
b32DiskLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2009, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32DiskLocation.setStatus('current')
blade32SecretKvmVmmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2010), )
if mibBuilder.loadTexts: blade32SecretKvmVmmTable.setStatus('current')
blade32SecretKvmVmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2010, 1), ).setIndexNames((0, "HWSMM-MIB", "b32SecretKvmVmmIndex"))
if mibBuilder.loadTexts: blade32SecretKvmVmmEntry.setStatus('current')
b32SecretKvmVmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2010, 1, 1), Integer32())
if mibBuilder.loadTexts: b32SecretKvmVmmIndex.setStatus('current')
b32SecretKvmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2010, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportKVM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32SecretKvmState.setStatus('current')
b32SecretVmmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2010, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4)).clone(namedValues=NamedValues(("noEncrypt", 1), ("encrypt", 2), ("noSupportEncrypt", 3), ("noSupportVMM", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32SecretVmmState.setStatus('current')
b32MMSecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2010, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: b32MMSecretVmmKey.setStatus('current')
b32SecretVmmKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 4, 32, 2010, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: b32SecretVmmKey.setStatus('current')
fanTray = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 5))
fanTrayFanTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 5, 2001), )
if mibBuilder.loadTexts: fanTrayFanTable.setStatus('current')
fanTrayFanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 5, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "fanIndex"))
if mibBuilder.loadTexts: fanTrayFanEntry.setStatus('current')
fanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 5, 2001, 1, 1), Integer32())
if mibBuilder.loadTexts: fanIndex.setStatus('current')
fanPresence = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 5, 2001, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanPresence.setStatus('current')
fanSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 5, 2001, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fanSpeed.setStatus('current')
fanInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 5, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fanInfo.setStatus('current')
fanUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 5, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fanUpdate.setStatus('current')
fanVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 5, 2001, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanVersion.setStatus('current')
fanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 5, 2001, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanStatus.setStatus('current')
pems = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 6))
pemsPowerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 6, 2001), )
if mibBuilder.loadTexts: pemsPowerTable.setStatus('current')
pemsPowerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 6, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "powerIndex"))
if mibBuilder.loadTexts: pemsPowerEntry.setStatus('current')
powerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 6, 2001, 1, 1), Integer32())
if mibBuilder.loadTexts: powerIndex.setStatus('current')
powerPresence = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 6, 2001, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerPresence.setStatus('current')
powerState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 6, 2001, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("normal", 0), ("abnormal", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerState.setStatus('current')
powerRatingPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 6, 2001, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerRatingPower.setStatus('current')
powerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 6, 2001, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerMode.setStatus('current')
powerSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 6, 2001, 1, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("close", 0), ("open", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: powerSwitch.setStatus('current')
powerInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 6, 2001, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerInfo.setStatus('current')
powerRuntimePower = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 6, 2001, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerRuntimePower.setStatus('current')
powerFaultReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 6, 2001, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerFaultReason.setStatus('current')
swi = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7))
swi1 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1))
swi1DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1DeviceID.setStatus('current')
swi1Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1Presence.setStatus('current')
swi1Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1Health.setStatus('current')
swi1HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1HealthEvents.setStatus('current')
swi1ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi1ClearSEL.setStatus('current')
swi1ConfigSupport = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1ConfigSupport.setStatus('current')
swi1ConfigInfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1ConfigInfo.setStatus('current')
swi1BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1BladeVersion.setStatus('current')
swi1FcPortConn = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 21), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi1FcPortConn.setStatus('current')
swi1ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1ProductName.setStatus('current')
swi1BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi1BundleVersion.setStatus('current')
swi1ClearAlarm = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi1ClearAlarm.setStatus('current')
swi1SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2001), )
if mibBuilder.loadTexts: swi1SensorTargetTable.setStatus('current')
swi1SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "swi1Target"))
if mibBuilder.loadTexts: swi1SensorTargetEntry.setStatus('current')
swi1Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: swi1Target.setStatus('current')
swi1Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1Current.setStatus('current')
swi1ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1ThresholdsAll.setStatus('current')
swi1UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi1UpperCritical.setStatus('current')
swi1UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi1UpperNonCritical.setStatus('current')
swi1UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi1UpperNonRecoverable.setStatus('current')
swi1LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi1LowerNonCritical.setStatus('current')
swi1LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi1LowerCritical.setStatus('current')
swi1LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi1LowerNonRecoverable.setStatus('current')
swi1SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1SensorHealth.setStatus('current')
swi1SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1SensorHealthEvents.setStatus('current')
swi1NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi1NegativeHysteresis.setStatus('current')
swi1PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi1PositiveHysteresis.setStatus('current')
swi1SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1SensorType.setStatus('current')
swi1SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1SensorFRUInfo.setStatus('current')
swi1FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2002), )
if mibBuilder.loadTexts: swi1FruTable.setStatus('current')
swi1FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "swi1fruNumber"))
if mibBuilder.loadTexts: swi1FruEntry.setStatus('current')
swi1fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: swi1fruNumber.setStatus('current')
swi1FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1FruHotSwapState.setStatus('current')
swi1FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1FruLedProperties.setStatus('current')
swi1FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi1FRUControl.setStatus('current')
swi1FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1FRULabel.setStatus('current')
swi1ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1ResetReason.setStatus('current')
swi1PowerState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2002, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi1PowerState.setStatus('current')
swi1SWIPControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2002, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi1SWIPControl.setStatus('current')
swi1Gateway = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2002, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi1Gateway.setStatus('current')
swi1Route = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2002, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi1Route.setStatus('current')
swi1VLanIfIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2002, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi1VLanIfIP.setStatus('current')
swi1FruVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2002, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1FruVersion.setStatus('current')
swi1SaveConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2002, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi1SaveConfig.setStatus('current')
swi1StackState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2002, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1StackState.setStatus('current')
swi1FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2003), )
if mibBuilder.loadTexts: swi1FruLedTable.setStatus('current')
swi1FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "swi1FruID"), (0, "HWSMM-MIB", "swi1FruLed"))
if mibBuilder.loadTexts: swi1FruLedEntry.setStatus('current')
swi1FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: swi1FruID.setStatus('current')
swi1FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: swi1FruLed.setStatus('current')
swi1FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1FruLedColorProps.setStatus('current')
swi1FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi1FruLedState.setStatus('current')
swi1FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2004), )
if mibBuilder.loadTexts: swi1FruDescriptionTable.setStatus('current')
swi1FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "swi1fruNum"))
if mibBuilder.loadTexts: swi1FruDescriptionEntry.setStatus('current')
swi1fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: swi1fruNum.setStatus('current')
swi1fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1fruBoardDescription.setStatus('current')
swi1fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1fruBoardManufacturer.setStatus('current')
swi1fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1fruBoardPartNumber.setStatus('current')
swi1fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1fruBoardSerialNumber.setStatus('current')
swi1fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1fruBoardManufactureDate.setStatus('current')
swi1fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1fruProductDescription.setStatus('current')
swi1fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1fruProductManufacturer.setStatus('current')
swi1fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1fruProductPartNumber.setStatus('current')
swi1fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1fruProductSerialNumber.setStatus('current')
swi1fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1fruProductRevision.setStatus('current')
swi1fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1fruAll.setStatus('current')
swi1PortTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2005), )
if mibBuilder.loadTexts: swi1PortTargetTable.setStatus('current')
swi1PortTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2005, 1), ).setIndexNames((0, "HWSMM-MIB", "swi1PortNum"))
if mibBuilder.loadTexts: swi1PortTargetEntry.setStatus('current')
swi1PortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2005, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1PortNum.setStatus('current')
swi1OTMState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2005, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1OTMState.setStatus('current')
swi1OTMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2005, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1OTMInfo.setStatus('current')
swi1PhyState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2005, 1, 4), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("down", 0), ("up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1PhyState.setStatus('current')
swi1PhyReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2005, 1, 5), Integer32()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: swi1PhyReset.setStatus('current')
swi1PortToBladeSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2005, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1PortToBladeSlot.setStatus('current')
swi1PortName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2005, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1PortName.setStatus('current')
swi1OTMData = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2005, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1OTMData.setStatus('current')
swi1PortState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 1, 2005, 1, 9), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 255)).clone(namedValues=NamedValues(("linkUp", 1), ("phyLinkDown", 2), ("phyLinkUp", 3), ("linkFault", 4), ("invalidState", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi1PortState.setStatus('current')
swi2 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2))
swi2DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2DeviceID.setStatus('current')
swi2Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2Presence.setStatus('current')
swi2Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2Health.setStatus('current')
swi2HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2HealthEvents.setStatus('current')
swi2ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi2ClearSEL.setStatus('current')
swi2ConfigSupport = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2ConfigSupport.setStatus('current')
swi2ConfigInfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2ConfigInfo.setStatus('current')
swi2BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2BladeVersion.setStatus('current')
swi2FcPortConn = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 21), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi2FcPortConn.setStatus('current')
swi2ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2ProductName.setStatus('current')
swi2BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi2BundleVersion.setStatus('current')
swi2ClearAlarm = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi2ClearAlarm.setStatus('current')
swi2SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2001), )
if mibBuilder.loadTexts: swi2SensorTargetTable.setStatus('current')
swi2SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "swi2Target"))
if mibBuilder.loadTexts: swi2SensorTargetEntry.setStatus('current')
swi2Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: swi2Target.setStatus('current')
swi2Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2Current.setStatus('current')
swi2ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2ThresholdsAll.setStatus('current')
swi2UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi2UpperCritical.setStatus('current')
swi2UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi2UpperNonCritical.setStatus('current')
swi2UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi2UpperNonRecoverable.setStatus('current')
swi2LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi2LowerNonCritical.setStatus('current')
swi2LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi2LowerCritical.setStatus('current')
swi2LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi2LowerNonRecoverable.setStatus('current')
swi2SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2SensorHealth.setStatus('current')
swi2SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2SensorHealthEvents.setStatus('current')
swi2NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi2NegativeHysteresis.setStatus('current')
swi2PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi2PositiveHysteresis.setStatus('current')
swi2SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2SensorType.setStatus('current')
swi2SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2SensorFRUInfo.setStatus('current')
swi2FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2002), )
if mibBuilder.loadTexts: swi2FruTable.setStatus('current')
swi2FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "swi2fruNumber"))
if mibBuilder.loadTexts: swi2FruEntry.setStatus('current')
swi2fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: swi2fruNumber.setStatus('current')
swi2FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2FruHotSwapState.setStatus('current')
swi2FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2FruLedProperties.setStatus('current')
swi2FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi2FRUControl.setStatus('current')
swi2FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2FRULabel.setStatus('current')
swi2ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2ResetReason.setStatus('current')
swi2PowerState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2002, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi2PowerState.setStatus('current')
swi2SWIPControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2002, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi2SWIPControl.setStatus('current')
swi2Gateway = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2002, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi2Gateway.setStatus('current')
swi2Route = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2002, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi2Route.setStatus('current')
swi2VLanIfIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2002, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi2VLanIfIP.setStatus('current')
swi2FruVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2002, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2FruVersion.setStatus('current')
swi2SaveConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2002, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi2SaveConfig.setStatus('current')
swi2StackState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2002, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2StackState.setStatus('current')
swi2FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2003), )
if mibBuilder.loadTexts: swi2FruLedTable.setStatus('current')
swi2FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "swi2FruID"), (0, "HWSMM-MIB", "swi2FruLed"))
if mibBuilder.loadTexts: swi2FruLedEntry.setStatus('current')
swi2FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: swi2FruID.setStatus('current')
swi2FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: swi2FruLed.setStatus('current')
swi2FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2FruLedColorProps.setStatus('current')
swi2FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi2FruLedState.setStatus('current')
swi2FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2004), )
if mibBuilder.loadTexts: swi2FruDescriptionTable.setStatus('current')
swi2FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "swi2fruNum"))
if mibBuilder.loadTexts: swi2FruDescriptionEntry.setStatus('current')
swi2fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: swi2fruNum.setStatus('current')
swi2fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2fruBoardDescription.setStatus('current')
swi2fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2fruBoardManufacturer.setStatus('current')
swi2fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2fruBoardPartNumber.setStatus('current')
swi2fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2fruBoardSerialNumber.setStatus('current')
swi2fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2fruBoardManufactureDate.setStatus('current')
swi2fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2fruProductDescription.setStatus('current')
swi2fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2fruProductManufacturer.setStatus('current')
swi2fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2fruProductPartNumber.setStatus('current')
swi2fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2fruProductSerialNumber.setStatus('current')
swi2fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2fruProductRevision.setStatus('current')
swi2fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2fruAll.setStatus('current')
swi2PortTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2005), )
if mibBuilder.loadTexts: swi2PortTargetTable.setStatus('current')
swi2PortTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2005, 1), ).setIndexNames((0, "HWSMM-MIB", "swi1PortNum"))
if mibBuilder.loadTexts: swi2PortTargetEntry.setStatus('current')
swi2PortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2005, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2PortNum.setStatus('current')
swi2OTMState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2005, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2OTMState.setStatus('current')
swi2OTMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2005, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2OTMInfo.setStatus('current')
swi2PhyState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2005, 1, 4), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("down", 0), ("up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2PhyState.setStatus('current')
swi2PhyReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2005, 1, 5), Integer32()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: swi2PhyReset.setStatus('current')
swi2PortToBladeSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2005, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2PortToBladeSlot.setStatus('current')
swi2PortName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2005, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2PortName.setStatus('current')
swi2OTMData = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2005, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2OTMData.setStatus('current')
swi2PortState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 2, 2005, 1, 9), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 255)).clone(namedValues=NamedValues(("linkUp", 1), ("phyLinkDown", 2), ("phyLinkUp", 3), ("linkFault", 4), ("invalidState", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi2PortState.setStatus('current')
swi3 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3))
swi3DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3DeviceID.setStatus('current')
swi3Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3Presence.setStatus('current')
swi3Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3Health.setStatus('current')
swi3HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3HealthEvents.setStatus('current')
swi3ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi3ClearSEL.setStatus('current')
swi3ConfigSupport = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3ConfigSupport.setStatus('current')
swi3ConfigInfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3ConfigInfo.setStatus('current')
swi3BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3BladeVersion.setStatus('current')
swi3FcPortConn = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 21), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi3FcPortConn.setStatus('current')
swi3ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3ProductName.setStatus('current')
swi3BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi3BundleVersion.setStatus('current')
swi3ClearAlarm = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi3ClearAlarm.setStatus('current')
swi3SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2001), )
if mibBuilder.loadTexts: swi3SensorTargetTable.setStatus('current')
swi3SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "swi3Target"))
if mibBuilder.loadTexts: swi3SensorTargetEntry.setStatus('current')
swi3Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: swi3Target.setStatus('current')
swi3Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3Current.setStatus('current')
swi3ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3ThresholdsAll.setStatus('current')
swi3UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi3UpperCritical.setStatus('current')
swi3UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi3UpperNonCritical.setStatus('current')
swi3UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi3UpperNonRecoverable.setStatus('current')
swi3LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi3LowerNonCritical.setStatus('current')
swi3LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi3LowerCritical.setStatus('current')
swi3LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi3LowerNonRecoverable.setStatus('current')
swi3SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3SensorHealth.setStatus('current')
swi3SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3SensorHealthEvents.setStatus('current')
swi3NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi3NegativeHysteresis.setStatus('current')
swi3PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi3PositiveHysteresis.setStatus('current')
swi3SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3SensorType.setStatus('current')
swi3SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3SensorFRUInfo.setStatus('current')
swi3FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2002), )
if mibBuilder.loadTexts: swi3FruTable.setStatus('current')
swi3FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "swi3fruNumber"))
if mibBuilder.loadTexts: swi3FruEntry.setStatus('current')
swi3fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: swi3fruNumber.setStatus('current')
swi3FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3FruHotSwapState.setStatus('current')
swi3FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3FruLedProperties.setStatus('current')
swi3FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi3FRUControl.setStatus('current')
swi3FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3FRULabel.setStatus('current')
swi3ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3ResetReason.setStatus('current')
swi3PowerState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2002, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi3PowerState.setStatus('current')
swi3SWIPControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2002, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi3SWIPControl.setStatus('current')
swi3Gateway = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2002, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi3Gateway.setStatus('current')
swi3Route = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2002, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi3Route.setStatus('current')
swi3VLanIfIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2002, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi3VLanIfIP.setStatus('current')
swi3FruVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2002, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3FruVersion.setStatus('current')
swi3SaveConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2002, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi3SaveConfig.setStatus('current')
swi3StackState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2002, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3StackState.setStatus('current')
swi3FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2003), )
if mibBuilder.loadTexts: swi3FruLedTable.setStatus('current')
swi3FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "swi3FruID"), (0, "HWSMM-MIB", "swi3FruLed"))
if mibBuilder.loadTexts: swi3FruLedEntry.setStatus('current')
swi3FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: swi3FruID.setStatus('current')
swi3FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: swi3FruLed.setStatus('current')
swi3FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3FruLedColorProps.setStatus('current')
swi3FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi3FruLedState.setStatus('current')
swi3FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2004), )
if mibBuilder.loadTexts: swi3FruDescriptionTable.setStatus('current')
swi3FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "swi3fruNum"))
if mibBuilder.loadTexts: swi3FruDescriptionEntry.setStatus('current')
swi3fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: swi3fruNum.setStatus('current')
swi3fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3fruBoardDescription.setStatus('current')
swi3fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3fruBoardManufacturer.setStatus('current')
swi3fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3fruBoardPartNumber.setStatus('current')
swi3fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3fruBoardSerialNumber.setStatus('current')
swi3fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3fruBoardManufactureDate.setStatus('current')
swi3fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3fruProductDescription.setStatus('current')
swi3fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3fruProductManufacturer.setStatus('current')
swi3fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3fruProductPartNumber.setStatus('current')
swi3fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3fruProductSerialNumber.setStatus('current')
swi3fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3fruProductRevision.setStatus('current')
swi3fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3fruAll.setStatus('current')
swi3PortTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2005), )
if mibBuilder.loadTexts: swi3PortTargetTable.setStatus('current')
swi3PortTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2005, 1), ).setIndexNames((0, "HWSMM-MIB", "swi1PortNum"))
if mibBuilder.loadTexts: swi3PortTargetEntry.setStatus('current')
swi3PortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2005, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3PortNum.setStatus('current')
swi3OTMState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2005, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3OTMState.setStatus('current')
swi3OTMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2005, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3OTMInfo.setStatus('current')
swi3PhyState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2005, 1, 4), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("down", 0), ("up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3PhyState.setStatus('current')
swi3PhyReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2005, 1, 5), Integer32()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: swi3PhyReset.setStatus('current')
swi3PortToBladeSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2005, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3PortToBladeSlot.setStatus('current')
swi3PortName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2005, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3PortName.setStatus('current')
swi3OTMData = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2005, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3OTMData.setStatus('current')
swi3PortState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 3, 2005, 1, 9), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 255)).clone(namedValues=NamedValues(("linkUp", 1), ("phyLinkDown", 2), ("phyLinkUp", 3), ("linkFault", 4), ("invalidState", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi3PortState.setStatus('current')
swi4 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4))
swi4DeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4DeviceID.setStatus('current')
swi4Presence = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 6), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1), ("indeterminate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4Presence.setStatus('current')
swi4Health = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("majorandminor", 3), ("critical", 4), ("criticalandminor", 5), ("criticalandmajor", 6), ("criticalandmajorandminor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4Health.setStatus('current')
swi4HealthEvents = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4HealthEvents.setStatus('current')
swi4ClearSEL = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1)).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi4ClearSEL.setStatus('current')
swi4ConfigSupport = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4ConfigSupport.setStatus('current')
swi4ConfigInfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4ConfigInfo.setStatus('current')
swi4BladeVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4BladeVersion.setStatus('current')
swi4FcPortConn = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 21), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi4FcPortConn.setStatus('current')
swi4ProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4ProductName.setStatus('current')
swi4BundleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi4BundleVersion.setStatus('current')
swi4ClearAlarm = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi4ClearAlarm.setStatus('current')
swi4SensorTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2001), )
if mibBuilder.loadTexts: swi4SensorTargetTable.setStatus('current')
swi4SensorTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "swi4Target"))
if mibBuilder.loadTexts: swi4SensorTargetEntry.setStatus('current')
swi4Target = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: swi4Target.setStatus('current')
swi4Current = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2001, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4Current.setStatus('current')
swi4ThresholdsAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4ThresholdsAll.setStatus('current')
swi4UpperCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2001, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi4UpperCritical.setStatus('current')
swi4UpperNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2001, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi4UpperNonCritical.setStatus('current')
swi4UpperNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2001, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi4UpperNonRecoverable.setStatus('current')
swi4LowerNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2001, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi4LowerNonCritical.setStatus('current')
swi4LowerCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2001, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi4LowerCritical.setStatus('current')
swi4LowerNonRecoverable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2001, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi4LowerNonRecoverable.setStatus('current')
swi4SensorHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2001, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("ok", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4SensorHealth.setStatus('current')
swi4SensorHealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4SensorHealthEvents.setStatus('current')
swi4NegativeHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2001, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi4NegativeHysteresis.setStatus('current')
swi4PositiveHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2001, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi4PositiveHysteresis.setStatus('current')
swi4SensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2001, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4SensorType.setStatus('current')
swi4SensorFRUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2001, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4SensorFRUInfo.setStatus('current')
swi4FruTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2002), )
if mibBuilder.loadTexts: swi4FruTable.setStatus('current')
swi4FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2002, 1), ).setIndexNames((0, "HWSMM-MIB", "swi4fruNumber"))
if mibBuilder.loadTexts: swi4FruEntry.setStatus('current')
swi4fruNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2002, 1, 1), Integer32())
if mibBuilder.loadTexts: swi4fruNumber.setStatus('current')
swi4FruHotSwapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2002, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4FruHotSwapState.setStatus('current')
swi4FruLedProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2002, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4FruLedProperties.setStatus('current')
swi4FRUControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2002, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi4FRUControl.setStatus('current')
swi4FRULabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2002, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4FRULabel.setStatus('current')
swi4ResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2002, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4ResetReason.setStatus('current')
swi4PowerState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2002, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi4PowerState.setStatus('current')
swi4SWIPControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2002, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi4SWIPControl.setStatus('current')
swi4Gateway = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2002, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi4Gateway.setStatus('current')
swi4Route = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2002, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi4Route.setStatus('current')
swi4VLanIfIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2002, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi4VLanIfIP.setStatus('current')
swi4FruVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2002, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4FruVersion.setStatus('current')
swi4SaveConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2002, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi4SaveConfig.setStatus('current')
swi4StackState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2002, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4StackState.setStatus('current')
swi4FruLedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2003), )
if mibBuilder.loadTexts: swi4FruLedTable.setStatus('current')
swi4FruLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2003, 1), ).setIndexNames((0, "HWSMM-MIB", "swi4FruID"), (0, "HWSMM-MIB", "swi4FruLed"))
if mibBuilder.loadTexts: swi4FruLedEntry.setStatus('current')
swi4FruID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2003, 1, 1), Integer32())
if mibBuilder.loadTexts: swi4FruID.setStatus('current')
swi4FruLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2003, 1, 2), DisplayString())
if mibBuilder.loadTexts: swi4FruLed.setStatus('current')
swi4FruLedColorProps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2003, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4FruLedColorProps.setStatus('current')
swi4FruLedState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2003, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swi4FruLedState.setStatus('current')
swi4FruDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2004), )
if mibBuilder.loadTexts: swi4FruDescriptionTable.setStatus('current')
swi4FruDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2004, 1), ).setIndexNames((0, "HWSMM-MIB", "swi4fruNum"))
if mibBuilder.loadTexts: swi4FruDescriptionEntry.setStatus('current')
swi4fruNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2004, 1, 1), Integer32())
if mibBuilder.loadTexts: swi4fruNum.setStatus('current')
swi4fruBoardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2004, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4fruBoardDescription.setStatus('current')
swi4fruBoardManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2004, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4fruBoardManufacturer.setStatus('current')
swi4fruBoardPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2004, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4fruBoardPartNumber.setStatus('current')
swi4fruBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2004, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4fruBoardSerialNumber.setStatus('current')
swi4fruBoardManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2004, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4fruBoardManufactureDate.setStatus('current')
swi4fruProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2004, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4fruProductDescription.setStatus('current')
swi4fruProductManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2004, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4fruProductManufacturer.setStatus('current')
swi4fruProductPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2004, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4fruProductPartNumber.setStatus('current')
swi4fruProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2004, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4fruProductSerialNumber.setStatus('current')
swi4fruProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2004, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4fruProductRevision.setStatus('current')
swi4fruAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2004, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4fruAll.setStatus('current')
swi4PortTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2005), )
if mibBuilder.loadTexts: swi4PortTargetTable.setStatus('current')
swi4PortTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2005, 1), ).setIndexNames((0, "HWSMM-MIB", "swi1PortNum"))
if mibBuilder.loadTexts: swi4PortTargetEntry.setStatus('current')
swi4PortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2005, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4PortNum.setStatus('current')
swi4OTMState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2005, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4OTMState.setStatus('current')
swi4OTMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2005, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4OTMInfo.setStatus('current')
swi4PhyState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2005, 1, 4), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1)).clone(namedValues=NamedValues(("down", 0), ("up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4PhyState.setStatus('current')
swi4PhyReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2005, 1, 5), Integer32()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: swi4PhyReset.setStatus('current')
swi4PortToBladeSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2005, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4PortToBladeSlot.setStatus('current')
swi4PortName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2005, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4PortName.setStatus('current')
swi4OTMData = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2005, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4OTMData.setStatus('current')
swi4PortState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 7, 4, 2005, 1, 9), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 255)).clone(namedValues=NamedValues(("linkUp", 1), ("phyLinkDown", 2), ("phyLinkUp", 3), ("linkFault", 4), ("invalidState", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swi4PortState.setStatus('current')
bladeshealthevents = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 55))
bladeshealtheventsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 55, 2001), )
if mibBuilder.loadTexts: bladeshealtheventsTable.setStatus('current')
bladeshealtheventsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 55, 2001, 1), ).setIndexNames((0, "HWSMM-MIB", "bladeNameIndex"), (0, "HWSMM-MIB", "bladeeventIndex"))
if mibBuilder.loadTexts: bladeshealtheventsEntry.setStatus('current')
bladeNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 55, 2001, 1, 1), DisplayString())
if mibBuilder.loadTexts: bladeNameIndex.setStatus('current')
bladeeventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 55, 2001, 1, 2), Integer32())
if mibBuilder.loadTexts: bladeeventIndex.setStatus('current')
bladehealthEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 55, 2001, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bladehealthEvents.setStatus('current')
hwTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500))
hwTrapVar = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 1))
hwTrapSeq = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTrapSeq.setStatus('current')
hwTrapSensorName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTrapSensorName.setStatus('current')
hwTrapEvent = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTrapEvent.setStatus('current')
hwTrapSeverity = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTrapSeverity.setStatus('current')
hwTrapEventCode = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTrapEventCode.setStatus('current')
hwTrapEventData2 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTrapEventData2.setStatus('current')
hwTrapEventData3 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTrapEventData3.setStatus('current')
hwTrapBlade = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTrapBlade.setStatus('current')
hwTrapChassisSerial = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTrapChassisSerial.setStatus('current')
hwTrapEventTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTrapEventTime.setStatus('current')
hwTRAPObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10))
hwCPU = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 7))
hwCPUCATError = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 7, 1)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCPUCATError.setStatus('current')
hwCPUCATErrorDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 7, 2)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCPUCATErrorDeassert.setStatus('current')
hwCPUThermalTrip = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 7, 17)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCPUThermalTrip.setStatus('current')
hwCPUThermalTripDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 7, 18)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCPUThermalTripDeassert.setStatus('current')
hwCPUSelfTestFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 7, 33)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCPUSelfTestFail.setStatus('current')
hwCPUSelfTestFailDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 7, 34)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCPUSelfTestFailDeassert.setStatus('current')
hwCPUCfgError = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 7, 81)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCPUCfgError.setStatus('current')
hwCPUCfgErrorDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 7, 82)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCPUCfgErrorDeassert.setStatus('current')
hwCPUPresence = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 7, 113)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCPUPresence.setStatus('current')
hwCPUPresenceDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 7, 114)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCPUPresenceDeassert.setStatus('current')
hwCPUDisable = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 7, 129)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCPUDisable.setStatus('current')
hwCPUDisableDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 7, 130)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCPUDisableDeassert.setStatus('current')
hwCPUMCE = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 7, 177)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCPUMCE.setStatus('current')
hwCPUMCEDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 7, 178)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCPUMCEDeassert.setStatus('current')
hwCPUCorrectableMachineCheckErr = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 7, 193)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCPUCorrectableMachineCheckErr.setStatus('current')
hwCPUCorrectableMachineCheckErrDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 7, 194)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCPUCorrectableMachineCheckErrDeassert.setStatus('current')
hwPowerSupply = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 8))
hwPowerSupplyFault = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 8, 17)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwPowerSupplyFault.setStatus('current')
hwPowerSupplyFaultDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 8, 18)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwPowerSupplyFaultDeassert.setStatus('current')
hwMemory = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 12))
hwCorrectableECC = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 12, 1)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCorrectableECC.setStatus('current')
hwCorrectableECCDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 12, 2)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCorrectableECCDeassert.setStatus('current')
hwUncorrectableECC = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 12, 17)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwUncorrectableECC.setStatus('current')
hwUncorrectableECCDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 12, 18)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwUncorrectableECCDeassert.setStatus('current')
hwMemoryECCLimitation = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 12, 81)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwMemoryECCLimitation.setStatus('current')
hwMemoryECCLimitationDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 12, 82)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwMemoryECCLimitationDeassert.setStatus('current')
hwMemoryPresence = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 12, 97)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwMemoryPresence.setStatus('current')
hwMemoryPresenceDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 12, 98)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwMemoryPresenceDeassert.setStatus('current')
hwMemoryCfgError = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 12, 113)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwMemoryCfgError.setStatus('current')
hwMemoryCfgErrorDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 12, 114)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwMemoryCfgErrorDeassert.setStatus('current')
hwMemorySpare = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 12, 129)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwMemorySpare.setStatus('current')
hwMemorySpareDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 12, 130)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwMemorySpareDeassert.setStatus('current')
hwMemoryOvertemp = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 12, 161)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwMemoryOvertemp.setStatus('current')
hwMemoryOvertempDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 12, 162)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwMemoryOvertempDeassert.setStatus('current')
hwHardDisk = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 13))
hwHardDiskPresence = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 13, 1)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwHardDiskPresence.setStatus('current')
hwHardDiskPresenceDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 13, 2)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwHardDiskPresenceDeassert.setStatus('current')
hwHardDiskFault = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 13, 17)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwHardDiskFault.setStatus('current')
hwHardDiskFaultDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 13, 18)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwHardDiskFaultDeassert.setStatus('current')
hwRAIDArrayFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 13, 97)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwRAIDArrayFail.setStatus('current')
hwRAIDArrayFailDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 13, 98)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwRAIDArrayFailDeassert.setStatus('current')
hwSysFwProgress = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 15))
hwSystemFirmwareHang = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 15, 17)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwSystemFirmwareHang.setStatus('current')
hwSystemFirmwareHangDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 15, 18)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwSystemFirmwareHangDeassert.setStatus('current')
hwVideoControllerFault = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 15, 2305)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwVideoControllerFault.setStatus('current')
hwVideoControllerFaultDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 15, 2306)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwVideoControllerFaultDeassert.setStatus('current')
hwCPUVoltageMismatch = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 15, 3073)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCPUVoltageMismatch.setStatus('current')
hwCPUVoltageMismatchDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 15, 3074)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCPUVoltageMismatchDeassert.setStatus('current')
hwLogspaStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 16))
hwLogspaStatusFull = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 16, 65)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwLogspaStatusFull.setStatus('current')
hwLogspaStatusFullDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 16, 66)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwLogspaStatusFullDeassert.setStatus('current')
hwSysEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 18))
hwSysEventInstance = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 18, 65)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwSysEventInstance.setStatus('current')
hwPowerButton = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 20))
hwPowerButtonPressed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 20, 1)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwPowerButtonPressed.setStatus('current')
hwCableInterconnectStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 27))
hwCableInterconnectConfigErr = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 27, 17)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCableInterconnectConfigErr.setStatus('current')
hwCableInterconnectConfigErrDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 27, 18)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCableInterconnectConfigErrDeassert.setStatus('current')
hwSysRestart = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 29))
hwSysRestartUnknown = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 29, 113)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwSysRestartUnknown.setStatus('current')
hwSysRestartChassisCtrl = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 29, 369)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwSysRestartChassisCtrl.setStatus('current')
hwSysRestartPowerButton = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 29, 881)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwSysRestartPowerButton.setStatus('current')
hwSysRestartWatchdogCtrl = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 29, 1137)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwSysRestartWatchdogCtrl.setStatus('current')
hwSysRestartAlwaysRestore = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 29, 1649)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwSysRestartAlwaysRestore.setStatus('current')
hwSysRestartRestorePrevState = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 29, 1905)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwSysRestartRestorePrevState.setStatus('current')
hwBootError = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 30))
hwNoBootableMedia = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 30, 1)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwNoBootableMedia.setStatus('current')
hwNoBootableMediaDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 30, 2)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwNoBootableMediaDeassert.setStatus('current')
hwNoBootableDisk = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 30, 17)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwNoBootableDisk.setStatus('current')
hwNoBootableDiskDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 30, 18)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwNoBootableDiskDeassert.setStatus('current')
hwPXENotFound = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 30, 33)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwPXENotFound.setStatus('current')
hwPXENotFoundDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 30, 34)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwPXENotFoundDeassert.setStatus('current')
hwInvalidBootSector = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 30, 49)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwInvalidBootSector.setStatus('current')
hwInvalidBootSectorDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 30, 50)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwInvalidBootSectorDeassert.setStatus('current')
hwDeviceFault = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 33))
hwHardwareDeviceFault = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 33, 1)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwHardwareDeviceFault.setStatus('current')
hwHardwareDeviceFaultDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 33, 2)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwHardwareDeviceFaultDeassert.setStatus('current')
hwPhyPortFault = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 33, 17)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwPhyPortFault.setStatus('current')
hwPhyPortFaultDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 33, 18)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwPhyPortFaultDeassert.setStatus('current')
hwPCIeFault = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 33, 2305)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwPCIeFault.setStatus('current')
hwPCIeFaultDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 33, 2306)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwPCIeFaultDeassert.setStatus('current')
hwHardwareAddrFault = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 33, 57857)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwHardwareAddrFault.setStatus('current')
hwHardwareAddrFaultDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 33, 57858)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwHardwareAddrFaultDeassert.setStatus('current')
hwACPIStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 34))
hwACPIStatusS0 = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 34, 1)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwACPIStatusS0.setStatus('current')
hwACPIStatusS4S5 = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 34, 97)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwACPIStatusS4S5.setStatus('current')
hwWatchDog = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 35))
hwWatchDogOverflow = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 35, 1)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwWatchDogOverflow.setStatus('current')
hwWatchDogOverflowDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 35, 2)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwWatchDogOverflowDeassert.setStatus('current')
hwWatchDogReset = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 35, 17)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwWatchDogReset.setStatus('current')
hwWatchDogResetDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 35, 18)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwWatchDogResetDeassert.setStatus('current')
hwWatchDogPowerDown = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 35, 33)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwWatchDogPowerDown.setStatus('current')
hwWatchDogPowerDownDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 35, 34)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwWatchDogPowerDownDeassert.setStatus('current')
hwWatchDogPowerCycle = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 35, 49)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwWatchDogPowerCycle.setStatus('current')
hwWatchDogPowerCycleDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 35, 50)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwWatchDogPowerCycleDeassert.setStatus('current')
hwMngmntHealth = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 40))
hwSensorAccessibleFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 40, 1)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwSensorAccessibleFail.setStatus('current')
hwSensorAccessibleFailDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 40, 2)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwSensorAccessibleFailDeassert.setStatus('current')
hwControllerAccessibleFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 40, 17)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwControllerAccessibleFail.setStatus('current')
hwControllerAccessibleFailDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 40, 18)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwControllerAccessibleFailDeassert.setStatus('current')
hwManagmentControllerUnaccessible = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 40, 49)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwManagmentControllerUnaccessible.setStatus('current')
hwManagmentControllerUnaccessibleDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 40, 50)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwManagmentControllerUnaccessibleDeassert.setStatus('current')
hwFruFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 40, 81)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwFruFail.setStatus('current')
hwFruFailDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 40, 82)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwFruFailDeassert.setStatus('current')
hwBattery = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 41))
hwRTCBatterylow = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 41, 1)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwRTCBatterylow.setStatus('current')
hwRTCBatterylowDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 41, 2)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwRTCBatterylowDeassert.setStatus('current')
hwVersionChangeStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 43))
hwVersionChange = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 43, 17)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwVersionChange.setStatus('current')
hwHardwareIncompatibility = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 43, 33)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwHardwareIncompatibility.setStatus('current')
hwHardwareIncompatibilityDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 43, 34)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwHardwareIncompatibilityDeassert.setStatus('current')
hwFirmwareIncompatibility = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 43, 49)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwFirmwareIncompatibility.setStatus('current')
hwFirmwareIncompatibilityDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 43, 50)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwFirmwareIncompatibilityDeassert.setStatus('current')
hwFruStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 44))
hwFruInactive = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 44, 17)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwFruInactive.setStatus('current')
hwFruInactiveDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 44, 18)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwFruInactiveDeassert.setStatus('current')
hwI2cStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 211))
hwI2cNoFault = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 211, 1)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwI2cNoFault.setStatus('current')
hwI2cClockDriveHiUnable = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 211, 17)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwI2cClockDriveHiUnable.setStatus('current')
hwI2cClockDriveHiUnableDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 211, 18)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwI2cClockDriveHiUnableDeassert.setStatus('current')
hwI2cDataDriveHiUnable = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 211, 33)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwI2cDataDriveHiUnable.setStatus('current')
hwI2cDataDriveHiUnableDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 211, 34)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwI2cDataDriveHiUnableDeassert.setStatus('current')
hwI2cClockDriveLoUnable = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 211, 49)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwI2cClockDriveLoUnable.setStatus('current')
hwI2cClockDriveLoUnableDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 211, 50)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwI2cClockDriveLoUnableDeassert.setStatus('current')
hwI2cDataDriveLoUnable = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 211, 65)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwI2cDataDriveLoUnable.setStatus('current')
hwI2cDataDriveLoUnableDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 211, 66)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwI2cDataDriveLoUnableDeassert.setStatus('current')
hwI2cAccessFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 211, 81)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwI2cAccessFail.setStatus('current')
hwI2cAccessFailDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 211, 82)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwI2cAccessFailDeassert.setStatus('current')
hwHotSwap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 240))
hwHotSwaptoM0 = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 240, 1)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwHotSwaptoM0.setStatus('current')
hwHotSwaptoM1 = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 240, 17)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwHotSwaptoM1.setStatus('current')
hwHotSwaptoM2 = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 240, 33)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwHotSwaptoM2.setStatus('current')
hwHotSwaptoM3 = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 240, 49)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwHotSwaptoM3.setStatus('current')
hwHotSwaptoM4 = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 240, 65)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwHotSwaptoM4.setStatus('current')
hwHotSwaptoM5 = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 240, 81)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwHotSwaptoM5.setStatus('current')
hwHotSwaptoM6 = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 240, 97)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwHotSwaptoM6.setStatus('current')
hwHotSwaptoM7 = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 240, 113)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwHotSwaptoM7.setStatus('current')
hwHotSwaptoM7Deassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 240, 114)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwHotSwaptoM7Deassert.setStatus('current')
hwOvertemperature = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 257))
hwTempLoMinor = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 257, 1)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwTempLoMinor.setStatus('current')
hwTempLoMinorDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 257, 2)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwTempLoMinorDeassert.setStatus('current')
hwTempLoMajor = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 257, 33)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwTempLoMajor.setStatus('current')
hwTempLoMajorDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 257, 34)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwTempLoMajorDeassert.setStatus('current')
hwTempHiMinor = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 257, 113)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwTempHiMinor.setStatus('current')
hwTempHiMinorDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 257, 114)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwTempHiMinorDeassert.setStatus('current')
hwTempHiMajor = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 257, 145)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwTempHiMajor.setStatus('current')
hwTempHiMajorDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 257, 146)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwTempHiMajorDeassert.setStatus('current')
hwTempHiCritical = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 257, 177)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwTempHiCritical.setStatus('current')
hwTempHiCriticalDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 257, 178)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwTempHiCriticalDeassert.setStatus('current')
hwOverVoltage = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 258))
hwVoltLoMinor = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 258, 1)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwVoltLoMinor.setStatus('current')
hwVoltLoMinorDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 258, 2)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwVoltLoMinorDeassert.setStatus('current')
hwVoltLoMajor = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 258, 33)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwVoltLoMajor.setStatus('current')
hwVoltLoMajorDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 258, 34)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwVoltLoMajorDeassert.setStatus('current')
hwVoltHiMinor = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 258, 113)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwVoltHiMinor.setStatus('current')
hwVoltHiMinorDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 258, 114)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwVoltHiMinorDeassert.setStatus('current')
hwVoltHiMajor = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 258, 145)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwVoltHiMajor.setStatus('current')
hwVoltHiMajorDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 258, 146)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwVoltHiMajorDeassert.setStatus('current')
hwVoltHiCritical = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 258, 177)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwVoltHiCritical.setStatus('current')
hwVoltHiCriticalDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 258, 178)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwVoltHiCriticalDeassert.setStatus('current')
hwMemoryRate = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 268))
hwMemoryRateHiMinor = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 268, 113)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwMemoryRateHiMinor.setStatus('current')
hwMemoryRateHiMinorDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 268, 114)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwMemoryRateHiMinorDeassert.setStatus('current')
hwFlashUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 294))
hwFlashUsageHiMajor = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 294, 145)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwFlashUsageHiMajor.setStatus('current')
hwFlashUsageHiMajorDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 294, 146)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwFlashUsageHiMajorDeassert.setStatus('current')
hwFailOver = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 530))
hwFailOverIdle = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 530, 1)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwFailOverIdle.setStatus('current')
hwFailOverIdleDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 530, 2)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwFailOverIdleDeassert.setStatus('current')
hwCPURateStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 775))
hwCPURate = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 775, 17)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCPURate.setStatus('current')
hwCPURateDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 775, 18)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCPURateDeassert.setStatus('current')
hwUIDButton = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 788))
hwUIDButtonPressed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 788, 17)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwUIDButtonPressed.setStatus('current')
hwPowerCapping = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 1042))
hwPowerCapFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 1042, 17)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwPowerCapFail.setStatus('current')
hwPowerCapFailDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 1042, 18)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwPowerCapFailDeassert.setStatus('current')
hwCardFault = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 1047))
hwCardStatusFault = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 1047, 17)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCardStatusFault.setStatus('current')
hwCardStatusFaultDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 1047, 18)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCardStatusFaultDeassert.setStatus('current')
hwCertExpireStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 1320))
hwLowPowerStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 1800))
hwLowPower = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 1800, 33)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwLowPower.setStatus('current')
hwLowPowerDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 1800, 34)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwLowPowerDeassert.setStatus('current')
hwCertStatusExpiring = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 1320, 1)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCertStatusExpiring.setStatus('current')
hwCertStatusExpiringDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 1320, 2)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCertStatusExpiringDeassert.setStatus('current')
hwCertStatusExpired = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 1320, 17)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCertStatusExpired.setStatus('current')
hwCertStatusExpiredDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 1320, 18)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCertStatusExpiredDeassert.setStatus('current')
hwFailoverngStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 1805))
hwFailoverng = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 1805, 33)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwFailoverng.setStatus('current')
hwFailoverngDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 1805, 34)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwFailoverngDeassert.setStatus('current')
hwLswFailStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 1825))
hwLswFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 1825, 49)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwLswFail.setStatus('current')
hwLswFailDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 1825, 50)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwLswFailDeassert.setStatus('current')
hwPortManagementStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 1831))
hwPortManagementFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 1831, 33)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwPortManagementFail.setStatus('current')
hwPortManagementFailDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 1831, 34)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwPortManagementFailDeassert.setStatus('current')
hwFanFault = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 1832))
hwFanStatusFault = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 1832, 17)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwFanStatusFault.setStatus('current')
hwFanStatusFaultDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 1832, 18)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwFanStatusFaultDeassert.setStatus('current')
hwPSPresenceStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 2056))
hwPSRemoved = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 2056, 1)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwPSRemoved.setStatus('current')
hwPSRemovedDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 2056, 2)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwPSRemovedDeassert.setStatus('current')
hwPSPresence = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 2056, 17)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwPSPresence.setStatus('current')
hwPSPresenceDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 2056, 18)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwPSPresenceDeassert.setStatus('current')
hwFanPresenceStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 2058))
hwFanRemoved = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 2058, 1)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwFanRemoved.setStatus('current')
hwFanRemovedDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 2058, 2)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwFanRemovedDeassert.setStatus('current')
hwFanPresence = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 2058, 17)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwFanPresence.setStatus('current')
hwFanPresenceDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 2058, 18)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwFanPresenceDeassert.setStatus('current')
hwCardPresenceStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 2071))
hwCardPresence = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 2071, 17)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCardPresence.setStatus('current')
hwCardPresenceDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 2071, 18)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwCardPresenceDeassert.setStatus('current')
hwRemovedAlarmStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 2081))
hwRemovedAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 2081, 1)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwRemovedAlarm.setStatus('current')
hwRemovedAlarmDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 2081, 2)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwRemovedAlarmDeassert.setStatus('current')
hwProcessorEnableStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 2311))
hwProcessorDisable = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 2311, 1)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwProcessorDisable.setStatus('current')
hwProcessorDisableDeassert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 82, 1, 82, 500, 10, 2311, 2)).setObjects(("HWSMM-MIB", "hwTrapSeq"), ("HWSMM-MIB", "hwTrapSensorName"), ("HWSMM-MIB", "hwTrapEvent"), ("HWSMM-MIB", "hwTrapEventCode"), ("HWSMM-MIB", "hwTrapEventData2"), ("HWSMM-MIB", "hwTrapEventData3"), ("HWSMM-MIB", "hwTrapBlade"), ("HWSMM-MIB", "hwTrapChassisSerial"), ("HWSMM-MIB", "hwTrapEventTime"))
if mibBuilder.loadTexts: hwProcessorDisableDeassert.setStatus('current')
mibBuilder.exportSymbols("HWSMM-MIB", blade19FruEntry=blade19FruEntry, b30fruProductManufacturer=b30fruProductManufacturer, b8BmcUserpropertychg=b8BmcUserpropertychg, b6fruProductSerialNumber=b6fruProductSerialNumber, blade27CPUEntry=blade27CPUEntry, b29MEMMark=b29MEMMark, b28DiskMark=b28DiskMark, b19MezzInfo=b19MezzInfo, b14CPUInfo=b14CPUInfo, blade20SecretKvmVmmTable=blade20SecretKvmVmmTable, b14ClearBiosConfig=b14ClearBiosConfig, swi3SensorFRUInfo=swi3SensorFRUInfo, b8Health=b8Health, b31BundleVersion=b31BundleVersion, b23MezzMark=b23MezzMark, swi2SWIPControl=swi2SWIPControl, blade28MemoryEntry=blade28MemoryEntry, b21Powerreference=b21Powerreference, b19fruProductManufacturer=b19fruProductManufacturer, b1FruLedState=b1FruLedState, swi4FruHotSwapState=swi4FruHotSwapState, b29fruNumber=b29fruNumber, b13DiskLocation=b13DiskLocation, swi2FcPortConn=swi2FcPortConn, b12Powerreference=b12Powerreference, b2UpperNonCritical=b2UpperNonCritical, b14fruAll=b14fruAll, b5FruLed=b5FruLed, b11SlotBitmap=b11SlotBitmap, b26ProductName=b26ProductName, b7MezzMark=b7MezzMark, b10fruProductManufacturer=b10fruProductManufacturer, b26CPUMark=b26CPUMark, blade4CPUTable=blade4CPUTable, b6UpperCritical=b6UpperCritical, smmDomainName=smmDomainName, b16BmcGateway=b16BmcGateway, hwUSP=hwUSP, swi3FruID=swi3FruID, b16BiosBootOption=b16BiosBootOption, b3NegativeHysteresis=b3NegativeHysteresis, b31fruProductPartNumber=b31fruProductPartNumber, smmTemperatureDescriptionTable=smmTemperatureDescriptionTable, b8UpperNonRecoverable=b8UpperNonRecoverable, b27BladeVersion=b27BladeVersion, blade22CPUTable=blade22CPUTable, b6LowerCritical=b6LowerCritical, b13fruProductSerialNumber=b13fruProductSerialNumber, swi4FruLedProperties=swi4FruLedProperties, b8FruLedProperties=b8FruLedProperties, smmfruBoardManufacturer=smmfruBoardManufacturer, blade28FruTable=blade28FruTable, b30MEMLocation=b30MEMLocation, b31MezzIndex=b31MezzIndex, blade23DiskEntry=blade23DiskEntry, b21BiosBootOption=b21BiosBootOption, blade22FruTable=blade22FruTable, b18SensorType=b18SensorType, b32SensorFRUInfo=b32SensorFRUInfo, b18MezzLocation=b18MezzLocation, b28BmcUserAdd=b28BmcUserAdd, b11CPUMark=b11CPUMark, b22Target=b22Target, b3FruID=b3FruID, b25PowerCapping=b25PowerCapping, b15fruNumber=b15fruNumber, b2fruBoardManufacturer=b2fruBoardManufacturer, blade11MezzEntry=blade11MezzEntry, b12SecretKvmVmmIndex=b12SecretKvmVmmIndex, blade23MemoryEntry=blade23MemoryEntry, b4fruBoardManufacturer=b4fruBoardManufacturer, swi2DeviceID=swi2DeviceID, b22FruLedColorProps=b22FruLedColorProps, b11MezzHealth=b11MezzHealth, b9CPUHealth=b9CPUHealth, b6SensorType=b6SensorType, b23Health=b23Health, b23CPUIndex=b23CPUIndex, b15fruAll=b15fruAll, b14SecretKvmVmmIndex=b14SecretKvmVmmIndex, b24SlotBitmap=b24SlotBitmap, b4WDTBootEnable=b4WDTBootEnable, b3fruProductManufacturer=b3fruProductManufacturer, b19Safepwofftime=b19Safepwofftime, b27fruProductSerialNumber=b27fruProductSerialNumber, b1MezzIndex=b1MezzIndex, swi1ResetReason=swi1ResetReason, b13FRUControl=b13FRUControl, b32MEMIndex=b32MEMIndex, b3HealthEvents=b3HealthEvents, b23DiskMark=b23DiskMark, b7fruProductPartNumber=b7fruProductPartNumber, b23fruProductSerialNumber=b23fruProductSerialNumber, b17MEMIndex=b17MEMIndex, blade32DiskEntry=blade32DiskEntry, b13DiskMark=b13DiskMark, blade21MemoryEntry=blade21MemoryEntry, blade16CPUEntry=blade16CPUEntry, b11DiskPresent=b11DiskPresent, b14ResetReason=b14ResetReason, b9MezzMark=b9MezzMark, b27fruProductPartNumber=b27fruProductPartNumber, hwVideoControllerFault=hwVideoControllerFault, swi4=swi4, b21CPUHealth=b21CPUHealth, b20FruLedColorProps=b20FruLedColorProps, b19fruBoardPartNumber=b19fruBoardPartNumber, b2SecretKvmVmmIndex=b2SecretKvmVmmIndex, b1FruLed=b1FruLed, b21BiosCfg=b21BiosCfg, b11BmcUserpropertychg=b11BmcUserpropertychg, b29DiskHealth=b29DiskHealth, b31LowerCritical=b31LowerCritical, b10CPUInfo=b10CPUInfo, blade3SecretKvmVmmEntry=blade3SecretKvmVmmEntry, swi2PortState=swi2PortState, b22RealTimePower=b22RealTimePower, swi1ProductName=swi1ProductName, b20ResetReason=b20ResetReason, b11fruAll=b11fruAll, b31fruAll=b31fruAll, b4ResetReason=b4ResetReason, b3LowerCritical=b3LowerCritical, b3ThresholdsAll=b3ThresholdsAll, swi2FRULabel=swi2FRULabel, b30ExDiskBoardPresence=b30ExDiskBoardPresence, b18FruLedColorProps=b18FruLedColorProps, b30FruLedProperties=b30FruLedProperties, b32BmcUserpropertychg=b32BmcUserpropertychg, b3fruBoardDescription=b3fruBoardDescription, smmAllIpAddr=smmAllIpAddr, b15FruID=b15FruID, b5SensorType=b5SensorType, b26fruProductRevision=b26fruProductRevision, b12NegativeHysteresis=b12NegativeHysteresis, b20BmcIP=b20BmcIP, b3FruLedProperties=b3FruLedProperties, b24FruLedProperties=b24FruLedProperties, blade17FruLedTable=blade17FruLedTable, b22PowerCapping=b22PowerCapping, swi1SensorTargetTable=swi1SensorTargetTable, b16UpperNonCritical=b16UpperNonCritical, b12UpperCritical=b12UpperCritical, b21fruBoardDescription=b21fruBoardDescription, b27MezzIndex=b27MezzIndex, b19MEMLocation=b19MEMLocation, b16ThresholdsAll=b16ThresholdsAll, b31SensorType=b31SensorType, hwCardPresence=hwCardPresence, b2CPUMark=b2CPUMark, b18DiskPresent=b18DiskPresent, blade17FruDescriptionEntry=blade17FruDescriptionEntry, b26FruLed=b26FruLed, b26CPUPresent=b26CPUPresent, b32BmcUserPasswd=b32BmcUserPasswd, b32DiskHealth=b32DiskHealth, b25UpperNonCritical=b25UpperNonCritical, blade13MezzTable=blade13MezzTable, blade19FruDescriptionEntry=blade19FruDescriptionEntry, b21fruProductRevision=b21fruProductRevision, b25Safepwofftime=b25Safepwofftime, smmUserSnmppasswd=smmUserSnmppasswd, b22MEMPresent=b22MEMPresent, b21CPUMark=b21CPUMark, b29WDTBootEnable=b29WDTBootEnable, b31SystemProperties=b31SystemProperties, b22fruProductManufacturer=b22fruProductManufacturer, blade25FruDescriptionTable=blade25FruDescriptionTable, b18LowerNonCritical=b18LowerNonCritical, b29CPUMark=b29CPUMark, b26UpperCritical=b26UpperCritical, b9Systeminfo=b9Systeminfo, b19fruBoardManufactureDate=b19fruBoardManufactureDate, hwTrapEventCode=hwTrapEventCode, b10systemGuid=b10systemGuid, b17FRUControl=b17FRUControl, b11MezzPresent=b11MezzPresent, b22LowerNonCritical=b22LowerNonCritical, blade16SensorTargetEntry=blade16SensorTargetEntry, b28MezzPresent=b28MezzPresent, smmBundleVersion=smmBundleVersion, b14fruBoardSerialNumber=b14fruBoardSerialNumber, b11BmcUserDel=b11BmcUserDel, b25Health=b25Health, b16SecretKvmVmmIndex=b16SecretKvmVmmIndex, b20Systeminfo=b20Systeminfo, b20MEMHealth=b20MEMHealth, b8MEMPresent=b8MEMPresent, b4MezzInfo=b4MezzInfo, fanIndex=fanIndex, blade11FruLedEntry=blade11FruLedEntry, b3SecretKvmState=b3SecretKvmState, smmDomainUsers=smmDomainUsers, b10SensorHealthEvents=b10SensorHealthEvents, hwCorrectableECC=hwCorrectableECC, hwMemoryPresenceDeassert=hwMemoryPresenceDeassert, b30BmcUserpropertychg=b30BmcUserpropertychg, b25MMSecretVmmKey=b25MMSecretVmmKey, b13ClearBiosConfig=b13ClearBiosConfig, hwSysFwProgress=hwSysFwProgress, b3DiskHealth=b3DiskHealth, b13ProductName=b13ProductName, b6MezzMac=b6MezzMac, b9ClearSEL=b9ClearSEL, blade27CPUTable=blade27CPUTable, b16ClearBiosConfig=b16ClearBiosConfig, blade2MezzTable=blade2MezzTable, b9SystemProperties=b9SystemProperties, b15MMSecretVmmKey=b15MMSecretVmmKey, b24MezzMac=b24MezzMac, b16fruProductRevision=b16fruProductRevision, blade21DiskEntry=blade21DiskEntry, b22CPUInfo=b22CPUInfo, hwFruInactiveDeassert=hwFruInactiveDeassert, b6BundleVersion=b6BundleVersion, swi3FruTable=swi3FruTable, b17MezzIndex=b17MezzIndex, b3fruNumber=b3fruNumber, b11NegativeHysteresis=b11NegativeHysteresis, b32fruNumber=b32fruNumber, b28CPUHealth=b28CPUHealth, blade4FruEntry=blade4FruEntry, blade23DiskTable=blade23DiskTable, b10DiskHealth=b10DiskHealth, b14SensorType=b14SensorType, b14BmcUserpropertychg=b14BmcUserpropertychg, smmPICMGProperties=smmPICMGProperties, b23MezzPresent=b23MezzPresent, b15DiskPresent=b15DiskPresent, hwVoltHiMinorDeassert=hwVoltHiMinorDeassert, b10fruNumber=b10fruNumber, swi2SensorHealth=swi2SensorHealth, b16Target=b16Target, b1MEMInfo=b1MEMInfo, b28BundleVersion=b28BundleVersion, hwPortManagementFail=hwPortManagementFail, b13fruNumber=b13fruNumber, b6fruProductPartNumber=b6fruProductPartNumber, b30DeviceID=b30DeviceID, blade17=blade17, blade2FruLedEntry=blade2FruLedEntry, b32CPUMark=b32CPUMark, blade9MemoryTable=blade9MemoryTable, b20MezzHealth=b20MezzHealth, b32fruProductPartNumber=b32fruProductPartNumber, b8CPUMark=b8CPUMark, b12fruBoardPartNumber=b12fruBoardPartNumber, b24PositiveHysteresis=b24PositiveHysteresis, b25DiskIndex=b25DiskIndex, swi2LowerCritical=swi2LowerCritical, b19MezzIndex=b19MezzIndex, shelfPowerCapping=shelfPowerCapping, blade3FruEntry=blade3FruEntry, hwCPURateDeassert=hwCPURateDeassert)
mibBuilder.exportSymbols("HWSMM-MIB", blade13DiskTable=blade13DiskTable, hwMemory=hwMemory, b24LowerCritical=b24LowerCritical, swi2OTMInfo=swi2OTMInfo, b25MEMLocation=b25MEMLocation, b9UpperNonRecoverable=b9UpperNonRecoverable, blade26FruLedTable=blade26FruLedTable, b19DiskHealth=b19DiskHealth, b21BladeVersion=b21BladeVersion, b23MEMIndex=b23MEMIndex, b20CPULocation=b20CPULocation, swi2FruLedTable=swi2FruLedTable, b19CPUHealth=b19CPUHealth, swi2fruBoardManufacturer=swi2fruBoardManufacturer, b18NegativeHysteresis=b18NegativeHysteresis, b29BmcIP=b29BmcIP, b17fruProductSerialNumber=b17fruProductSerialNumber, b2MEMInfo=b2MEMInfo, b32fruProductRevision=b32fruProductRevision, b17BmcUserpropertychg=b17BmcUserpropertychg, swi4PortTargetEntry=swi4PortTargetEntry, b17SensorHealthEvents=b17SensorHealthEvents, b28UpperCritical=b28UpperCritical, b18MezzMark=b18MezzMark, b1MezzLocation=b1MezzLocation, smmUserpasswdcomplex=smmUserpasswdcomplex, b27SensorType=b27SensorType, smmfruNumber=smmfruNumber, b12BmcUserPasswd=b12BmcUserPasswd, b29BmcUserPasswd=b29BmcUserPasswd, b31MACAddress=b31MACAddress, b25fruBoardSerialNumber=b25fruBoardSerialNumber, b11SystemProperties=b11SystemProperties, b19CPULocation=b19CPULocation, hwUncorrectableECC=hwUncorrectableECC, b3SecretVmmState=b3SecretVmmState, swi3UpperNonRecoverable=swi3UpperNonRecoverable, smmOtherReboot=smmOtherReboot, blade24CPUEntry=blade24CPUEntry, b12HealthEvents=b12HealthEvents, smmRemoteSyslogAuth=smmRemoteSyslogAuth, b27CPUInfo=b27CPUInfo, b17BmcUserPasswd=b17BmcUserPasswd, b9BmcUserPasswd=b9BmcUserPasswd, b2CPUIndex=b2CPUIndex, b20BmcUserPasswd=b20BmcUserPasswd, b13MMSecretVmmKey=b13MMSecretVmmKey, hwTrapVar=hwTrapVar, smmfruNum=smmfruNum, b11fruBoardManufactureDate=b11fruBoardManufactureDate, b32Target=b32Target, b11systemGuid=b11systemGuid, b22fruProductDescription=b22fruProductDescription, b9fruBoardManufacturer=b9fruBoardManufacturer, b14ClearSEL=b14ClearSEL, blade31MezzTable=blade31MezzTable, b28Systeminfo=b28Systeminfo, b20CPUPresent=b20CPUPresent, blade31DiskTable=blade31DiskTable, b2SensorFRUInfo=b2SensorFRUInfo, b26MezzLocation=b26MezzLocation, hwRemovedAlarm=hwRemovedAlarm, b29MezzLocation=b29MezzLocation, b27SecretKvmVmmIndex=b27SecretKvmVmmIndex, b10SensorHealth=b10SensorHealth, blade29FruEntry=blade29FruEntry, b30fruBoardManufactureDate=b30fruBoardManufactureDate, swi4UpperCritical=swi4UpperCritical, b1MEMPresent=b1MEMPresent, b3fruProductSerialNumber=b3fruProductSerialNumber, b23BmcUserDel=b23BmcUserDel, b11ResetReason=b11ResetReason, b22Health=b22Health, b31fruBoardPartNumber=b31fruBoardPartNumber, b28DiskHealth=b28DiskHealth, swi3PortTargetEntry=swi3PortTargetEntry, b21BmcGateway=b21BmcGateway, blade15MemoryTable=blade15MemoryTable, b17systemGuid=b17systemGuid, b6fruBoardManufactureDate=b6fruBoardManufactureDate, b24DiskHealth=b24DiskHealth, b4MEMLocation=b4MEMLocation, swi1PortName=swi1PortName, b12fruProductRevision=b12fruProductRevision, blade32FruLedEntry=blade32FruLedEntry, b9FruHotSwapState=b9FruHotSwapState, b24NegativeHysteresis=b24NegativeHysteresis, hwCPUMCEDeassert=hwCPUMCEDeassert, b19fruBoardDescription=b19fruBoardDescription, b12PowerCapping=b12PowerCapping, b32Current=b32Current, smmLowerCritical=smmLowerCritical, hwTrapEventData2=hwTrapEventData2, b11FruLedColorProps=b11FruLedColorProps, b14MEMHealth=b14MEMHealth, b14FRULabel=b14FRULabel, swi3FruHotSwapState=swi3FruHotSwapState, b27FruLedColorProps=b27FruLedColorProps, b15ClearBiosConfig=b15ClearBiosConfig, shelfNumber=shelfNumber, blade31SecretKvmVmmEntry=blade31SecretKvmVmmEntry, b17MEMPresent=b17MEMPresent, b1PowerState=b1PowerState, blade4MezzTable=blade4MezzTable, b9WDTBootEnable=b9WDTBootEnable, b15MezzLocation=b15MezzLocation, b22MEMInfo=b22MEMInfo, blade23MemoryTable=blade23MemoryTable, b1BundleVersion=b1BundleVersion, b11MezzMac=b11MezzMac, b28PositiveHysteresis=b28PositiveHysteresis, hwWatchDogOverflow=hwWatchDogOverflow, blade31DiskEntry=blade31DiskEntry, b3MezzIndex=b3MezzIndex, b28NegativeHysteresis=b28NegativeHysteresis, b16CPUHealth=b16CPUHealth, blade8MezzEntry=blade8MezzEntry, powerRatingPower=powerRatingPower, b15systemGuid=b15systemGuid, blade30CPUEntry=blade30CPUEntry, b18SensorHealth=b18SensorHealth, blade9DiskEntry=blade9DiskEntry, blade13MemoryEntry=blade13MemoryEntry, b5DiskHealth=b5DiskHealth, b2PositiveHysteresis=b2PositiveHysteresis, shelfChassisID=shelfChassisID, b18SecretVmmKey=b18SecretVmmKey, b20UpperCritical=b20UpperCritical, swi1BladeVersion=swi1BladeVersion, b21ClearBiosConfig=b21ClearBiosConfig, blade4SensorTargetEntry=blade4SensorTargetEntry, b13MezzHealth=b13MezzHealth, b16DiskLocation=b16DiskLocation, b27MEMIndex=b27MEMIndex, b13MEMMark=b13MEMMark, b4UpperCritical=b4UpperCritical, b16UpperCritical=b16UpperCritical, b26ThresholdsAll=b26ThresholdsAll, b22UpperNonRecoverable=b22UpperNonRecoverable, b11MezzLocation=b11MezzLocation, b26BundleVersion=b26BundleVersion, blade2CPUEntry=blade2CPUEntry, blade7SecretKvmVmmTable=blade7SecretKvmVmmTable, b13CPUInfo=b13CPUInfo, hwFanStatusFault=hwFanStatusFault, b29SensorType=b29SensorType, b32CPUInfo=b32CPUInfo, b25fruProductDescription=b25fruProductDescription, swi1FruLed=swi1FruLed, b22MMSecretVmmKey=b22MMSecretVmmKey, blade3FruLedTable=blade3FruLedTable, b23Safepwofftime=b23Safepwofftime, b11UpperNonCritical=b11UpperNonCritical, blade3MezzTable=blade3MezzTable, b28MEMLocation=b28MEMLocation, b22fruBoardManufacturer=b22fruBoardManufacturer, b23DiskPresent=b23DiskPresent, blade3FruTable=blade3FruTable, b9CPUIndex=b9CPUIndex, b13Systeminfo=b13Systeminfo, b1DiskMark=b1DiskMark, swi3fruBoardSerialNumber=swi3fruBoardSerialNumber, b22BladeVersion=b22BladeVersion, b16DiskInfo=b16DiskInfo, b2Presence=b2Presence, b17DeviceID=b17DeviceID, blade16FruLedTable=blade16FruLedTable, b20SensorHealth=b20SensorHealth, shelfFanTraycontrolmode=shelfFanTraycontrolmode, b23fruBoardDescription=b23fruBoardDescription, b15BmcUserAdd=b15BmcUserAdd, b27FRUControl=b27FRUControl, b6fruProductManufacturer=b6fruProductManufacturer, b29SensorFRUInfo=b29SensorFRUInfo, powerMode=powerMode, hwVideoControllerFaultDeassert=hwVideoControllerFaultDeassert, b13BmcGateway=b13BmcGateway, b9BladeVersion=b9BladeVersion, b7BmcUserAdd=b7BmcUserAdd, swi4HealthEvents=swi4HealthEvents, swi2fruProductDescription=swi2fruProductDescription, b7DeviceID=b7DeviceID, hwPhyPortFault=hwPhyPortFault, b10LowerNonCritical=b10LowerNonCritical, b12SensorFRUInfo=b12SensorFRUInfo, b5MezzInfo=b5MezzInfo, b6BmcIP=b6BmcIP, b12SecretVmmKey=b12SecretVmmKey, b19MEMPresent=b19MEMPresent, blade25FruLedTable=blade25FruLedTable, b18CPULocation=b18CPULocation, b31fruBoardSerialNumber=b31fruBoardSerialNumber, b31UpperNonCritical=b31UpperNonCritical, b9MEMHealth=b9MEMHealth, blade2MemoryTable=blade2MemoryTable, blade32FruDescriptionTable=blade32FruDescriptionTable, bladeshealtheventsEntry=bladeshealtheventsEntry, b15Presence=b15Presence, b22BiosCfg=b22BiosCfg, b26PowerState=b26PowerState, b1SecretKvmState=b1SecretKvmState, b19DiskInfo=b19DiskInfo, fanPresence=fanPresence, b3DiskInfo=b3DiskInfo, b24fruBoardManufacturer=b24fruBoardManufacturer, hwPowerSupply=hwPowerSupply, blade29SensorTargetTable=blade29SensorTargetTable, b27MACAddress=b27MACAddress, blade1FruTable=blade1FruTable, fanTrayFanTable=fanTrayFanTable, b11Current=b11Current, b5LowerNonCritical=b5LowerNonCritical, hwTrapBlade=hwTrapBlade, b23Current=b23Current, b6fruBoardManufacturer=b6fruBoardManufacturer, b8Current=b8Current, blade24SensorTargetEntry=blade24SensorTargetEntry, blade14DiskTable=blade14DiskTable, b8BmcUserPasswd=b8BmcUserPasswd, b13fruBoardManufactureDate=b13fruBoardManufactureDate, b12MEMHealth=b12MEMHealth, b15BiosCfg=b15BiosCfg, b6MEMPresent=b6MEMPresent, b21PositiveHysteresis=b21PositiveHysteresis, b32FruLedState=b32FruLedState, b19fruProductSerialNumber=b19fruProductSerialNumber, powerFaultReason=powerFaultReason, b24MezzMark=b24MezzMark, b7DiskInfo=b7DiskInfo, b15SensorHealth=b15SensorHealth, blade16CPUTable=blade16CPUTable, b10CPUHealth=b10CPUHealth, swi4Presence=swi4Presence, b13ClearSEL=b13ClearSEL, blade20FruLedTable=blade20FruLedTable, b17BiosCfg=b17BiosCfg, b11fruProductManufacturer=b11fruProductManufacturer, hwFanPresenceDeassert=hwFanPresenceDeassert, blade24SecretKvmVmmTable=blade24SecretKvmVmmTable, b29BmcUserAdd=b29BmcUserAdd, b22MezzMac=b22MezzMac, b9ClearBiosConfig=b9ClearBiosConfig, hwACPIStatusS4S5=hwACPIStatusS4S5, hwI2cClockDriveLoUnableDeassert=hwI2cClockDriveLoUnableDeassert, swi3ResetReason=swi3ResetReason, blade12FruLedEntry=blade12FruLedEntry, b18FruLedProperties=b18FruLedProperties, b30Systeminfo=b30Systeminfo, swi4fruBoardSerialNumber=swi4fruBoardSerialNumber, b7BundleVersion=b7BundleVersion, b8CPULocation=b8CPULocation, b25MEMIndex=b25MEMIndex, b6fruBoardDescription=b6fruBoardDescription, b9PositiveHysteresis=b9PositiveHysteresis)
mibBuilder.exportSymbols("HWSMM-MIB", b16DeviceID=b16DeviceID, b3DiskPresent=b3DiskPresent, b9PowerState=b9PowerState, b27Target=b27Target, b21MezzInfo=b21MezzInfo, hwCPUVoltageMismatchDeassert=hwCPUVoltageMismatchDeassert, swi3PowerState=swi3PowerState, swi1SensorType=swi1SensorType, swi4fruAll=swi4fruAll, b1DiskInfo=b1DiskInfo, b10SecretKvmVmmIndex=b10SecretKvmVmmIndex, blade31CPUTable=blade31CPUTable, b16fruNum=b16fruNum, b22SensorType=b22SensorType, b29MEMInfo=b29MEMInfo, b16LowerNonCritical=b16LowerNonCritical, b22MezzHealth=b22MezzHealth, b7Safepwofftime=b7Safepwofftime, blade3CPUTable=blade3CPUTable, b21SecretVmmKey=b21SecretVmmKey, b27MezzLocation=b27MezzLocation, b14FruHotSwapState=b14FruHotSwapState, b6HealthEvents=b6HealthEvents, b25ResetReason=b25ResetReason, blade9FruLedTable=blade9FruLedTable, blade19CPUEntry=blade19CPUEntry, blade9FruDescriptionTable=blade9FruDescriptionTable, b7MACAddress=b7MACAddress, smmProductName=smmProductName, b30SecretVmmKey=b30SecretVmmKey, blade4SensorTargetTable=blade4SensorTargetTable, b25MezzMac=b25MezzMac, b26fruProductDescription=b26fruProductDescription, b14BmcIP=b14BmcIP, swi1SaveConfig=swi1SaveConfig, b31BmcUserpropertychg=b31BmcUserpropertychg, b7ResetReason=b7ResetReason, blade1SensorTargetTable=blade1SensorTargetTable, swi2FRUControl=swi2FRUControl, hwTempLoMajorDeassert=hwTempLoMajorDeassert, b23PowerState=b23PowerState, b17DiskIndex=b17DiskIndex, b21MezzMark=b21MezzMark, hwHardDisk=hwHardDisk, smmFruDescriptionEntry=smmFruDescriptionEntry, swi3SaveConfig=swi3SaveConfig, b8fruBoardManufacturer=b8fruBoardManufacturer, b18fruBoardPartNumber=b18fruBoardPartNumber, b28ExDiskBoardPresence=b28ExDiskBoardPresence, b28fruNum=b28fruNum, b24SystemProperties=b24SystemProperties, b8FruLedState=b8FruLedState, b20SensorHealthEvents=b20SensorHealthEvents, b26UpperNonRecoverable=b26UpperNonRecoverable, b29DiskMark=b29DiskMark, b11fruBoardSerialNumber=b11fruBoardSerialNumber, swi4ProductName=swi4ProductName, b23FruLedColorProps=b23FruLedColorProps, b21SensorFRUInfo=b21SensorFRUInfo, smmVMMServerPort=smmVMMServerPort, b26CPUHealth=b26CPUHealth, b31ClearSEL=b31ClearSEL, b9MEMMark=b9MEMMark, blade17FruDescriptionTable=blade17FruDescriptionTable, swi3FRULabel=swi3FRULabel, b23DiskHealth=b23DiskHealth, b14fruBoardDescription=b14fruBoardDescription, blade30FruEntry=blade30FruEntry, b26LowerNonRecoverable=b26LowerNonRecoverable, b30SensorType=b30SensorType, b32MACAddress=b32MACAddress, b22fruProductPartNumber=b22fruProductPartNumber, b32FruLed=b32FruLed, swi4FruLedState=swi4FruLedState, b20PositiveHysteresis=b20PositiveHysteresis, b10ClearSEL=b10ClearSEL, b10MEMInfo=b10MEMInfo, b10WDTBootEnable=b10WDTBootEnable, b21ExDiskBoardPresence=b21ExDiskBoardPresence, b20MezzMark=b20MezzMark, b5fruBoardManufacturer=b5fruBoardManufacturer, b29DeviceID=b29DeviceID, b25PowerState=b25PowerState, b26ResetReason=b26ResetReason, blade27MezzTable=blade27MezzTable, b31CPUPresent=b31CPUPresent, b20MEMPresent=b20MEMPresent, b6SecretVmmKey=b6SecretVmmKey, swi4fruProductManufacturer=swi4fruProductManufacturer, b25fruBoardManufacturer=b25fruBoardManufacturer, b9fruBoardManufactureDate=b9fruBoardManufactureDate, b20BladeVersion=b20BladeVersion, b8UpperNonCritical=b8UpperNonCritical, b23MezzInfo=b23MezzInfo, b6RealTimePower=b6RealTimePower, b31Systeminfo=b31Systeminfo, b13BmcUserAdd=b13BmcUserAdd, b23CPUHealth=b23CPUHealth, b8fruProductPartNumber=b8fruProductPartNumber, b22MezzLocation=b22MezzLocation, blade28SecretKvmVmmEntry=blade28SecretKvmVmmEntry, b13FruLedProperties=b13FruLedProperties, swi2fruProductManufacturer=swi2fruProductManufacturer, hwPowerCapFail=hwPowerCapFail, b7FruLedState=b7FruLedState, b4LowerNonCritical=b4LowerNonCritical, blade21SensorTargetTable=blade21SensorTargetTable, b13UpperNonCritical=b13UpperNonCritical, hwCertExpireStatus=hwCertExpireStatus, blade4DiskEntry=blade4DiskEntry, b12fruAll=b12fruAll, blade2DiskEntry=blade2DiskEntry, b1BmcUserAdd=b1BmcUserAdd, blade30FruDescriptionTable=blade30FruDescriptionTable, b21MACAddress=b21MACAddress, b4Current=b4Current, swi3fruBoardPartNumber=swi3fruBoardPartNumber, b21MEMInfo=b21MEMInfo, b3MMSecretVmmKey=b3MMSecretVmmKey, b12CPULocation=b12CPULocation, b20CPUInfo=b20CPUInfo, b31ThresholdsAll=b31ThresholdsAll, b22FruLed=b22FruLed, b27MezzPresent=b27MezzPresent, b5SystemProperties=b5SystemProperties, b24FruID=b24FruID, b30SensorHealthEvents=b30SensorHealthEvents, b18CPUPresent=b18CPUPresent, blade18SensorTargetTable=blade18SensorTargetTable, b10ProductName=b10ProductName, b27FruLedState=b27FruLedState, b5CPUHealth=b5CPUHealth, b25MEMHealth=b25MEMHealth, b6systemGuid=b6systemGuid, hwPowerSupplyFaultDeassert=hwPowerSupplyFaultDeassert, b7CPUIndex=b7CPUIndex, blade17FruEntry=blade17FruEntry, swi4FruVersion=swi4FruVersion, b5fruBoardDescription=b5fruBoardDescription, b5Systeminfo=b5Systeminfo, blade31MemoryTable=blade31MemoryTable, b2CPUHealth=b2CPUHealth, b28FruHotSwapState=b28FruHotSwapState, b10SecretKvmState=b10SecretKvmState, blade14SecretKvmVmmTable=blade14SecretKvmVmmTable, hwTrapEventData3=hwTrapEventData3, smmDeleteIpAddr=smmDeleteIpAddr, b28RealTimePower=b28RealTimePower, b32DiskIndex=b32DiskIndex, blade9FruEntry=blade9FruEntry, b8CPUIndex=b8CPUIndex, b29FruLedState=b29FruLedState, b14FruID=b14FruID, b12DeviceID=b12DeviceID, b30DiskHealth=b30DiskHealth, swi1PowerState=swi1PowerState, blade28SecretKvmVmmTable=blade28SecretKvmVmmTable, b26fruBoardPartNumber=b26fruBoardPartNumber, swi2FruDescriptionTable=swi2FruDescriptionTable, smmTrapFormat=smmTrapFormat, b27fruNumber=b27fruNumber, b6MEMInfo=b6MEMInfo, hwTempHiMajorDeassert=hwTempHiMajorDeassert, blade13MemoryTable=blade13MemoryTable, b19PowerCapping=b19PowerCapping, b26FruLedProperties=b26FruLedProperties, smmDomainAlias=smmDomainAlias, shelf=shelf, blade3FruDescriptionEntry=blade3FruDescriptionEntry, b27CPULocation=b27CPULocation, b9fruProductRevision=b9fruProductRevision, b10DiskInfo=b10DiskInfo, b29SensorHealthEvents=b29SensorHealthEvents, swi1FruID=swi1FruID, b23MezzLocation=b23MezzLocation, b24SecretKvmState=b24SecretKvmState, b30fruNum=b30fruNum, hwNoBootableMedia=hwNoBootableMedia, b28MEMInfo=b28MEMInfo, b31FruLed=b31FruLed, b17fruBoardManufacturer=b17fruBoardManufacturer, b15ThresholdsAll=b15ThresholdsAll, b8fruBoardDescription=b8fruBoardDescription, b28MEMMark=b28MEMMark, bladeNameIndex=bladeNameIndex, b15Health=b15Health, blade10CPUEntry=blade10CPUEntry, blade5DiskTable=blade5DiskTable, smmPasswdvalidPeriod=smmPasswdvalidPeriod, b23fruProductDescription=b23fruProductDescription, b14BmcUserAdd=b14BmcUserAdd, b21SecretKvmState=b21SecretKvmState, b4MEMHealth=b4MEMHealth, b4BladeVersion=b4BladeVersion, b25MEMMark=b25MEMMark, b24BundleVersion=b24BundleVersion, swi4FruLedColorProps=swi4FruLedColorProps, b22fruBoardDescription=b22fruBoardDescription, b24ClearSEL=b24ClearSEL, b29MMSecretVmmKey=b29MMSecretVmmKey, b23ClearSEL=b23ClearSEL, b15DiskInfo=b15DiskInfo, swi3FruLedColorProps=swi3FruLedColorProps, blade7SecretKvmVmmEntry=blade7SecretKvmVmmEntry, smmfruProductDescription=smmfruProductDescription, b15FRUControl=b15FRUControl, blade32FruEntry=blade32FruEntry, b18SecretKvmVmmIndex=b18SecretKvmVmmIndex, b5HealthEvents=b5HealthEvents, blade1SensorTargetEntry=blade1SensorTargetEntry, hwMemoryECCLimitation=hwMemoryECCLimitation, b12ThresholdsAll=b12ThresholdsAll, b21fruNumber=b21fruNumber, b11Safepwofftime=b11Safepwofftime, blade26DiskEntry=blade26DiskEntry, b32UpperNonRecoverable=b32UpperNonRecoverable, b30CPUPresent=b30CPUPresent, b14fruProductSerialNumber=b14fruProductSerialNumber, b28PowerCapping=b28PowerCapping, b6FruID=b6FruID, b16BmcUserDel=b16BmcUserDel, b18SensorFRUInfo=b18SensorFRUInfo, blade27FruEntry=blade27FruEntry, swi3ConfigInfo=swi3ConfigInfo, b7SystemProperties=b7SystemProperties, b11MEMMark=b11MEMMark, b28FruLedState=b28FruLedState, blade31FruDescriptionEntry=blade31FruDescriptionEntry, b15FruHotSwapState=b15FruHotSwapState, b21MezzMac=b21MezzMac, swi3SensorTargetEntry=swi3SensorTargetEntry, blade12MemoryTable=blade12MemoryTable, hwRAIDArrayFailDeassert=hwRAIDArrayFailDeassert, b16CPUPresent=b16CPUPresent, b8MEMLocation=b8MEMLocation, blade22CPUEntry=blade22CPUEntry, blade18SecretKvmVmmTable=blade18SecretKvmVmmTable, swi4PositiveHysteresis=swi4PositiveHysteresis, b5DiskIndex=b5DiskIndex, b1ProductName=b1ProductName, b18SecretVmmState=b18SecretVmmState, b28FruLed=b28FruLed, hwInvalidBootSectorDeassert=hwInvalidBootSectorDeassert, b31UpperCritical=b31UpperCritical, b26fruBoardManufacturer=b26fruBoardManufacturer, b27fruProductDescription=b27fruProductDescription, swi1FruLedTable=swi1FruLedTable, b6fruBoardSerialNumber=b6fruBoardSerialNumber, b22ClearSEL=b22ClearSEL, blade27DiskTable=blade27DiskTable, b16BladeVersion=b16BladeVersion, b22BmcUserpropertychg=b22BmcUserpropertychg, hwFanRemovedDeassert=hwFanRemovedDeassert, b3MezzMark=b3MezzMark)
mibBuilder.exportSymbols("HWSMM-MIB", b31DiskIndex=b31DiskIndex, hwHardDiskFaultDeassert=hwHardDiskFaultDeassert, b7MezzLocation=b7MezzLocation, b25BundleVersion=b25BundleVersion, b22SecretKvmVmmIndex=b22SecretKvmVmmIndex, b12MACAddress=b12MACAddress, b16SecretKvmState=b16SecretKvmState, blade26SecretKvmVmmEntry=blade26SecretKvmVmmEntry, b12BladeVersion=b12BladeVersion, b26DeviceID=b26DeviceID, blade25CPUTable=blade25CPUTable, b25CPULocation=b25CPULocation, b26FruLedColorProps=b26FruLedColorProps, hwTempHiMinorDeassert=hwTempHiMinorDeassert, b4BiosBootOption=b4BiosBootOption, b18Presence=b18Presence, blade14MezzEntry=blade14MezzEntry, b24SensorHealthEvents=b24SensorHealthEvents, swi1PositiveHysteresis=swi1PositiveHysteresis, smmfruBoardDescription=smmfruBoardDescription, b32FruLedColorProps=b32FruLedColorProps, hwPCIeFault=hwPCIeFault, blade31CPUEntry=blade31CPUEntry, b11LowerNonRecoverable=b11LowerNonRecoverable, blade21FruDescriptionEntry=blade21FruDescriptionEntry, b17MezzInfo=b17MezzInfo, b7DiskIndex=b7DiskIndex, b26Target=b26Target, blade8CPUTable=blade8CPUTable, b4MACAddress=b4MACAddress, shelfDomain=shelfDomain, blade25MemoryEntry=blade25MemoryEntry, blade22FruDescriptionTable=blade22FruDescriptionTable, swi2FruLedColorProps=swi2FruLedColorProps, blade12=blade12, b8FruID=b8FruID, b5SensorFRUInfo=b5SensorFRUInfo, b9systemGuid=b9systemGuid, blade10=blade10, b24fruAll=b24fruAll, swi4FcPortConn=swi4FcPortConn, swi2fruProductSerialNumber=swi2fruProductSerialNumber, swi3fruProductDescription=swi3fruProductDescription, b28SensorType=b28SensorType, b30MezzPresent=b30MezzPresent, b7FruLedProperties=b7FruLedProperties, b14PowerCapping=b14PowerCapping, b11SensorHealthEvents=b11SensorHealthEvents, b4SensorType=b4SensorType, b13BmcIP=b13BmcIP, blade15SecretKvmVmmEntry=blade15SecretKvmVmmEntry, b16FruLedProperties=b16FruLedProperties, b10DiskPresent=b10DiskPresent, b12SensorType=b12SensorType, hwCertStatusExpired=hwCertStatusExpired, b2DiskIndex=b2DiskIndex, blade21FruTable=blade21FruTable, b6CPUHealth=b6CPUHealth, b20MEMInfo=b20MEMInfo, blade10DiskEntry=blade10DiskEntry, blade5SecretKvmVmmEntry=blade5SecretKvmVmmEntry, blade6FruTable=blade6FruTable, blade14FruLedEntry=blade14FruLedEntry, smmPduEnable=smmPduEnable, b15LowerNonRecoverable=b15LowerNonRecoverable, b1fruProductSerialNumber=b1fruProductSerialNumber, b4PowerState=b4PowerState, hwFlashUsage=hwFlashUsage, b12FruLedState=b12FruLedState, b10MezzMark=b10MezzMark, b2DeviceID=b2DeviceID, b3DeviceID=b3DeviceID, b4MMSecretVmmKey=b4MMSecretVmmKey, b6fruAll=b6fruAll, b17BladeVersion=b17BladeVersion, blade24FruLedEntry=blade24FruLedEntry, b14CPUMark=b14CPUMark, b2Target=b2Target, blade31=blade31, b18PositiveHysteresis=b18PositiveHysteresis, b8SystemProperties=b8SystemProperties, b11UpperCritical=b11UpperCritical, b2fruBoardManufactureDate=b2fruBoardManufactureDate, b32BiosCfg=b32BiosCfg, b31SecretKvmVmmIndex=b31SecretKvmVmmIndex, b30FruID=b30FruID, b16Current=b16Current, swi3FRUControl=swi3FRUControl, blade27=blade27, b9fruProductPartNumber=b9fruProductPartNumber, b6FruLedState=b6FruLedState, b27DiskIndex=b27DiskIndex, b17FruLedState=b17FruLedState, b3Safepwofftime=b3Safepwofftime, b30MEMInfo=b30MEMInfo, b19fruProductPartNumber=b19fruProductPartNumber, b11BundleVersion=b11BundleVersion, b18fruBoardSerialNumber=b18fruBoardSerialNumber, b16BundleVersion=b16BundleVersion, blade32FruLedTable=blade32FruLedTable, blade32SensorTargetTable=blade32SensorTargetTable, b7CPULocation=b7CPULocation, b1MEMMark=b1MEMMark, hwHardwareAddrFault=hwHardwareAddrFault, blade25DiskEntry=blade25DiskEntry, smmFruEntry=smmFruEntry, b16PositiveHysteresis=b16PositiveHysteresis, b27MezzInfo=b27MezzInfo, swi1FRUControl=swi1FRUControl, b25FruLedProperties=b25FruLedProperties, hwFailOverIdle=hwFailOverIdle, b27DiskLocation=b27DiskLocation, blade27MemoryTable=blade27MemoryTable, b4CPUInfo=b4CPUInfo, b25MezzPresent=b25MezzPresent, b20UpperNonRecoverable=b20UpperNonRecoverable, b7MezzHealth=b7MezzHealth, b12MezzIndex=b12MezzIndex, smmFruLedState=smmFruLedState, b1SecretVmmState=b1SecretVmmState, swi4PhyState=swi4PhyState, b24BiosBootOption=b24BiosBootOption, systemHealth=systemHealth, b13fruProductPartNumber=b13fruProductPartNumber, swi2ConfigSupport=swi2ConfigSupport, b8LowerCritical=b8LowerCritical, hwHardDiskPresence=hwHardDiskPresence, blade8=blade8, b32BmcGateway=b32BmcGateway, swi1PhyReset=swi1PhyReset, swi1UpperCritical=swi1UpperCritical, b6CPUIndex=b6CPUIndex, b19fruBoardSerialNumber=b19fruBoardSerialNumber, swi1FRULabel=swi1FRULabel, b20MMSecretVmmKey=b20MMSecretVmmKey, b3MezzLocation=b3MezzLocation, b16SensorHealthEvents=b16SensorHealthEvents, b3Target=b3Target, b24UpperNonCritical=b24UpperNonCritical, blade22FruEntry=blade22FruEntry, b24CPUPresent=b24CPUPresent, b9SensorFRUInfo=b9SensorFRUInfo, b14fruNumber=b14fruNumber, b4MEMInfo=b4MEMInfo, b16ResetReason=b16ResetReason, b10ExDiskBoardPresence=b10ExDiskBoardPresence, blade11SensorTargetTable=blade11SensorTargetTable, b8MMSecretVmmKey=b8MMSecretVmmKey, b19FruID=b19FruID, b23PowerCapping=b23PowerCapping, blade22DiskEntry=blade22DiskEntry, b4BundleVersion=b4BundleVersion, blade22SensorTargetTable=blade22SensorTargetTable, swi3SWIPControl=swi3SWIPControl, b31MezzPresent=b31MezzPresent, b5FRUControl=b5FRUControl, b17CPUMark=b17CPUMark, b9ResetReason=b9ResetReason, b10FruHotSwapState=b10FruHotSwapState, smmDeleteFruLabel=smmDeleteFruLabel, b9Presence=b9Presence, swi4BladeVersion=swi4BladeVersion, b8ThresholdsAll=b8ThresholdsAll, b4DiskLocation=b4DiskLocation, b20fruBoardSerialNumber=b20fruBoardSerialNumber, b7ClearSEL=b7ClearSEL, b5DiskPresent=b5DiskPresent, b29fruBoardDescription=b29fruBoardDescription, b9BundleVersion=b9BundleVersion, b14ExDiskBoardPresence=b14ExDiskBoardPresence, b16PowerCapping=b16PowerCapping, b25Systeminfo=b25Systeminfo, b7fruBoardManufacturer=b7fruBoardManufacturer, b10FruLed=b10FruLed, swi4fruProductPartNumber=swi4fruProductPartNumber, fanSpeed=fanSpeed, shelfPsuSleepStatus=shelfPsuSleepStatus, b9fruProductManufacturer=b9fruProductManufacturer, b31FRUControl=b31FRUControl, swi2PortToBladeSlot=swi2PortToBladeSlot, b9MEMLocation=b9MEMLocation, b6SensorHealthEvents=b6SensorHealthEvents, swi1OTMData=swi1OTMData, blade6FruLedEntry=blade6FruLedEntry, b31BiosBootOption=b31BiosBootOption, b16DiskMark=b16DiskMark, b15CPULocation=b15CPULocation, b24Powerreference=b24Powerreference, b29fruProductRevision=b29fruProductRevision, b6LowerNonRecoverable=b6LowerNonRecoverable, b29Target=b29Target, swi4OTMInfo=swi4OTMInfo, b31MEMMark=b31MEMMark, b19MezzMac=b19MezzMac, b24MEMHealth=b24MEMHealth, b1MezzMark=b1MezzMark, blade9=blade9, b19CPUInfo=b19CPUInfo, b7FruLedColorProps=b7FruLedColorProps, b24Systeminfo=b24Systeminfo, b8SensorHealthEvents=b8SensorHealthEvents, b24fruBoardManufactureDate=b24fruBoardManufactureDate, b22HealthEvents=b22HealthEvents, b11SensorType=b11SensorType, blade21MezzTable=blade21MezzTable, smmRemoteSyslogTarget=smmRemoteSyslogTarget, b20fruProductSerialNumber=b20fruProductSerialNumber, b29SensorHealth=b29SensorHealth, smmDeviceID=smmDeviceID, b27NegativeHysteresis=b27NegativeHysteresis, swi2ClearAlarm=swi2ClearAlarm, b15fruProductPartNumber=b15fruProductPartNumber, b19MezzPresent=b19MezzPresent, b21LowerCritical=b21LowerCritical, b32SecretVmmState=b32SecretVmmState, blade3SensorTargetTable=blade3SensorTargetTable, b20RealTimePower=b20RealTimePower, b9UpperNonCritical=b9UpperNonCritical, b9fruBoardPartNumber=b9fruBoardPartNumber, b6SecretVmmState=b6SecretVmmState, b6Powerreference=b6Powerreference, b22SystemProperties=b22SystemProperties, b18MEMMark=b18MEMMark, b19FRULabel=b19FRULabel, b32DiskPresent=b32DiskPresent, blade8FruEntry=blade8FruEntry, b8SecretKvmVmmIndex=b8SecretKvmVmmIndex, b17FruLed=b17FruLed, b18RealTimePower=b18RealTimePower, b29LowerNonCritical=b29LowerNonCritical, b32MezzMac=b32MezzMac, swi2FruTable=swi2FruTable, b30Powerreference=b30Powerreference, swi3UpperNonCritical=swi3UpperNonCritical, blade31MemoryEntry=blade31MemoryEntry, b18fruNum=b18fruNum, blade11FruTable=blade11FruTable, b12SecretVmmState=b12SecretVmmState, b27MEMLocation=b27MEMLocation, blade6CPUTable=blade6CPUTable, b17BmcIP=b17BmcIP, smmfruBoardSerialNumber=smmfruBoardSerialNumber, blade14FruTable=blade14FruTable, swi2BladeVersion=swi2BladeVersion, b1CPUInfo=b1CPUInfo, b3FruLedColorProps=b3FruLedColorProps, b14MEMInfo=b14MEMInfo, smmRemoteSyslogClientCertificate=smmRemoteSyslogClientCertificate, b24DiskInfo=b24DiskInfo, b17BmcGateway=b17BmcGateway, b30FruHotSwapState=b30FruHotSwapState, b26Powerreference=b26Powerreference, blade10DiskTable=blade10DiskTable, smmfruProductPartNumber=smmfruProductPartNumber)
mibBuilder.exportSymbols("HWSMM-MIB", shelfPowerCappingEnable=shelfPowerCappingEnable, hwPSPresence=hwPSPresence, b8MezzLocation=b8MezzLocation, b14MezzMark=b14MezzMark, b30CPUMark=b30CPUMark, b20PowerState=b20PowerState, blade13CPUTable=blade13CPUTable, b10SecretVmmState=b10SecretVmmState, blade12DiskEntry=blade12DiskEntry, blade13CPUEntry=blade13CPUEntry, b20MACAddress=b20MACAddress, b10DiskMark=b10DiskMark, b16fruBoardDescription=b16fruBoardDescription, smmSynchronize=smmSynchronize, blade14MemoryTable=blade14MemoryTable, b18ResetReason=b18ResetReason, b13UpperNonRecoverable=b13UpperNonRecoverable, b19Powerreference=b19Powerreference, blade18MezzTable=blade18MezzTable, blade17MemoryTable=blade17MemoryTable, b7SecretKvmVmmIndex=b7SecretKvmVmmIndex, b24CPUHealth=b24CPUHealth, blade16FruLedEntry=blade16FruLedEntry, b4SystemProperties=b4SystemProperties, b3fruProductPartNumber=b3fruProductPartNumber, swi1FruDescriptionTable=swi1FruDescriptionTable, b26LowerCritical=b26LowerCritical, b14DiskIndex=b14DiskIndex, blade10MezzTable=blade10MezzTable, b17Powerreference=b17Powerreference, b25NegativeHysteresis=b25NegativeHysteresis, smmNTPSyncinterval=smmNTPSyncinterval, b10BmcIP=b10BmcIP, blade28DiskEntry=blade28DiskEntry, b30MezzHealth=b30MezzHealth, b24FruHotSwapState=b24FruHotSwapState, blade4CPUEntry=blade4CPUEntry, b7ProductName=b7ProductName, b12FruLedColorProps=b12FruLedColorProps, blade24DiskEntry=blade24DiskEntry, b14DiskHealth=b14DiskHealth, b12CPUHealth=b12CPUHealth, b5MezzPresent=b5MezzPresent, swi2fruProductPartNumber=swi2fruProductPartNumber, b28BladeVersion=b28BladeVersion, b18fruProductPartNumber=b18fruProductPartNumber, b10Health=b10Health, swi2fruNum=swi2fruNum, b31CPUInfo=b31CPUInfo, hwRTCBatterylowDeassert=hwRTCBatterylowDeassert, b25BladeVersion=b25BladeVersion, b16FruHotSwapState=b16FruHotSwapState, smmPoweronControl=smmPoweronControl, swi3PhyState=swi3PhyState, b5Target=b5Target, b7fruProductManufacturer=b7fruProductManufacturer, b23CPUInfo=b23CPUInfo, blade29FruDescriptionEntry=blade29FruDescriptionEntry, blade22MezzEntry=blade22MezzEntry, b5CPUIndex=b5CPUIndex, b17MEMMark=b17MEMMark, hwCPUCfgError=hwCPUCfgError, b27RealTimePower=b27RealTimePower, b3fruBoardPartNumber=b3fruBoardPartNumber, smmSNMPTrapAddress2=smmSNMPTrapAddress2, blade27SecretKvmVmmEntry=blade27SecretKvmVmmEntry, b9LowerNonRecoverable=b9LowerNonRecoverable, b4CPUHealth=b4CPUHealth, hwCPUPresence=hwCPUPresence, b29SecretVmmState=b29SecretVmmState, b6BladeVersion=b6BladeVersion, b8DiskHealth=b8DiskHealth, b25SecretVmmKey=b25SecretVmmKey, b27MEMInfo=b27MEMInfo, blade24FruDescriptionTable=blade24FruDescriptionTable, b18MEMIndex=b18MEMIndex, b25fruBoardPartNumber=b25fruBoardPartNumber, b10MEMLocation=b10MEMLocation, b27fruBoardSerialNumber=b27fruBoardSerialNumber, b13MACAddress=b13MACAddress, b25Powerreference=b25Powerreference, b11fruProductPartNumber=b11fruProductPartNumber, blade20FruEntry=blade20FruEntry, b19LowerNonRecoverable=b19LowerNonRecoverable, b17SecretKvmVmmIndex=b17SecretKvmVmmIndex, hwFirmwareIncompatibilityDeassert=hwFirmwareIncompatibilityDeassert, b29CPUIndex=b29CPUIndex, b4FRUControl=b4FRUControl, b7UpperNonRecoverable=b7UpperNonRecoverable, swi3PortToBladeSlot=swi3PortToBladeSlot, b6FRULabel=b6FRULabel, blade8CPUEntry=blade8CPUEntry, b4ThresholdsAll=b4ThresholdsAll, b12BmcGateway=b12BmcGateway, blade18SensorTargetEntry=blade18SensorTargetEntry, blade29CPUTable=blade29CPUTable, b3CPUHealth=b3CPUHealth, b5PowerCapping=b5PowerCapping, b17ThresholdsAll=b17ThresholdsAll, b31HealthEvents=b31HealthEvents, b29FRULabel=b29FRULabel, b18MezzHealth=b18MezzHealth, blade28FruLedTable=blade28FruLedTable, b13fruAll=b13fruAll, hwWatchDogResetDeassert=hwWatchDogResetDeassert, blade20MemoryEntry=blade20MemoryEntry, b18DiskLocation=b18DiskLocation, b15FruLed=b15FruLed, b11SecretVmmKey=b11SecretVmmKey, b24SensorHealth=b24SensorHealth, b17PowerState=b17PowerState, swi4FruDescriptionEntry=swi4FruDescriptionEntry, b31Powerreference=b31Powerreference, b22Powerreference=b22Powerreference, blade7FruLedEntry=blade7FruLedEntry, blade23FruEntry=blade23FruEntry, b19MEMHealth=b19MEMHealth, b14FruLedState=b14FruLedState, hwTempHiCriticalDeassert=hwTempHiCriticalDeassert, hwTempHiCritical=hwTempHiCritical, b29SlotBitmap=b29SlotBitmap, b32fruBoardPartNumber=b32fruBoardPartNumber, b15fruBoardManufactureDate=b15fruBoardManufactureDate, b14DeviceID=b14DeviceID, swi1fruBoardPartNumber=swi1fruBoardPartNumber, b19PowerState=b19PowerState, b4FruID=b4FruID, b10Presence=b10Presence, b25BmcIP=b25BmcIP, b27PowerCapping=b27PowerCapping, b10fruProductDescription=b10fruProductDescription, b17BundleVersion=b17BundleVersion, b7FruHotSwapState=b7FruHotSwapState, b17Systeminfo=b17Systeminfo, b18CPUInfo=b18CPUInfo, blade5FruLedEntry=blade5FruLedEntry, blade24FruEntry=blade24FruEntry, b11MEMIndex=b11MEMIndex, b7fruAll=b7fruAll, swi4LowerNonCritical=swi4LowerNonCritical, b32fruProductManufacturer=b32fruProductManufacturer, b9DiskIndex=b9DiskIndex, b24FruLedState=b24FruLedState, b15SecretVmmKey=b15SecretVmmKey, b27LowerNonCritical=b27LowerNonCritical, b14MezzInfo=b14MezzInfo, swi1PortTargetEntry=swi1PortTargetEntry, b32DiskLocation=b32DiskLocation, hwPCIeFaultDeassert=hwPCIeFaultDeassert, blade8FruLedEntry=blade8FruLedEntry, b27MEMHealth=b27MEMHealth, b3BiosCfg=b3BiosCfg, blade16MemoryEntry=blade16MemoryEntry, blade5=blade5, smmEthNum=smmEthNum, smmDomainSlots=smmDomainSlots, b16Safepwofftime=b16Safepwofftime, b20SecretVmmKey=b20SecretVmmKey, b25CPUInfo=b25CPUInfo, b25fruBoardDescription=b25fruBoardDescription, b22DiskIndex=b22DiskIndex, b21BmcUserPasswd=b21BmcUserPasswd, b18UpperCritical=b18UpperCritical, b14SensorHealth=b14SensorHealth, b9PowerCapping=b9PowerCapping, blade26MemoryTable=blade26MemoryTable, b18fruNumber=b18fruNumber, b22FruLedProperties=b22FruLedProperties, b15DeviceID=b15DeviceID, b21DiskIndex=b21DiskIndex, b7Powerreference=b7Powerreference, b30ClearSEL=b30ClearSEL, b10BmcUserDel=b10BmcUserDel, b26SensorFRUInfo=b26SensorFRUInfo, b22fruAll=b22fruAll, b22MEMMark=b22MEMMark, b12MezzMac=b12MezzMac, b17fruBoardManufactureDate=b17fruBoardManufactureDate, b11BmcIP=b11BmcIP, b5fruProductSerialNumber=b5fruProductSerialNumber, b9DiskLocation=b9DiskLocation, hwFanPresenceStatus=hwFanPresenceStatus, b11LowerCritical=b11LowerCritical, b3UpperNonRecoverable=b3UpperNonRecoverable, blade20DiskTable=blade20DiskTable, b4fruNum=b4fruNum, b1MezzMac=b1MezzMac, b19fruBoardManufacturer=b19fruBoardManufacturer, b19BiosBootOption=b19BiosBootOption, b27MezzHealth=b27MezzHealth, b17FRULabel=b17FRULabel, b23MACAddress=b23MACAddress, blade6FruDescriptionTable=blade6FruDescriptionTable, b7LowerNonCritical=b7LowerNonCritical, b13SecretKvmState=b13SecretKvmState, b7systemGuid=b7systemGuid, b6BmcUserDel=b6BmcUserDel, b6fruProductRevision=b6fruProductRevision, b28LowerCritical=b28LowerCritical, b19BmcUserAdd=b19BmcUserAdd, b9SecretVmmState=b9SecretVmmState, b19fruProductDescription=b19fruProductDescription, b30fruBoardSerialNumber=b30fruBoardSerialNumber, b16BmcUserpropertychg=b16BmcUserpropertychg, swi1fruBoardManufacturer=swi1fruBoardManufacturer, blade22MezzTable=blade22MezzTable, smmSensorFRUInfo=smmSensorFRUInfo, b12MEMIndex=b12MEMIndex, b26BiosCfg=b26BiosCfg, b3Powerreference=b3Powerreference, b29FruLed=b29FruLed, b10fruBoardSerialNumber=b10fruBoardSerialNumber, b19UpperNonRecoverable=b19UpperNonRecoverable, b3ProductName=b3ProductName, b9MEMPresent=b9MEMPresent, hwI2cDataDriveLoUnableDeassert=hwI2cDataDriveLoUnableDeassert, b5fruBoardManufactureDate=b5fruBoardManufactureDate, blade19FruLedEntry=blade19FruLedEntry, b2SecretVmmKey=b2SecretVmmKey, b20FruLedProperties=b20FruLedProperties, b11RealTimePower=b11RealTimePower, hwHotSwaptoM1=hwHotSwaptoM1, smmFruLabel=smmFruLabel, b9fruNumber=b9fruNumber, hwLowPower=hwLowPower, b3FRUControl=b3FRUControl, b8DiskPresent=b8DiskPresent, hwSysEventInstance=hwSysEventInstance, b9FruLed=b9FruLed, blade31SensorTargetEntry=blade31SensorTargetEntry, b19FruHotSwapState=b19FruHotSwapState, b2fruProductDescription=b2fruProductDescription, b25MEMPresent=b25MEMPresent, blade10FruLedEntry=blade10FruLedEntry, b21fruBoardManufacturer=b21fruBoardManufacturer, hwFanStatusFaultDeassert=hwFanStatusFaultDeassert, blade15FruLedTable=blade15FruLedTable, b31PowerState=b31PowerState, smmNTPServerip=smmNTPServerip, blade8FruDescriptionTable=blade8FruDescriptionTable, blade11SecretKvmVmmEntry=blade11SecretKvmVmmEntry, b11DiskHealth=b11DiskHealth, b14BiosCfg=b14BiosCfg, blade21DiskTable=blade21DiskTable, b11FRULabel=b11FRULabel, b21FruHotSwapState=b21FruHotSwapState, hwFruStatus=hwFruStatus, b2Powerreference=b2Powerreference, b6MezzMark=b6MezzMark, b12DiskLocation=b12DiskLocation, blade15CPUTable=blade15CPUTable, swi3SensorHealthEvents=swi3SensorHealthEvents, b5MezzMark=b5MezzMark, b12FRUControl=b12FRUControl)
mibBuilder.exportSymbols("HWSMM-MIB", blade28DiskTable=blade28DiskTable, b13BiosBootOption=b13BiosBootOption, fanTray=fanTray, b9CPUMark=b9CPUMark, b23FRULabel=b23FRULabel, b18WDTBootEnable=b18WDTBootEnable, hwMemoryRate=hwMemoryRate, b10BmcUserPasswd=b10BmcUserPasswd, b20DiskLocation=b20DiskLocation, blade10CPUTable=blade10CPUTable, b22MEMLocation=b22MEMLocation, blade29FruLedTable=blade29FruLedTable, b27Health=b27Health, hwFailOver=hwFailOver, b19BmcUserDel=b19BmcUserDel, blade13FruTable=blade13FruTable, b3DiskLocation=b3DiskLocation, b23HealthEvents=b23HealthEvents, blade1FruDescriptionEntry=blade1FruDescriptionEntry, b25CPUHealth=b25CPUHealth, b7PowerCapping=b7PowerCapping, smmAuthKey=smmAuthKey, b31DiskHealth=b31DiskHealth, b24MMSecretVmmKey=b24MMSecretVmmKey, b24HealthEvents=b24HealthEvents, smmSecretKVMConnect=smmSecretKVMConnect, b2DiskInfo=b2DiskInfo, b26MezzMark=b26MezzMark, b12WDTBootEnable=b12WDTBootEnable, b21UpperNonRecoverable=b21UpperNonRecoverable, b11MezzIndex=b11MezzIndex, blade32MezzEntry=blade32MezzEntry, blade7FruLedTable=blade7FruLedTable, b23fruProductRevision=b23fruProductRevision, b25BiosCfg=b25BiosCfg, blade3CPUEntry=blade3CPUEntry, b2SensorHealthEvents=b2SensorHealthEvents, swi1OTMInfo=swi1OTMInfo, b9SecretKvmState=b9SecretKvmState, b10MEMHealth=b10MEMHealth, b12FruHotSwapState=b12FruHotSwapState, b23PositiveHysteresis=b23PositiveHysteresis, b14fruProductPartNumber=b14fruProductPartNumber, b18fruProductRevision=b18fruProductRevision, blade7MemoryTable=blade7MemoryTable, b30fruProductSerialNumber=b30fruProductSerialNumber, b30fruNumber=b30fruNumber, swi1PortState=swi1PortState, blade11MezzTable=blade11MezzTable, blade31MezzEntry=blade31MezzEntry, b5MEMIndex=b5MEMIndex, b26FruLedState=b26FruLedState, b13MezzMac=b13MezzMac, b5MEMInfo=b5MEMInfo, b26SecretVmmKey=b26SecretVmmKey, swi3PhyReset=swi3PhyReset, b27BmcGateway=b27BmcGateway, b5systemGuid=b5systemGuid, b28Health=b28Health, b18SecretKvmState=b18SecretKvmState, b13BmcUserDel=b13BmcUserDel, hwCPUThermalTrip=hwCPUThermalTrip, blade23FruDescriptionEntry=blade23FruDescriptionEntry, b16fruBoardPartNumber=b16fruBoardPartNumber, smmDomainEntry=smmDomainEntry, blade21=blade21, swi2FruLedProperties=swi2FruLedProperties, hwPXENotFoundDeassert=hwPXENotFoundDeassert, b20fruProductManufacturer=b20fruProductManufacturer, b19CPUMark=b19CPUMark, blade1SecretKvmVmmTable=blade1SecretKvmVmmTable, b19SystemProperties=b19SystemProperties, b25CPUIndex=b25CPUIndex, b18fruProductSerialNumber=b18fruProductSerialNumber, b12ClearBiosConfig=b12ClearBiosConfig, b25fruAll=b25fruAll, b16ExDiskBoardPresence=b16ExDiskBoardPresence, b24FRULabel=b24FRULabel, b4MezzMark=b4MezzMark, smmFloatIpgateway=smmFloatIpgateway, b12DiskInfo=b12DiskInfo, b22fruBoardPartNumber=b22fruBoardPartNumber, b25DiskInfo=b25DiskInfo, b22systemGuid=b22systemGuid, blade20FruDescriptionTable=blade20FruDescriptionTable, swi2fruBoardSerialNumber=swi2fruBoardSerialNumber, b5fruNumber=b5fruNumber, blade31SecretKvmVmmTable=blade31SecretKvmVmmTable, b4SecretVmmKey=b4SecretVmmKey, b2PowerState=b2PowerState, b17fruNumber=b17fruNumber, blade29MezzEntry=blade29MezzEntry, b31BmcUserDel=b31BmcUserDel, b4ClearBiosConfig=b4ClearBiosConfig, b20Target=b20Target, hwOvertemperature=hwOvertemperature, b17WDTBootEnable=b17WDTBootEnable, blade26FruTable=blade26FruTable, blade15SensorTargetEntry=blade15SensorTargetEntry, b8ClearBiosConfig=b8ClearBiosConfig, smmRedundancy=smmRedundancy, b26ExDiskBoardPresence=b26ExDiskBoardPresence, swi2FruLedState=swi2FruLedState, blade21SecretKvmVmmTable=blade21SecretKvmVmmTable, swi1Target=swi1Target, shelfLocation=shelfLocation, blade16FruTable=blade16FruTable, swi4fruBoardDescription=swi4fruBoardDescription, swi3LowerCritical=swi3LowerCritical, b28fruProductManufacturer=b28fruProductManufacturer, smmOutPortMode=smmOutPortMode, b2SensorHealth=b2SensorHealth, b10BmcGateway=b10BmcGateway, hwCPUDisableDeassert=hwCPUDisableDeassert, b6MezzLocation=b6MezzLocation, b15SystemProperties=b15SystemProperties, b29LowerNonRecoverable=b29LowerNonRecoverable, smmSmalert=smmSmalert, b22FRULabel=b22FRULabel, b11MMSecretVmmKey=b11MMSecretVmmKey, b23SensorType=b23SensorType, b15CPUPresent=b15CPUPresent, b29DiskIndex=b29DiskIndex, b13systemGuid=b13systemGuid, hwHotSwaptoM5=hwHotSwaptoM5, b19LowerNonCritical=b19LowerNonCritical, b24BmcUserpropertychg=b24BmcUserpropertychg, b21BmcUserDel=b21BmcUserDel, blade26CPUTable=blade26CPUTable, blade1SecretKvmVmmEntry=blade1SecretKvmVmmEntry, b5CPUPresent=b5CPUPresent, b15MEMHealth=b15MEMHealth, b5BmcUserAdd=b5BmcUserAdd, b6MEMLocation=b6MEMLocation, swi2PortTargetEntry=swi2PortTargetEntry, b3BladeVersion=b3BladeVersion, b2BmcUserDel=b2BmcUserDel, b27BundleVersion=b27BundleVersion, blade8MemoryTable=blade8MemoryTable, b26fruNumber=b26fruNumber, hwI2cDataDriveLoUnable=hwI2cDataDriveLoUnable, b4Health=b4Health, b8SecretVmmState=b8SecretVmmState, b4fruProductPartNumber=b4fruProductPartNumber, b21MezzLocation=b21MezzLocation, b28BmcUserDel=b28BmcUserDel, b15ClearSEL=b15ClearSEL, b24Health=b24Health, b26FRULabel=b26FRULabel, hwCardPresenceStatus=hwCardPresenceStatus, b5BmcUserDel=b5BmcUserDel, blade6DiskEntry=blade6DiskEntry, b29fruProductDescription=b29fruProductDescription, b2UpperCritical=b2UpperCritical, smmSNMPTrapAddress3=smmSNMPTrapAddress3, b10SecretVmmKey=b10SecretVmmKey, b25FruLedColorProps=b25FruLedColorProps, b21Health=b21Health, b11SecretVmmState=b11SecretVmmState, b30fruBoardPartNumber=b30fruBoardPartNumber, b23MezzMac=b23MezzMac, b11MezzMark=b11MezzMark, hwVoltHiMajorDeassert=hwVoltHiMajorDeassert, b30MezzLocation=b30MezzLocation, b1fruNumber=b1fruNumber, b19SecretKvmState=b19SecretKvmState, blade26SecretKvmVmmTable=blade26SecretKvmVmmTable, b3BmcGateway=b3BmcGateway, swi3ClearAlarm=swi3ClearAlarm, b27SystemProperties=b27SystemProperties, blade23FruTable=blade23FruTable, b5ThresholdsAll=b5ThresholdsAll, b3BmcUserPasswd=b3BmcUserPasswd, blade3MezzEntry=blade3MezzEntry, b26CPULocation=b26CPULocation, b29MezzPresent=b29MezzPresent, b30RealTimePower=b30RealTimePower, b8ExDiskBoardPresence=b8ExDiskBoardPresence, b20Powerreference=b20Powerreference, b4HealthEvents=b4HealthEvents, b21SystemProperties=b21SystemProperties, blade5FruTable=blade5FruTable, b13fruBoardDescription=b13fruBoardDescription, b11CPUPresent=b11CPUPresent, blade16SecretKvmVmmEntry=blade16SecretKvmVmmEntry, b26Presence=b26Presence, b9Current=b9Current, hwFruFail=hwFruFail, b31FruLedProperties=b31FruLedProperties, b20FRUControl=b20FRUControl, b31MEMInfo=b31MEMInfo, b3ResetReason=b3ResetReason, b28DiskLocation=b28DiskLocation, swi1ClearSEL=swi1ClearSEL, b1DiskIndex=b1DiskIndex, b3ClearBiosConfig=b3ClearBiosConfig, b31BiosCfg=b31BiosCfg, hwCableInterconnectStatus=hwCableInterconnectStatus, b18FRUControl=b18FRUControl, b20MEMLocation=b20MEMLocation, b26PositiveHysteresis=b26PositiveHysteresis, blade5MezzTable=blade5MezzTable, b25DeviceID=b25DeviceID, b30MEMMark=b30MEMMark, b3CPUInfo=b3CPUInfo, b16UpperNonRecoverable=b16UpperNonRecoverable, smmUserpropertychg=smmUserpropertychg, b32MezzLocation=b32MezzLocation, smmfruProductSerialNumber=smmfruProductSerialNumber, b2ResetReason=b2ResetReason, b6fruNumber=b6fruNumber, b1fruBoardSerialNumber=b1fruBoardSerialNumber, swi3LowerNonRecoverable=swi3LowerNonRecoverable, b26RealTimePower=b26RealTimePower, hwPSPresenceDeassert=hwPSPresenceDeassert, b31BmcUserPasswd=b31BmcUserPasswd, b11FruLedProperties=b11FruLedProperties, b7MezzIndex=b7MezzIndex, swi2UpperCritical=swi2UpperCritical, b23UpperNonRecoverable=b23UpperNonRecoverable, b21FRULabel=b21FRULabel, b13SensorType=b13SensorType, swi3OTMData=swi3OTMData, b1UpperNonCritical=b1UpperNonCritical, b17MezzMark=b17MezzMark, b21fruBoardSerialNumber=b21fruBoardSerialNumber, b26WDTBootEnable=b26WDTBootEnable, b13fruProductDescription=b13fruProductDescription, b3BmcUserpropertychg=b3BmcUserpropertychg, b27SecretVmmState=b27SecretVmmState, b1Presence=b1Presence, swi4LowerCritical=swi4LowerCritical, smmFruLedColorProps=smmFruLedColorProps, smmStaticIpgateway=smmStaticIpgateway, b1BmcUserDel=b1BmcUserDel, b29SecretVmmKey=b29SecretVmmKey, b20SecretKvmState=b20SecretKvmState, swi3fruBoardManufacturer=swi3fruBoardManufacturer, smmFaultDetectSwitch=smmFaultDetectSwitch, smmRemoteSyslogServerPort=smmRemoteSyslogServerPort, b5DiskInfo=b5DiskInfo, b13fruBoardManufacturer=b13fruBoardManufacturer, b1CPUIndex=b1CPUIndex, b1SensorFRUInfo=b1SensorFRUInfo, b20UpperNonCritical=b20UpperNonCritical, smmOtherVersion=smmOtherVersion, b21fruProductDescription=b21fruProductDescription, swi1UpperNonRecoverable=swi1UpperNonRecoverable, b21fruNum=b21fruNum, b22DiskHealth=b22DiskHealth, swi3fruNumber=swi3fruNumber, blade4MezzEntry=blade4MezzEntry, hwUIDButtonPressed=hwUIDButtonPressed, b1MezzPresent=b1MezzPresent)
mibBuilder.exportSymbols("HWSMM-MIB", b29DiskInfo=b29DiskInfo, b4MezzHealth=b4MezzHealth, b19MezzLocation=b19MezzLocation, blade29DiskEntry=blade29DiskEntry, b6ProductName=b6ProductName, smmSNMPTrapEnable=smmSNMPTrapEnable, blade23CPUEntry=blade23CPUEntry, b27fruProductManufacturer=b27fruProductManufacturer, blade17FruLedEntry=blade17FruLedEntry, b7fruBoardManufactureDate=b7fruBoardManufactureDate, shelfHealth=shelfHealth, b22DiskInfo=b22DiskInfo, b10MEMMark=b10MEMMark, b6ExDiskBoardPresence=b6ExDiskBoardPresence, b28MezzMac=b28MezzMac, blade11SensorTargetEntry=blade11SensorTargetEntry, hwNoBootableMediaDeassert=hwNoBootableMediaDeassert, blade16FruDescriptionEntry=blade16FruDescriptionEntry, b6UpperNonRecoverable=b6UpperNonRecoverable, b27MEMMark=b27MEMMark, smmTimeZone=smmTimeZone, b15WDTBootEnable=b15WDTBootEnable, smmTarget=smmTarget, swi3Health=swi3Health, b17NegativeHysteresis=b17NegativeHysteresis, b24SensorFRUInfo=b24SensorFRUInfo, bladeshealthevents=bladeshealthevents, b17FruLedColorProps=b17FruLedColorProps, b23FruLed=b23FruLed, b11HealthEvents=b11HealthEvents, b18fruBoardManufacturer=b18fruBoardManufacturer, smmPresence=smmPresence, hwHardwareDeviceFaultDeassert=hwHardwareDeviceFaultDeassert, b6BmcUserAdd=b6BmcUserAdd, b14SlotBitmap=b14SlotBitmap, b29HealthEvents=b29HealthEvents, b31fruBoardManufacturer=b31fruBoardManufacturer, b29Safepwofftime=b29Safepwofftime, b10FRUControl=b10FRUControl, b23SensorHealthEvents=b23SensorHealthEvents, b30LowerCritical=b30LowerCritical, b13ExDiskBoardPresence=b13ExDiskBoardPresence, b32MezzMark=b32MezzMark, b8fruAll=b8fruAll, b28ProductName=b28ProductName, b28FruLedProperties=b28FruLedProperties, b8fruProductDescription=b8fruProductDescription, b17UpperCritical=b17UpperCritical, b28DiskInfo=b28DiskInfo, b19ClearSEL=b19ClearSEL, b25BmcUserDel=b25BmcUserDel, b2MMSecretVmmKey=b2MMSecretVmmKey, swi3HealthEvents=swi3HealthEvents, b11FruLed=b11FruLed, b28FruLedColorProps=b28FruLedColorProps, b11fruBoardDescription=b11fruBoardDescription, b15Safepwofftime=b15Safepwofftime, hwPowerCapFailDeassert=hwPowerCapFailDeassert, b8SensorFRUInfo=b8SensorFRUInfo, b13NegativeHysteresis=b13NegativeHysteresis, swi2FruVersion=swi2FruVersion, b31ExDiskBoardPresence=b31ExDiskBoardPresence, blade9MezzTable=blade9MezzTable, b13CPUPresent=b13CPUPresent, b30FruLed=b30FruLed, b20MezzIndex=b20MezzIndex, swi4PhyReset=swi4PhyReset, blade24SecretKvmVmmEntry=blade24SecretKvmVmmEntry, b29ExDiskBoardPresence=b29ExDiskBoardPresence, powerIndex=powerIndex, hwFailOverIdleDeassert=hwFailOverIdleDeassert, blade29MemoryTable=blade29MemoryTable, swi2fruNumber=swi2fruNumber, b22ThresholdsAll=b22ThresholdsAll, b13LowerCritical=b13LowerCritical, b18systemGuid=b18systemGuid, b11MEMHealth=b11MEMHealth, blade13FruEntry=blade13FruEntry, b11CPUHealth=b11CPUHealth, swi1PhyState=swi1PhyState, b1MACAddress=b1MACAddress, b23systemGuid=b23systemGuid, swi4VLanIfIP=swi4VLanIfIP, blade24FruLedTable=blade24FruLedTable, swi3Presence=swi3Presence, b14MezzMac=b14MezzMac, b4MezzMac=b4MezzMac, b15FruLedState=b15FruLedState, blade1FruEntry=blade1FruEntry, b24Safepwofftime=b24Safepwofftime, b6FruHotSwapState=b6FruHotSwapState, b1Health=b1Health, b25FruLed=b25FruLed, b23fruAll=b23fruAll, b20fruProductDescription=b20fruProductDescription, b22ExDiskBoardPresence=b22ExDiskBoardPresence, b8BmcGateway=b8BmcGateway, b5PositiveHysteresis=b5PositiveHysteresis, b17LowerNonRecoverable=b17LowerNonRecoverable, b25LowerNonRecoverable=b25LowerNonRecoverable, b23SecretVmmState=b23SecretVmmState, b17ExDiskBoardPresence=b17ExDiskBoardPresence, b28CPUPresent=b28CPUPresent, b4ExDiskBoardPresence=b4ExDiskBoardPresence, b29UpperNonRecoverable=b29UpperNonRecoverable, b15HealthEvents=b15HealthEvents, hwControllerAccessibleFail=hwControllerAccessibleFail, b28Safepwofftime=b28Safepwofftime, smmSNMPTrapAddress5=smmSNMPTrapAddress5, b26CPUIndex=b26CPUIndex, b22UpperCritical=b22UpperCritical, blade13FruDescriptionEntry=blade13FruDescriptionEntry, b24BmcGateway=b24BmcGateway, swi1LowerCritical=swi1LowerCritical, b16SecretVmmState=b16SecretVmmState, b4SensorHealthEvents=b4SensorHealthEvents, b8MezzInfo=b8MezzInfo, hwManagmentControllerUnaccessibleDeassert=hwManagmentControllerUnaccessibleDeassert, b13CPULocation=b13CPULocation, b30DiskLocation=b30DiskLocation, blade1MemoryTable=blade1MemoryTable, b14SecretVmmState=b14SecretVmmState, b31ResetReason=b31ResetReason, b2systemGuid=b2systemGuid, b32UpperNonCritical=b32UpperNonCritical, blade27FruLedTable=blade27FruLedTable, b28SecretKvmVmmIndex=b28SecretKvmVmmIndex, b10MezzHealth=b10MezzHealth, b31Safepwofftime=b31Safepwofftime, blade29MemoryEntry=blade29MemoryEntry, swi2Route=swi2Route, b17BiosBootOption=b17BiosBootOption, b27fruNum=b27fruNum, b12FruID=b12FruID, hwPSRemoved=hwPSRemoved, b26Health=b26Health, b27DeviceID=b27DeviceID, blade24DiskTable=blade24DiskTable, b5ProductName=b5ProductName, b23ExDiskBoardPresence=b23ExDiskBoardPresence, b7fruBoardDescription=b7fruBoardDescription, smmPoweronResp=smmPoweronResp, b3MezzMac=b3MezzMac, b26MEMIndex=b26MEMIndex, b10MezzInfo=b10MezzInfo, blade18=blade18, b23MEMPresent=b23MEMPresent, b22LowerNonRecoverable=b22LowerNonRecoverable, blade1CPUTable=blade1CPUTable, smmfruBoardPartNumber=smmfruBoardPartNumber, b31FruHotSwapState=b31FruHotSwapState, b22BmcUserAdd=b22BmcUserAdd, blade22SensorTargetEntry=blade22SensorTargetEntry, b13HealthEvents=b13HealthEvents, b29PowerCapping=b29PowerCapping, b7BmcUserpropertychg=b7BmcUserpropertychg, b20WDTBootEnable=b20WDTBootEnable, blade10MemoryTable=blade10MemoryTable, b14BiosBootOption=b14BiosBootOption, b31CPUIndex=b31CPUIndex, blade8DiskEntry=blade8DiskEntry, b23FruLedState=b23FruLedState, b28MezzIndex=b28MezzIndex, hwHardDiskFault=hwHardDiskFault, b8DiskIndex=b8DiskIndex, b1fruNum=b1fruNum, blade8SecretKvmVmmTable=blade8SecretKvmVmmTable, b7Health=b7Health, b15PositiveHysteresis=b15PositiveHysteresis, b19Current=b19Current, b22MezzInfo=b22MezzInfo, b29systemGuid=b29systemGuid, b2MezzIndex=b2MezzIndex, b5MEMLocation=b5MEMLocation, hwCardFault=hwCardFault, b5DiskLocation=b5DiskLocation, b12SensorHealth=b12SensorHealth, blade9FruTable=blade9FruTable, b26SensorType=b26SensorType, b29fruBoardSerialNumber=b29fruBoardSerialNumber, b7SecretVmmKey=b7SecretVmmKey, b32MezzIndex=b32MezzIndex, b31LowerNonRecoverable=b31LowerNonRecoverable, b17LowerCritical=b17LowerCritical, b28BiosCfg=b28BiosCfg, b9DiskMark=b9DiskMark, b5BmcGateway=b5BmcGateway, swi3SensorType=swi3SensorType, b18SensorHealthEvents=b18SensorHealthEvents, blade22DiskTable=blade22DiskTable, swi1NegativeHysteresis=swi1NegativeHysteresis, b1ClearBiosConfig=b1ClearBiosConfig, b24FruLed=b24FruLed, fanTrayFanEntry=fanTrayFanEntry, b20CPUMark=b20CPUMark, b14PositiveHysteresis=b14PositiveHysteresis, b30fruBoardDescription=b30fruBoardDescription, b10Target=b10Target, swi2OTMState=swi2OTMState, smmRemoteSyslogTable=smmRemoteSyslogTable, b15fruNum=b15fruNum, b11DiskMark=b11DiskMark, b18UpperNonRecoverable=b18UpperNonRecoverable, b26UpperNonCritical=b26UpperNonCritical, b17MezzHealth=b17MezzHealth, hwCardPresenceDeassert=hwCardPresenceDeassert, b12BiosBootOption=b12BiosBootOption, b16BmcUserAdd=b16BmcUserAdd, b5Current=b5Current, b24PowerCapping=b24PowerCapping, smmIpMode=smmIpMode, b26BmcUserPasswd=b26BmcUserPasswd, b10BmcUserpropertychg=b10BmcUserpropertychg, swi2BundleVersion=swi2BundleVersion, b25WDTBootEnable=b25WDTBootEnable, b11MACAddress=b11MACAddress, b5BladeVersion=b5BladeVersion, b7ThresholdsAll=b7ThresholdsAll, blade30FruDescriptionEntry=blade30FruDescriptionEntry, b23CPUMark=b23CPUMark, blade18FruLedEntry=blade18FruLedEntry, b25DiskHealth=b25DiskHealth, b4BmcGateway=b4BmcGateway, b1ClearSEL=b1ClearSEL, blade20MezzTable=blade20MezzTable, b29MEMLocation=b29MEMLocation, blade5FruDescriptionEntry=blade5FruDescriptionEntry, b31CPUMark=b31CPUMark, b6MACAddress=b6MACAddress, b32fruBoardDescription=b32fruBoardDescription, b17UpperNonCritical=b17UpperNonCritical, b25SecretKvmVmmIndex=b25SecretKvmVmmIndex, b10MEMPresent=b10MEMPresent, blade20MezzEntry=blade20MezzEntry, b21FRUControl=b21FRUControl, b23UpperCritical=b23UpperCritical, b24WDTBootEnable=b24WDTBootEnable, b31Health=b31Health, b8fruBoardManufactureDate=b8fruBoardManufactureDate, b19ClearBiosConfig=b19ClearBiosConfig, b29CPULocation=b29CPULocation, b13MezzLocation=b13MezzLocation, blade19DiskTable=blade19DiskTable, b21SecretKvmVmmIndex=b21SecretKvmVmmIndex, b29Systeminfo=b29Systeminfo, b18BmcIP=b18BmcIP, b17BmcUserDel=b17BmcUserDel, b29fruBoardManufactureDate=b29fruBoardManufactureDate, b20MezzLocation=b20MezzLocation, b10CPUPresent=b10CPUPresent, b28Target=b28Target, b29fruAll=b29fruAll, b21Presence=b21Presence, b29Current=b29Current)
mibBuilder.exportSymbols("HWSMM-MIB", b18BiosCfg=b18BiosCfg, b21BmcIP=b21BmcIP, blade24MemoryEntry=blade24MemoryEntry, b6MezzHealth=b6MezzHealth, shelfFruDescriptionEntry=shelfFruDescriptionEntry, blade16DiskEntry=blade16DiskEntry, b25DiskLocation=b25DiskLocation, hwPortManagementStatus=hwPortManagementStatus, b25SensorType=b25SensorType, b9ProductName=b9ProductName, hwHotSwaptoM3=hwHotSwaptoM3, b23BmcUserPasswd=b23BmcUserPasswd, blade31FruEntry=blade31FruEntry, b5MezzLocation=b5MezzLocation, smmRemoteSyslogServerAddress=smmRemoteSyslogServerAddress, b6BmcUserPasswd=b6BmcUserPasswd, blade18FruDescriptionTable=blade18FruDescriptionTable, blade21MemoryTable=blade21MemoryTable, swi2PortTargetTable=swi2PortTargetTable, b1SlotBitmap=b1SlotBitmap, b2DiskMark=b2DiskMark, bladeshealtheventsTable=bladeshealtheventsTable, b6BmcUserpropertychg=b6BmcUserpropertychg, b16fruBoardSerialNumber=b16fruBoardSerialNumber, b7ExDiskBoardPresence=b7ExDiskBoardPresence, b16MEMHealth=b16MEMHealth, b7FruLed=b7FruLed, b24Presence=b24Presence, b11CPUInfo=b11CPUInfo, b8Target=b8Target, b28BiosBootOption=b28BiosBootOption, blade8DiskTable=blade8DiskTable, b10FruID=b10FruID, b3MEMInfo=b3MEMInfo, b1PositiveHysteresis=b1PositiveHysteresis, blade3SensorTargetEntry=blade3SensorTargetEntry, b22SecretKvmState=b22SecretKvmState, blade12CPUTable=blade12CPUTable, b2fruProductSerialNumber=b2fruProductSerialNumber, b4FruLedState=b4FruLedState, b27BiosCfg=b27BiosCfg, blade26DiskTable=blade26DiskTable, smmFruLed=smmFruLed, b7BmcGateway=b7BmcGateway, b12CPUMark=b12CPUMark, b12SlotBitmap=b12SlotBitmap, b1ResetReason=b1ResetReason, b16ClearSEL=b16ClearSEL, b25CPUPresent=b25CPUPresent, b28fruProductSerialNumber=b28fruProductSerialNumber, b8fruBoardPartNumber=b8fruBoardPartNumber, blade4SecretKvmVmmEntry=blade4SecretKvmVmmEntry, blade22SecretKvmVmmEntry=blade22SecretKvmVmmEntry, blade11MemoryTable=blade11MemoryTable, b5CPUInfo=b5CPUInfo, blade26FruDescriptionEntry=blade26FruDescriptionEntry, b32SystemProperties=b32SystemProperties, blade18FruEntry=blade18FruEntry, blade7=blade7, b25ExDiskBoardPresence=b25ExDiskBoardPresence, b11fruNumber=b11fruNumber, swi4fruNum=swi4fruNum, b1UpperNonRecoverable=b1UpperNonRecoverable, b29FruHotSwapState=b29FruHotSwapState, hwACPIStatus=hwACPIStatus, blade2FruLedTable=blade2FruLedTable, blade2FruEntry=blade2FruEntry, b4FruLed=b4FruLed, swi3NegativeHysteresis=swi3NegativeHysteresis, b5LowerNonRecoverable=b5LowerNonRecoverable, b2MEMPresent=b2MEMPresent, b28Presence=b28Presence, hwPSPresenceStatus=hwPSPresenceStatus, b18Powerreference=b18Powerreference, swi2fruBoardManufactureDate=swi2fruBoardManufactureDate, b31SensorFRUInfo=b31SensorFRUInfo, b14MMSecretVmmKey=b14MMSecretVmmKey, b25MezzIndex=b25MezzIndex, b28fruBoardManufactureDate=b28fruBoardManufactureDate, blade21CPUTable=blade21CPUTable, b13SecretVmmState=b13SecretVmmState, b19SecretVmmState=b19SecretVmmState, swi3FruVersion=swi3FruVersion, b2BmcGateway=b2BmcGateway, b29fruProductManufacturer=b29fruProductManufacturer, b22MezzPresent=b22MezzPresent, b13PowerState=b13PowerState, b22UpperNonCritical=b22UpperNonCritical, b22MezzMark=b22MezzMark, b24BmcUserDel=b24BmcUserDel, smmDomainDel=smmDomainDel, blade11FruDescriptionEntry=blade11FruDescriptionEntry, b24fruNum=b24fruNum, system=system, hwSensorAccessibleFailDeassert=hwSensorAccessibleFailDeassert, b19DeviceID=b19DeviceID, b25BmcUserPasswd=b25BmcUserPasswd, hwI2cAccessFail=hwI2cAccessFail, b19SensorHealth=b19SensorHealth, hwCPUVoltageMismatch=hwCPUVoltageMismatch, b6ClearBiosConfig=b6ClearBiosConfig, blade21FruDescriptionTable=blade21FruDescriptionTable, blade12SecretKvmVmmTable=blade12SecretKvmVmmTable, b9MezzMac=b9MezzMac, b3fruProductDescription=b3fruProductDescription, b30ThresholdsAll=b30ThresholdsAll, b27ExDiskBoardPresence=b27ExDiskBoardPresence, b18Systeminfo=b18Systeminfo, smmRemoteSyslogServerCA=smmRemoteSyslogServerCA, b24Current=b24Current, b16BmcIP=b16BmcIP, b22DiskPresent=b22DiskPresent, b16Powerreference=b16Powerreference, b16fruProductPartNumber=b16fruProductPartNumber, b27MezzMac=b27MezzMac, b1BiosCfg=b1BiosCfg, b12ProductName=b12ProductName, hwFlashUsageHiMajor=hwFlashUsageHiMajor, blade19SensorTargetTable=blade19SensorTargetTable, hwCPUCfgErrorDeassert=hwCPUCfgErrorDeassert, b26HealthEvents=b26HealthEvents, b32DiskMark=b32DiskMark, b18ExDiskBoardPresence=b18ExDiskBoardPresence, b27MezzMark=b27MezzMark, swi4OTMData=swi4OTMData, b17BmcUserAdd=b17BmcUserAdd, powerState=powerState, b26fruBoardDescription=b26fruBoardDescription, b15MezzPresent=b15MezzPresent, b14MezzPresent=b14MezzPresent, b8fruProductManufacturer=b8fruProductManufacturer, b10MMSecretVmmKey=b10MMSecretVmmKey, hwCertStatusExpiring=hwCertStatusExpiring, b2SlotBitmap=b2SlotBitmap, b12Presence=b12Presence, blade30FruLedEntry=blade30FruLedEntry, b6DiskHealth=b6DiskHealth, b13DiskInfo=b13DiskInfo, b24RealTimePower=b24RealTimePower, b2CPULocation=b2CPULocation, b31CPULocation=b31CPULocation, b14ThresholdsAll=b14ThresholdsAll, b18MezzPresent=b18MezzPresent, blade20FruTable=blade20FruTable, swi4PortNum=swi4PortNum, smmNetworkConfigTable=smmNetworkConfigTable, b1SensorHealthEvents=b1SensorHealthEvents, b24fruBoardSerialNumber=b24fruBoardSerialNumber, b13MEMIndex=b13MEMIndex, b17PositiveHysteresis=b17PositiveHysteresis, b14fruBoardManufactureDate=b14fruBoardManufactureDate, b32fruProductSerialNumber=b32fruProductSerialNumber, b7MEMPresent=b7MEMPresent, fanUpdate=fanUpdate, smmUpperCritical=smmUpperCritical, b25fruNumber=b25fruNumber, swi2Target=swi2Target, b9FruLedState=b9FruLedState, b14LowerNonCritical=b14LowerNonCritical, smmEthMac=smmEthMac, b32LowerNonCritical=b32LowerNonCritical, b21LowerNonCritical=b21LowerNonCritical, b26fruBoardSerialNumber=b26fruBoardSerialNumber, b16MEMPresent=b16MEMPresent, blade2FruDescriptionEntry=blade2FruDescriptionEntry, blade11DiskTable=blade11DiskTable, swi1FruLedEntry=swi1FruLedEntry, b1fruProductRevision=b1fruProductRevision, b12MEMMark=b12MEMMark, b21MMSecretVmmKey=b21MMSecretVmmKey, b6ClearSEL=b6ClearSEL, b12PowerState=b12PowerState, b28Powerreference=b28Powerreference, b17CPUPresent=b17CPUPresent, b25FruID=b25FruID, b13DiskHealth=b13DiskHealth, b13DeviceID=b13DeviceID, b25UpperNonRecoverable=b25UpperNonRecoverable, blade30MemoryTable=blade30MemoryTable, b15BmcUserpropertychg=b15BmcUserpropertychg, blade28SensorTargetTable=blade28SensorTargetTable, b16fruNumber=b16fruNumber, b32systemGuid=b32systemGuid, b26DiskPresent=b26DiskPresent, b27LowerCritical=b27LowerCritical, b21Current=b21Current, swi1SensorTargetEntry=swi1SensorTargetEntry, b16BiosCfg=b16BiosCfg, b19Health=b19Health, b27ResetReason=b27ResetReason, blade15CPUEntry=blade15CPUEntry, hwLswFailDeassert=hwLswFailDeassert, b5FruLedState=b5FruLedState, b16HealthEvents=b16HealthEvents, b3MezzInfo=b3MezzInfo, blade11SecretKvmVmmTable=blade11SecretKvmVmmTable, b30fruAll=b30fruAll, smmSNMPTrapAddress1=smmSNMPTrapAddress1, shelfChassisName=shelfChassisName, b30fruProductPartNumber=b30fruProductPartNumber, hwSysEvent=hwSysEvent, blade2DiskTable=blade2DiskTable, b29fruBoardPartNumber=b29fruBoardPartNumber, b15NegativeHysteresis=b15NegativeHysteresis, b23fruProductManufacturer=b23fruProductManufacturer, blade12MezzTable=blade12MezzTable, blade15FruTable=blade15FruTable, b28SystemProperties=b28SystemProperties, blade27DiskEntry=blade27DiskEntry, b13MEMInfo=b13MEMInfo, hwSysRestartRestorePrevState=hwSysRestartRestorePrevState, swi1FruHotSwapState=swi1FruHotSwapState, blade8SensorTargetEntry=blade8SensorTargetEntry, hwCorrectableECCDeassert=hwCorrectableECCDeassert, blade6DiskTable=blade6DiskTable, b20BundleVersion=b20BundleVersion, b23MEMMark=b23MEMMark, b5FruLedProperties=b5FruLedProperties, blade6MezzTable=blade6MezzTable, b6SlotBitmap=b6SlotBitmap, b23fruNumber=b23fruNumber, b30UpperNonRecoverable=b30UpperNonRecoverable, b28BmcGateway=b28BmcGateway, b5MezzMac=b5MezzMac, swi2SensorFRUInfo=swi2SensorFRUInfo, b9ThresholdsAll=b9ThresholdsAll, b24MezzHealth=b24MezzHealth, b10MezzIndex=b10MezzIndex, b15FruLedProperties=b15FruLedProperties, blade19FruDescriptionTable=blade19FruDescriptionTable, b26SensorHealth=b26SensorHealth, b12MMSecretVmmKey=b12MMSecretVmmKey, b29MezzHealth=b29MezzHealth, b15ProductName=b15ProductName, b3FRULabel=b3FRULabel, b30DiskInfo=b30DiskInfo, b19DiskPresent=b19DiskPresent, b14BmcUserDel=b14BmcUserDel, b4FruLedColorProps=b4FruLedColorProps, b26BmcUserpropertychg=b26BmcUserpropertychg, b23DiskIndex=b23DiskIndex, blade32FruTable=blade32FruTable, b12DiskIndex=b12DiskIndex, b13SlotBitmap=b13SlotBitmap, blade27FruTable=blade27FruTable, b4LowerNonRecoverable=b4LowerNonRecoverable, b1FruHotSwapState=b1FruHotSwapState, hwOverVoltage=hwOverVoltage, b32ResetReason=b32ResetReason, b32FruID=b32FruID, swi2SensorType=swi2SensorType, hwACPIStatusS0=hwACPIStatusS0, b8MEMMark=b8MEMMark, swi2UpperNonCritical=swi2UpperNonCritical)
mibBuilder.exportSymbols("HWSMM-MIB", b32BiosBootOption=b32BiosBootOption, b28LowerNonCritical=b28LowerNonCritical, b8CPUInfo=b8CPUInfo, b23SecretKvmState=b23SecretKvmState, swi3fruProductManufacturer=swi3fruProductManufacturer, blade7MezzEntry=blade7MezzEntry, b5MezzHealth=b5MezzHealth, b19LowerCritical=b19LowerCritical, b7BmcIP=b7BmcIP, hwSMM=hwSMM, swi4PortTargetTable=swi4PortTargetTable, blade29MezzTable=blade29MezzTable, b25HealthEvents=b25HealthEvents, b28CPUIndex=b28CPUIndex, b18SlotBitmap=b18SlotBitmap, blade19MemoryTable=blade19MemoryTable, swi3UpperCritical=swi3UpperCritical, b7UpperNonCritical=b7UpperNonCritical, blade5FruEntry=blade5FruEntry, blade25FruDescriptionEntry=blade25FruDescriptionEntry, blade8SensorTargetTable=blade8SensorTargetTable, b13SensorHealthEvents=b13SensorHealthEvents, b10SensorFRUInfo=b10SensorFRUInfo, b8FRUControl=b8FRUControl, b4UpperNonRecoverable=b4UpperNonRecoverable, b30BladeVersion=b30BladeVersion, hwCPUCATErrorDeassert=hwCPUCATErrorDeassert, b29ProductName=b29ProductName, blade15=blade15, b13PowerCapping=b13PowerCapping, b5fruProductPartNumber=b5fruProductPartNumber, blade30MezzEntry=blade30MezzEntry, b5MACAddress=b5MACAddress, b21PowerState=b21PowerState, b24DiskMark=b24DiskMark, hwHotSwap=hwHotSwap, b19ResetReason=b19ResetReason, b30SecretVmmState=b30SecretVmmState, b8BmcIP=b8BmcIP, b21fruProductSerialNumber=b21fruProductSerialNumber, b8BiosCfg=b8BiosCfg, smmLCDUIDled=smmLCDUIDled, smmUserIntfAuth=smmUserIntfAuth, b15FRULabel=b15FRULabel, smmUseradd=smmUseradd, swi2ThresholdsAll=swi2ThresholdsAll, smmUniteLoad=smmUniteLoad, blade5DiskEntry=blade5DiskEntry, b3FruLed=b3FruLed, blade26CPUEntry=blade26CPUEntry, b9MezzIndex=b9MezzIndex, b30FRULabel=b30FRULabel, b6LowerNonCritical=b6LowerNonCritical, b13BladeVersion=b13BladeVersion, swi3PortTargetTable=swi3PortTargetTable, b18DiskHealth=b18DiskHealth, b23BiosBootOption=b23BiosBootOption, hwSysRestartChassisCtrl=hwSysRestartChassisCtrl, blade25MemoryTable=blade25MemoryTable, b10fruNum=b10fruNum, b23FRUControl=b23FRUControl, b32ThresholdsAll=b32ThresholdsAll, b23Powerreference=b23Powerreference, b12UpperNonCritical=b12UpperNonCritical, swi1FcPortConn=swi1FcPortConn, b14Safepwofftime=b14Safepwofftime, swi4FruDescriptionTable=swi4FruDescriptionTable, blade7FruDescriptionTable=blade7FruDescriptionTable, b17fruProductPartNumber=b17fruProductPartNumber, b13MEMLocation=b13MEMLocation, blade16MemoryTable=blade16MemoryTable, b5SensorHealth=b5SensorHealth, smmSensorTargetEntry=smmSensorTargetEntry, b15DiskLocation=b15DiskLocation, hwTrapChassisSerial=hwTrapChassisSerial, b2FruLed=b2FruLed, blade19SecretKvmVmmTable=blade19SecretKvmVmmTable, b29LowerCritical=b29LowerCritical, b8Powerreference=b8Powerreference, hwManagmentControllerUnaccessible=hwManagmentControllerUnaccessible, b8SecretKvmState=b8SecretKvmState, b13LowerNonRecoverable=b13LowerNonRecoverable, hwPhyPortFaultDeassert=hwPhyPortFaultDeassert, b7SensorHealth=b7SensorHealth, hwMemorySpare=hwMemorySpare, b31MEMIndex=b31MEMIndex, b11fruProductDescription=b11fruProductDescription, b30BundleVersion=b30BundleVersion, b15ResetReason=b15ResetReason, b5fruProductRevision=b5fruProductRevision, b22DeviceID=b22DeviceID, b19MACAddress=b19MACAddress, b29UpperCritical=b29UpperCritical, b2fruProductManufacturer=b2fruProductManufacturer, b12fruProductManufacturer=b12fruProductManufacturer, b19FruLedState=b19FruLedState, smmGateway=smmGateway, b10fruBoardDescription=b10fruBoardDescription, smmRemoteSyslogProtocol=smmRemoteSyslogProtocol, b3BiosBootOption=b3BiosBootOption, b28ThresholdsAll=b28ThresholdsAll, b19FRUControl=b19FRUControl, b23BiosCfg=b23BiosCfg, b14PowerState=b14PowerState, b14fruProductDescription=b14fruProductDescription, b17CPULocation=b17CPULocation, swi1FruDescriptionEntry=swi1FruDescriptionEntry, swi1SWIPControl=swi1SWIPControl, swi4PortState=swi4PortState, b27UpperCritical=b27UpperCritical, b21MezzIndex=b21MezzIndex, b21FruID=b21FruID, b19BladeVersion=b19BladeVersion, b30Current=b30Current, b23FruLedProperties=b23FruLedProperties, hwNoBootableDisk=hwNoBootableDisk, b19fruNum=b19fruNum, blade10MezzEntry=blade10MezzEntry, b23LowerNonCritical=b23LowerNonCritical, hwSensorAccessibleFail=hwSensorAccessibleFail, b16SecretVmmKey=b16SecretVmmKey, b13BmcUserpropertychg=b13BmcUserpropertychg, b3UpperCritical=b3UpperCritical, b11BmcUserAdd=b11BmcUserAdd, b14MEMIndex=b14MEMIndex, b1DiskLocation=b1DiskLocation, b12DiskMark=b12DiskMark, b14SensorHealthEvents=b14SensorHealthEvents, b7MezzInfo=b7MezzInfo, b1MEMIndex=b1MEMIndex, b25Presence=b25Presence, b13Target=b13Target, b2Health=b2Health, blade21SensorTargetEntry=blade21SensorTargetEntry, b12BmcUserpropertychg=b12BmcUserpropertychg, b20PowerCapping=b20PowerCapping, blade16FruDescriptionTable=blade16FruDescriptionTable, b3Presence=b3Presence, hwSysRestartPowerButton=hwSysRestartPowerButton, b18LowerCritical=b18LowerCritical, swi3FruLedEntry=swi3FruLedEntry, blade6SensorTargetEntry=blade6SensorTargetEntry, b16MEMLocation=b16MEMLocation, b3WDTBootEnable=b3WDTBootEnable, b3SecretKvmVmmIndex=b3SecretKvmVmmIndex, b21DiskMark=b21DiskMark, b8MEMIndex=b8MEMIndex, b15SensorFRUInfo=b15SensorFRUInfo, b28fruBoardManufacturer=b28fruBoardManufacturer, b24CPULocation=b24CPULocation, b2LowerCritical=b2LowerCritical, b23ClearBiosConfig=b23ClearBiosConfig, swi2SensorTargetEntry=swi2SensorTargetEntry, b25FruLedState=b25FruLedState, blade6FruDescriptionEntry=blade6FruDescriptionEntry, swi3fruNum=swi3fruNum, blade13SensorTargetTable=blade13SensorTargetTable, swi1ConfigSupport=swi1ConfigSupport, b4DiskIndex=b4DiskIndex, blade24MezzTable=blade24MezzTable, b20Current=b20Current, b23fruBoardSerialNumber=b23fruBoardSerialNumber, blade4SecretKvmVmmTable=blade4SecretKvmVmmTable, b1Powerreference=b1Powerreference, b3MEMMark=b3MEMMark, b30DiskPresent=b30DiskPresent, b17Current=b17Current, b22BmcUserPasswd=b22BmcUserPasswd, b12MEMInfo=b12MEMInfo, b7NegativeHysteresis=b7NegativeHysteresis, b20fruAll=b20fruAll, b25fruProductPartNumber=b25fruProductPartNumber, hwRAIDArrayFail=hwRAIDArrayFail, hwWatchDogReset=hwWatchDogReset, b30CPUInfo=b30CPUInfo, b17SecretVmmState=b17SecretVmmState, swi3VLanIfIP=swi3VLanIfIP, b23CPUPresent=b23CPUPresent, b14CPULocation=b14CPULocation, blade29SecretKvmVmmTable=blade29SecretKvmVmmTable, b22Safepwofftime=b22Safepwofftime, blade2SensorTargetTable=blade2SensorTargetTable, blade8MemoryEntry=blade8MemoryEntry, b1BladeVersion=b1BladeVersion, b16SensorType=b16SensorType, b20BmcUserAdd=b20BmcUserAdd, b12fruBoardDescription=b12fruBoardDescription, b6FruLedProperties=b6FruLedProperties, b14Health=b14Health, smmFloatIpAddr=smmFloatIpAddr, blade16DiskTable=blade16DiskTable, b9FruID=b9FruID, hwVoltLoMinor=hwVoltLoMinor, b31MEMLocation=b31MEMLocation, b19UpperNonCritical=b19UpperNonCritical, b24UpperNonRecoverable=b24UpperNonRecoverable, b9fruProductDescription=b9fruProductDescription, hwHardwareAddrFaultDeassert=hwHardwareAddrFaultDeassert, b31fruNumber=b31fruNumber, swi3Target=swi3Target, b30MEMIndex=b30MEMIndex, b31FruLedColorProps=b31FruLedColorProps, smmFruTable=smmFruTable, hwSysRestartWatchdogCtrl=hwSysRestartWatchdogCtrl, blade25SensorTargetEntry=blade25SensorTargetEntry, b30BmcIP=b30BmcIP, swi4Target=swi4Target, b8SlotBitmap=b8SlotBitmap, blade2SecretKvmVmmEntry=blade2SecretKvmVmmEntry, b21FruLedProperties=b21FruLedProperties, blade20FruDescriptionEntry=blade20FruDescriptionEntry, b7RealTimePower=b7RealTimePower, b11PowerState=b11PowerState, b32fruBoardManufactureDate=b32fruBoardManufactureDate, swi2fruProductRevision=swi2fruProductRevision, b10NegativeHysteresis=b10NegativeHysteresis, b28MezzHealth=b28MezzHealth, b32MMSecretVmmKey=b32MMSecretVmmKey, swi4Health=swi4Health, b9BiosBootOption=b9BiosBootOption, b30BiosCfg=b30BiosCfg, b11DiskLocation=b11DiskLocation, blade7CPUEntry=blade7CPUEntry, b2FruLedState=b2FruLedState, b15BmcUserPasswd=b15BmcUserPasswd, smmCurrent=smmCurrent, b15Current=b15Current, blade10SensorTargetEntry=blade10SensorTargetEntry, hwMngmntHealth=hwMngmntHealth, b15fruBoardSerialNumber=b15fruBoardSerialNumber, b10DeviceID=b10DeviceID, b5fruBoardSerialNumber=b5fruBoardSerialNumber, b5FruHotSwapState=b5FruHotSwapState, blade17SensorTargetTable=blade17SensorTargetTable, b24DiskLocation=b24DiskLocation, swi3FruLedTable=swi3FruLedTable, b6ThresholdsAll=b6ThresholdsAll, b10UpperNonCritical=b10UpperNonCritical, b9DiskHealth=b9DiskHealth, swi1fruProductRevision=swi1fruProductRevision, b17fruNum=b17fruNum, b8fruProductSerialNumber=b8fruProductSerialNumber, blade14DiskEntry=blade14DiskEntry, swi4ThresholdsAll=swi4ThresholdsAll, b31MEMHealth=b31MEMHealth, b30MezzInfo=b30MezzInfo, b12FRULabel=b12FRULabel, b11MEMLocation=b11MEMLocation, b31UpperNonRecoverable=b31UpperNonRecoverable, b25SlotBitmap=b25SlotBitmap, blade12FruLedTable=blade12FruLedTable, b18Current=b18Current, b16SystemProperties=b16SystemProperties, b27systemGuid=b27systemGuid)
mibBuilder.exportSymbols("HWSMM-MIB", swi3ProductName=swi3ProductName, blade30CPUTable=blade30CPUTable, blade14FruLedTable=blade14FruLedTable, b8systemGuid=b8systemGuid, b27DiskMark=b27DiskMark, b28fruProductPartNumber=b28fruProductPartNumber, b27fruBoardPartNumber=b27fruBoardPartNumber, b2CPUPresent=b2CPUPresent, b14HealthEvents=b14HealthEvents, b19HealthEvents=b19HealthEvents, b20CPUHealth=b20CPUHealth, swi3OTMState=swi3OTMState, blade14CPUEntry=blade14CPUEntry, b24systemGuid=b24systemGuid, b11BmcUserPasswd=b11BmcUserPasswd, b22fruBoardSerialNumber=b22fruBoardSerialNumber, b23BmcUserAdd=b23BmcUserAdd, b5DiskMark=b5DiskMark, hwTrapSeverity=hwTrapSeverity, b7fruProductDescription=b7fruProductDescription, hwHotSwaptoM7=hwHotSwaptoM7, smmPowerOnInterval=smmPowerOnInterval, hwCPURateStatus=hwCPURateStatus, b14Target=b14Target, b31fruProductManufacturer=b31fruProductManufacturer, b29ThresholdsAll=b29ThresholdsAll, b25MezzLocation=b25MezzLocation, smmHealthEvents=smmHealthEvents, b29Presence=b29Presence, b12fruBoardManufactureDate=b12fruBoardManufactureDate, b8DiskLocation=b8DiskLocation, blade30SecretKvmVmmEntry=blade30SecretKvmVmmEntry, swi1fruBoardManufactureDate=swi1fruBoardManufactureDate, b14CPUIndex=b14CPUIndex, powerSwitch=powerSwitch, b24BiosCfg=b24BiosCfg, b9SecretKvmVmmIndex=b9SecretKvmVmmIndex, hwVersionChange=hwVersionChange, blade14CPUTable=blade14CPUTable, b17UpperNonRecoverable=b17UpperNonRecoverable, b18FruLed=b18FruLed, b5MEMPresent=b5MEMPresent, b26Systeminfo=b26Systeminfo, hwDeviceFault=hwDeviceFault, blade17MemoryEntry=blade17MemoryEntry, b19fruAll=b19fruAll, swi1StackState=swi1StackState, b6Target=b6Target, b3DiskMark=b3DiskMark, b24SecretVmmKey=b24SecretVmmKey, b23MezzIndex=b23MezzIndex, smmDomainCreate=smmDomainCreate, b16fruProductSerialNumber=b16fruProductSerialNumber, b22ResetReason=b22ResetReason, b17fruProductManufacturer=b17fruProductManufacturer, blade23SecretKvmVmmEntry=blade23SecretKvmVmmEntry, b14MEMLocation=b14MEMLocation, products=products, b29DiskLocation=b29DiskLocation, b14DiskPresent=b14DiskPresent, b16CPUIndex=b16CPUIndex, b7SecretKvmState=b7SecretKvmState, b29MACAddress=b29MACAddress, blade28FruDescriptionEntry=blade28FruDescriptionEntry, b32DeviceID=b32DeviceID, b12FruLedProperties=b12FruLedProperties, swi2PortName=swi2PortName, swi4Gateway=swi4Gateway, b16SensorHealth=b16SensorHealth, b9MezzInfo=b9MezzInfo, blade3MemoryEntry=blade3MemoryEntry, b28ResetReason=b28ResetReason, b13Current=b13Current, b29CPUInfo=b29CPUInfo, b27LowerNonRecoverable=b27LowerNonRecoverable, b10MezzLocation=b10MezzLocation, shelfPsuSleepConfig=shelfPsuSleepConfig, b18LowerNonRecoverable=b18LowerNonRecoverable, b30MEMPresent=b30MEMPresent, b6ResetReason=b6ResetReason, b32SensorType=b32SensorType, hwCPURate=hwCPURate, hwSysRestartAlwaysRestore=hwSysRestartAlwaysRestore, b18ClearSEL=b18ClearSEL, b27Presence=b27Presence, b11SensorHealth=b11SensorHealth, b13CPUHealth=b13CPUHealth, b3CPULocation=b3CPULocation, powerPresence=powerPresence, blade26SensorTargetTable=blade26SensorTargetTable, b6FruLed=b6FruLed, blade24FruTable=blade24FruTable, b22CPUIndex=b22CPUIndex, b24MezzPresent=b24MezzPresent, b24Target=b24Target, b31WDTBootEnable=b31WDTBootEnable, b15MezzIndex=b15MezzIndex, blade4FruTable=blade4FruTable, pemsPowerTable=pemsPowerTable, b10fruAll=b10fruAll, hwHardwareIncompatibility=hwHardwareIncompatibility, b16MezzMac=b16MezzMac, blades=blades, blade13SecretKvmVmmTable=blade13SecretKvmVmmTable, b13Safepwofftime=b13Safepwofftime, swi3OTMInfo=swi3OTMInfo, b10MezzMac=b10MezzMac, blade14MemoryEntry=blade14MemoryEntry, b32CPUHealth=b32CPUHealth, b15UpperNonCritical=b15UpperNonCritical, b1Target=b1Target, b31RealTimePower=b31RealTimePower, b20BiosBootOption=b20BiosBootOption, b25LowerNonCritical=b25LowerNonCritical, b30SensorFRUInfo=b30SensorFRUInfo, b13CPUMark=b13CPUMark, b1fruBoardManufactureDate=b1fruBoardManufactureDate, b18FruHotSwapState=b18FruHotSwapState, b15PowerCapping=b15PowerCapping, blade4=blade4, b29MezzMac=b29MezzMac, b15SecretKvmState=b15SecretKvmState, b30SensorHealth=b30SensorHealth, b12ResetReason=b12ResetReason, b7MEMInfo=b7MEMInfo, b15MezzHealth=b15MezzHealth, b5LowerCritical=b5LowerCritical, huawei=huawei, b9DiskInfo=b9DiskInfo, b32SecretKvmState=b32SecretKvmState, blade11=blade11, b10ThresholdsAll=b10ThresholdsAll, blade15FruDescriptionEntry=blade15FruDescriptionEntry, b14SystemProperties=b14SystemProperties, b8MEMHealth=b8MEMHealth, b32Health=b32Health, b19BmcUserpropertychg=b19BmcUserpropertychg, b24ThresholdsAll=b24ThresholdsAll, b28fruNumber=b28fruNumber, b11ThresholdsAll=b11ThresholdsAll, b3SensorFRUInfo=b3SensorFRUInfo, b11SensorFRUInfo=b11SensorFRUInfo, hwCardStatusFault=hwCardStatusFault, b32PowerCapping=b32PowerCapping, swi1FruLedState=swi1FruLedState, b13MezzPresent=b13MezzPresent, blade19SecretKvmVmmEntry=blade19SecretKvmVmmEntry, b15fruProductSerialNumber=b15fruProductSerialNumber, b32MEMMark=b32MEMMark, swi1VLanIfIP=swi1VLanIfIP, hwI2cClockDriveHiUnable=hwI2cClockDriveHiUnable, b15PowerState=b15PowerState, shelfPartNumber=shelfPartNumber, b10PowerState=b10PowerState, blade25FruEntry=blade25FruEntry, shelfRmvAlarmState=shelfRmvAlarmState, b5MMSecretVmmKey=b5MMSecretVmmKey, hwLowPowerDeassert=hwLowPowerDeassert, b1RealTimePower=b1RealTimePower, blade26FruLedEntry=blade26FruLedEntry, b28SlotBitmap=b28SlotBitmap, b12fruNumber=b12fruNumber, b21FruLed=b21FruLed, b14fruNum=b14fruNum, b30PowerCapping=b30PowerCapping, b1SecretKvmVmmIndex=b1SecretKvmVmmIndex, b30LowerNonCritical=b30LowerNonCritical, blade24MezzEntry=blade24MezzEntry, b13MezzInfo=b13MezzInfo, hwHotSwaptoM7Deassert=hwHotSwaptoM7Deassert, b29BundleVersion=b29BundleVersion, b6MEMIndex=b6MEMIndex, blade30MezzTable=blade30MezzTable, b20NegativeHysteresis=b20NegativeHysteresis, b20fruNum=b20fruNum, blade21FruLedEntry=blade21FruLedEntry, b10BiosBootOption=b10BiosBootOption, swi2VLanIfIP=swi2VLanIfIP, b24MEMMark=b24MEMMark, b13fruProductRevision=b13fruProductRevision, b27UpperNonCritical=b27UpperNonCritical, b2BladeVersion=b2BladeVersion, b22fruProductRevision=b22fruProductRevision, swi3Current=swi3Current, b15CPUIndex=b15CPUIndex, b28LowerNonRecoverable=b28LowerNonRecoverable, blade17FruTable=blade17FruTable, b20Health=b20Health, b3BmcIP=b3BmcIP, b21DiskHealth=b21DiskHealth, swi2ProductName=swi2ProductName, hwSysRestartUnknown=hwSysRestartUnknown, b30MACAddress=b30MACAddress, b8LowerNonCritical=b8LowerNonCritical, b8fruProductRevision=b8fruProductRevision, b7Systeminfo=b7Systeminfo, swi2UpperNonRecoverable=swi2UpperNonRecoverable, b3systemGuid=b3systemGuid, hwPortManagementFailDeassert=hwPortManagementFailDeassert, b11fruNum=b11fruNum, b9UpperCritical=b9UpperCritical, b6fruProductDescription=b6fruProductDescription, b5ClearSEL=b5ClearSEL, b16MezzInfo=b16MezzInfo, b7DiskLocation=b7DiskLocation, b19BmcGateway=b19BmcGateway, b12Safepwofftime=b12Safepwofftime, b2PowerCapping=b2PowerCapping, hwHotSwaptoM6=hwHotSwaptoM6, b17ProductName=b17ProductName, b14fruBoardPartNumber=b14fruBoardPartNumber, b28CPULocation=b28CPULocation, b24FruLedColorProps=b24FruLedColorProps, b12CPUInfo=b12CPUInfo, b6NegativeHysteresis=b6NegativeHysteresis, b5DeviceID=b5DeviceID, blade16FruEntry=blade16FruEntry, b32ClearBiosConfig=b32ClearBiosConfig, swi2LowerNonCritical=swi2LowerNonCritical, b5BmcUserpropertychg=b5BmcUserpropertychg, b24PowerState=b24PowerState, blade18CPUEntry=blade18CPUEntry, b20FruID=b20FruID, b18fruProductManufacturer=b18fruProductManufacturer, swi1FruTable=swi1FruTable, b7FRULabel=b7FRULabel, b22LowerCritical=b22LowerCritical, b25ThresholdsAll=b25ThresholdsAll, swi1Current=swi1Current, b11MEMInfo=b11MEMInfo, hwI2cClockDriveHiUnableDeassert=hwI2cClockDriveHiUnableDeassert, b6MEMHealth=b6MEMHealth, b2ClearBiosConfig=b2ClearBiosConfig, b32PowerState=b32PowerState, blade9DiskTable=blade9DiskTable, b30CPULocation=b30CPULocation, b17fruBoardSerialNumber=b17fruBoardSerialNumber, b8FruHotSwapState=b8FruHotSwapState, blade17MezzTable=blade17MezzTable, b6MEMMark=b6MEMMark, b12MezzInfo=b12MezzInfo, blade17MezzEntry=blade17MezzEntry, b2MEMHealth=b2MEMHealth, blade17DiskEntry=blade17DiskEntry, b10CPUIndex=b10CPUIndex, blade14FruDescriptionEntry=blade14FruDescriptionEntry, b22FruID=b22FruID, blade22MemoryEntry=blade22MemoryEntry, swi2ConfigInfo=swi2ConfigInfo, b21DiskPresent=b21DiskPresent, smmSensorHealthEvents=smmSensorHealthEvents, blade13DiskEntry=blade13DiskEntry, b21MEMIndex=b21MEMIndex, b3MezzPresent=b3MezzPresent)
mibBuilder.exportSymbols("HWSMM-MIB", b26FruID=b26FruID, b30CPUHealth=b30CPUHealth, b21UpperCritical=b21UpperCritical, blade32=blade32, b27DiskPresent=b27DiskPresent, swi4ConfigInfo=swi4ConfigInfo, b24fruProductManufacturer=b24fruProductManufacturer, swi2PositiveHysteresis=swi2PositiveHysteresis, b13ResetReason=b13ResetReason, blade5SensorTargetEntry=blade5SensorTargetEntry, b32FruHotSwapState=b32FruHotSwapState, hwOSTA=hwOSTA, hwCertStatusExpiringDeassert=hwCertStatusExpiringDeassert, swi2PortNum=swi2PortNum, b32fruBoardManufacturer=b32fruBoardManufacturer, blade5FruDescriptionTable=blade5FruDescriptionTable, b14MACAddress=b14MACAddress, b23FruHotSwapState=b23FruHotSwapState, swi3SensorTargetTable=swi3SensorTargetTable, b23UpperNonCritical=b23UpperNonCritical, b32HealthEvents=b32HealthEvents, b13MEMHealth=b13MEMHealth, b26MMSecretVmmKey=b26MMSecretVmmKey, swi=swi, b16MMSecretVmmKey=b16MMSecretVmmKey, b6MezzPresent=b6MezzPresent, b28ClearSEL=b28ClearSEL, b9SensorHealthEvents=b9SensorHealthEvents, b30NegativeHysteresis=b30NegativeHysteresis, b12FruLed=b12FruLed, b2SecretVmmState=b2SecretVmmState, blade7SensorTargetEntry=blade7SensorTargetEntry, b28DiskPresent=b28DiskPresent, b23fruBoardManufactureDate=b23fruBoardManufactureDate, b9BmcUserpropertychg=b9BmcUserpropertychg, b26DiskHealth=b26DiskHealth, b6MezzInfo=b6MezzInfo, b30BmcUserAdd=b30BmcUserAdd, b24MEMPresent=b24MEMPresent, hwCPU=hwCPU, swi4fruProductDescription=swi4fruProductDescription, b13FruLedColorProps=b13FruLedColorProps, b31MezzInfo=b31MezzInfo, b27SecretKvmState=b27SecretKvmState, b26BmcUserAdd=b26BmcUserAdd, b13UpperCritical=b13UpperCritical, b14DiskMark=b14DiskMark, b25SensorFRUInfo=b25SensorFRUInfo, b24MezzInfo=b24MezzInfo, b20BiosCfg=b20BiosCfg, b14MEMPresent=b14MEMPresent, swi3ConfigSupport=swi3ConfigSupport, blade13SensorTargetEntry=blade13SensorTargetEntry, b13ThresholdsAll=b13ThresholdsAll, blade20CPUTable=blade20CPUTable, b21DiskLocation=b21DiskLocation, blade13MezzEntry=blade13MezzEntry, b25ClearBiosConfig=b25ClearBiosConfig, b16DiskIndex=b16DiskIndex, b12UpperNonRecoverable=b12UpperNonRecoverable, b20fruBoardManufacturer=b20fruBoardManufacturer, blade12DiskTable=blade12DiskTable, b14WDTBootEnable=b14WDTBootEnable, blade12MezzEntry=blade12MezzEntry, blade9SensorTargetTable=blade9SensorTargetTable, b1HealthEvents=b1HealthEvents, b18MMSecretVmmKey=b18MMSecretVmmKey, hwWatchDog=hwWatchDog, b5MEMMark=b5MEMMark, b1SensorType=b1SensorType, b24CPUInfo=b24CPUInfo, blade18DiskEntry=blade18DiskEntry, b11FruLedState=b11FruLedState, b2BmcIP=b2BmcIP, swi1OTMState=swi1OTMState, b12fruBoardSerialNumber=b12fruBoardSerialNumber, b24fruProductRevision=b24fruProductRevision, b21MEMLocation=b21MEMLocation, b22SecretVmmState=b22SecretVmmState, hwBattery=hwBattery, b28UpperNonCritical=b28UpperNonCritical, swi2SensorHealthEvents=swi2SensorHealthEvents, b10BundleVersion=b10BundleVersion, blade20FruLedEntry=blade20FruLedEntry, b26SecretKvmVmmIndex=b26SecretKvmVmmIndex, b28fruBoardDescription=b28fruBoardDescription, hwPowerButtonPressed=hwPowerButtonPressed, b10SlotBitmap=b10SlotBitmap, blade11CPUEntry=blade11CPUEntry, b12LowerNonRecoverable=b12LowerNonRecoverable, b21WDTBootEnable=b21WDTBootEnable, b28PowerState=b28PowerState, blade3FruDescriptionTable=blade3FruDescriptionTable, b18ThresholdsAll=b18ThresholdsAll, blade7FruTable=blade7FruTable, b26MezzHealth=b26MezzHealth, b8MezzHealth=b8MezzHealth, b23CPULocation=b23CPULocation, b11fruProductRevision=b11fruProductRevision, b2fruProductRevision=b2fruProductRevision, swi1Gateway=swi1Gateway, b25SecretVmmState=b25SecretVmmState, b24fruNumber=b24fruNumber, b8BiosBootOption=b8BiosBootOption, b15Target=b15Target, b2MezzMark=b2MezzMark, hwCPUCorrectableMachineCheckErrDeassert=hwCPUCorrectableMachineCheckErrDeassert, b14MEMMark=b14MEMMark, b15BmcGateway=b15BmcGateway, b20BmcUserpropertychg=b20BmcUserpropertychg, b26fruProductManufacturer=b26fruProductManufacturer, b27fruProductRevision=b27fruProductRevision, b31BmcUserAdd=b31BmcUserAdd, b19fruProductRevision=b19fruProductRevision, b12SystemProperties=b12SystemProperties, swi4SensorHealth=swi4SensorHealth, b9BiosCfg=b9BiosCfg, b17CPUIndex=b17CPUIndex, b9BmcUserDel=b9BmcUserDel, blade30SensorTargetEntry=blade30SensorTargetEntry, b7MMSecretVmmKey=b7MMSecretVmmKey, b24BmcUserAdd=b24BmcUserAdd, blade28MezzEntry=blade28MezzEntry, b20systemGuid=b20systemGuid, b12BiosCfg=b12BiosCfg, b30Health=b30Health, smmDNSServerip=smmDNSServerip, b27ProductName=b27ProductName, b4BmcUserPasswd=b4BmcUserPasswd, b26DiskLocation=b26DiskLocation, blade3DiskTable=blade3DiskTable, b22MEMHealth=b22MEMHealth, b26Safepwofftime=b26Safepwofftime, b31MezzMac=b31MezzMac, blade22SecretKvmVmmTable=blade22SecretKvmVmmTable, b20MezzMac=b20MezzMac, b31BmcIP=b31BmcIP, b21MEMPresent=b21MEMPresent, b22fruNum=b22fruNum, b4Target=b4Target, b3MEMHealth=b3MEMHealth, b22SecretVmmKey=b22SecretVmmKey, b1SecretVmmKey=b1SecretVmmKey, b14FruLedColorProps=b14FruLedColorProps, b32SensorHealthEvents=b32SensorHealthEvents, b32CPUPresent=b32CPUPresent, b22Systeminfo=b22Systeminfo, b25ClearSEL=b25ClearSEL, b3Health=b3Health, b31SensorHealthEvents=b31SensorHealthEvents, smmNTPEnable=smmNTPEnable, b22SensorHealth=b22SensorHealth, b25MACAddress=b25MACAddress, swi3FruLedState=swi3FruLedState, hwVoltHiMajor=hwVoltHiMajor, b7BladeVersion=b7BladeVersion, b4BmcUserDel=b4BmcUserDel, b8MEMInfo=b8MEMInfo, hwBootError=hwBootError, b20fruNumber=b20fruNumber, b17SensorFRUInfo=b17SensorFRUInfo, b28MEMHealth=b28MEMHealth, b31MEMPresent=b31MEMPresent, swi2fruBoardDescription=swi2fruBoardDescription, swi3fruProductSerialNumber=swi3fruProductSerialNumber, blade13SecretKvmVmmEntry=blade13SecretKvmVmmEntry, b22Presence=b22Presence, swi3fruBoardManufactureDate=swi3fruBoardManufactureDate, bladeeventIndex=bladeeventIndex, blade19=blade19, b19SensorHealthEvents=b19SensorHealthEvents, b2FruLedProperties=b2FruLedProperties, b8BladeVersion=b8BladeVersion, b8SecretVmmKey=b8SecretVmmKey, b13LowerNonCritical=b13LowerNonCritical, b8fruBoardSerialNumber=b8fruBoardSerialNumber, b23Presence=b23Presence, b31MezzHealth=b31MezzHealth, b11Systeminfo=b11Systeminfo, blade18CPUTable=blade18CPUTable, blade16SensorTargetTable=blade16SensorTargetTable, blade15DiskEntry=blade15DiskEntry, b12CPUIndex=b12CPUIndex, b1SystemProperties=b1SystemProperties, blade15FruLedEntry=blade15FruLedEntry, b19DiskMark=b19DiskMark, shelfSubnet=shelfSubnet, b22SlotBitmap=b22SlotBitmap, b11MEMPresent=b11MEMPresent, swi4Route=swi4Route, b19SensorFRUInfo=b19SensorFRUInfo, hwFruFailDeassert=hwFruFailDeassert, swi4LowerNonRecoverable=swi4LowerNonRecoverable, blade2=blade2, b28CPUMark=b28CPUMark, blade17DiskTable=blade17DiskTable, swi4FruEntry=swi4FruEntry, smmFailover=smmFailover, b15DiskHealth=b15DiskHealth, b20LowerNonRecoverable=b20LowerNonRecoverable, b18Safepwofftime=b18Safepwofftime, b20SystemProperties=b20SystemProperties, smmDomainTable=smmDomainTable, b26MezzIndex=b26MezzIndex, b18MACAddress=b18MACAddress, b1FruID=b1FruID, b30ResetReason=b30ResetReason, b29fruProductPartNumber=b29fruProductPartNumber, blade21SecretKvmVmmEntry=blade21SecretKvmVmmEntry, b14MezzHealth=b14MezzHealth, b6PositiveHysteresis=b6PositiveHysteresis, b17MACAddress=b17MACAddress, swi4PortName=swi4PortName, b25MezzHealth=b25MezzHealth, b26NegativeHysteresis=b26NegativeHysteresis, b5NegativeHysteresis=b5NegativeHysteresis, b3FruHotSwapState=b3FruHotSwapState, blade24=blade24, b12SecretKvmState=b12SecretKvmState, b19MezzMark=b19MezzMark, b2ProductName=b2ProductName, b7SensorType=b7SensorType, b7BmcUserDel=b7BmcUserDel, b15MEMPresent=b15MEMPresent, b15FruLedColorProps=b15FruLedColorProps, b2BiosBootOption=b2BiosBootOption, blade25SecretKvmVmmTable=blade25SecretKvmVmmTable, b1Current=b1Current, b1ThresholdsAll=b1ThresholdsAll, b17RealTimePower=b17RealTimePower, fanVersion=fanVersion, b30HealthEvents=b30HealthEvents, swi4ClearSEL=swi4ClearSEL, b18fruProductDescription=b18fruProductDescription, b15BundleVersion=b15BundleVersion, b24LowerNonRecoverable=b24LowerNonRecoverable, b6DiskInfo=b6DiskInfo, b14CPUPresent=b14CPUPresent, b22PowerState=b22PowerState, b32LowerNonRecoverable=b32LowerNonRecoverable, b27BmcUserPasswd=b27BmcUserPasswd, b20SecretVmmState=b20SecretVmmState, b17Presence=b17Presence, b9fruBoardSerialNumber=b9fruBoardSerialNumber, b20fruBoardManufactureDate=b20fruBoardManufactureDate, b29ClearBiosConfig=b29ClearBiosConfig, blade4DiskTable=blade4DiskTable, b4fruAll=b4fruAll, hwWatchDogPowerCycle=hwWatchDogPowerCycle, swi4SaveConfig=swi4SaveConfig, b25fruProductManufacturer=b25fruProductManufacturer, blade17SecretKvmVmmTable=blade17SecretKvmVmmTable, swi3FruEntry=swi3FruEntry, b5BundleVersion=b5BundleVersion)
mibBuilder.exportSymbols("HWSMM-MIB", blade9MezzEntry=blade9MezzEntry, b23SensorFRUInfo=b23SensorFRUInfo, b15MEMMark=b15MEMMark, b21Safepwofftime=b21Safepwofftime, smmSensorTargetTable=smmSensorTargetTable, b26SlotBitmap=b26SlotBitmap, b31fruBoardDescription=b31fruBoardDescription, hwHardDiskPresenceDeassert=hwHardDiskPresenceDeassert, systemUnHealthyLocations=systemUnHealthyLocations, swi3fruBoardDescription=swi3fruBoardDescription, b20LowerNonCritical=b20LowerNonCritical, blade19FruTable=blade19FruTable, b4FRULabel=b4FRULabel, b18BmcUserPasswd=b18BmcUserPasswd, b28fruBoardSerialNumber=b28fruBoardSerialNumber, b30MMSecretVmmKey=b30MMSecretVmmKey, b32BladeVersion=b32BladeVersion, swi2FruEntry=swi2FruEntry, b21SlotBitmap=b21SlotBitmap, swi3BladeVersion=swi3BladeVersion, b10HealthEvents=b10HealthEvents, b31SensorHealth=b31SensorHealth, b4DiskInfo=b4DiskInfo, blade12FruDescriptionTable=blade12FruDescriptionTable, b2SecretKvmState=b2SecretKvmState, b28MezzLocation=b28MezzLocation, b23MEMHealth=b23MEMHealth, blade27FruDescriptionTable=blade27FruDescriptionTable, hwHotSwaptoM0=hwHotSwaptoM0, b22NegativeHysteresis=b22NegativeHysteresis, b9CPULocation=b9CPULocation, b27fruBoardManufactureDate=b27fruBoardManufactureDate, b26BiosBootOption=b26BiosBootOption, b24MezzIndex=b24MezzIndex, b28BmcUserPasswd=b28BmcUserPasswd, swi1FruEntry=swi1FruEntry, b5BmcIP=b5BmcIP, blade7CPUTable=blade7CPUTable, hwWatchDogPowerDownDeassert=hwWatchDogPowerDownDeassert, swi3BundleVersion=swi3BundleVersion, b10fruProductPartNumber=b10fruProductPartNumber, hwCableInterconnectConfigErrDeassert=hwCableInterconnectConfigErrDeassert, b7fruProductRevision=b7fruProductRevision, b25CPUMark=b25CPUMark, b20HealthEvents=b20HealthEvents, b22BmcUserDel=b22BmcUserDel, blade16SecretKvmVmmTable=blade16SecretKvmVmmTable, b1BmcUserpropertychg=b1BmcUserpropertychg, b13MezzMark=b13MezzMark, blade17CPUEntry=blade17CPUEntry, smmFruLedEntry=smmFruLedEntry, b32ClearSEL=b32ClearSEL, hwHotSwaptoM2=hwHotSwaptoM2, b32SensorHealth=b32SensorHealth, b19systemGuid=b19systemGuid, b4fruBoardSerialNumber=b4fruBoardSerialNumber, b14fruProductManufacturer=b14fruProductManufacturer, b16MezzIndex=b16MezzIndex, blade7SensorTargetTable=blade7SensorTargetTable, b25fruProductSerialNumber=b25fruProductSerialNumber, swi4UpperNonRecoverable=swi4UpperNonRecoverable, b13MezzIndex=b13MezzIndex, hwCPUMCE=hwCPUMCE, b9LowerCritical=b9LowerCritical, b9fruNum=b9fruNum, b28FRUControl=b28FRUControl, b1WDTBootEnable=b1WDTBootEnable, b16CPUMark=b16CPUMark, b5Health=b5Health, hwMemoryCfgError=hwMemoryCfgError, swi4BundleVersion=swi4BundleVersion, b21RealTimePower=b21RealTimePower, b5Safepwofftime=b5Safepwofftime, smmHealth=smmHealth, b26fruProductPartNumber=b26fruProductPartNumber, b26fruAll=b26fruAll, b12BmcUserDel=b12BmcUserDel, blade28FruLedEntry=blade28FruLedEntry, b10fruBoardManufactureDate=b10fruBoardManufactureDate, b8fruNumber=b8fruNumber, b19PositiveHysteresis=b19PositiveHysteresis, b9FruLedColorProps=b9FruLedColorProps, blade14FruEntry=blade14FruEntry, b15BmcIP=b15BmcIP, b3MEMIndex=b3MEMIndex, b7fruNum=b7fruNum, blade31FruTable=blade31FruTable, b16CPULocation=b16CPULocation, b22BiosBootOption=b22BiosBootOption, b22MACAddress=b22MACAddress, blade21FruEntry=blade21FruEntry, b32MezzHealth=b32MezzHealth, blade20SecretKvmVmmEntry=blade20SecretKvmVmmEntry, blade29SecretKvmVmmEntry=blade29SecretKvmVmmEntry, b13RealTimePower=b13RealTimePower, blade30FruTable=blade30FruTable, b21DiskInfo=b21DiskInfo, hwI2cDataDriveHiUnable=hwI2cDataDriveHiUnable, b18CPUHealth=b18CPUHealth, b19MMSecretVmmKey=b19MMSecretVmmKey, smmUpperNonCritical=smmUpperNonCritical, b16NegativeHysteresis=b16NegativeHysteresis, b18ClearBiosConfig=b18ClearBiosConfig, b2NegativeHysteresis=b2NegativeHysteresis, b25FRULabel=b25FRULabel, b9MEMInfo=b9MEMInfo, hwVoltHiMinor=hwVoltHiMinor, b2MezzLocation=b2MezzLocation, b1BmcGateway=b1BmcGateway, b23MezzHealth=b23MezzHealth, b8MACAddress=b8MACAddress, blade7DiskTable=blade7DiskTable, hwCPUSelfTestFail=hwCPUSelfTestFail, b31ClearBiosConfig=b31ClearBiosConfig, b15LowerNonCritical=b15LowerNonCritical, b21PowerCapping=b21PowerCapping, swi2FruDescriptionEntry=swi2FruDescriptionEntry, b7MEMIndex=b7MEMIndex, b2MezzHealth=b2MezzHealth, b18UpperNonCritical=b18UpperNonCritical, smmSensorHealth=smmSensorHealth, b1SensorHealth=b1SensorHealth, swi2LowerNonRecoverable=swi2LowerNonRecoverable, b3SensorType=b3SensorType, b12SensorHealthEvents=b12SensorHealthEvents, blade17CPUTable=blade17CPUTable, blade19MemoryEntry=blade19MemoryEntry, b11fruBoardManufacturer=b11fruBoardManufacturer, b5UpperNonRecoverable=b5UpperNonRecoverable, b27CPUIndex=b27CPUIndex, blade7FruEntry=blade7FruEntry, b18SystemProperties=b18SystemProperties, b26MEMPresent=b26MEMPresent, b31BmcGateway=b31BmcGateway, b22FRUControl=b22FRUControl, smmDNSDomainname=smmDNSDomainname, b3LowerNonCritical=b3LowerNonCritical, blade11FruEntry=blade11FruEntry, b26fruProductSerialNumber=b26fruProductSerialNumber, b2fruProductPartNumber=b2fruProductPartNumber, b30fruProductDescription=b30fruProductDescription, b6CPUPresent=b6CPUPresent, hwMemoryOvertemp=hwMemoryOvertemp, b5ResetReason=b5ResetReason, hwWatchDogOverflowDeassert=hwWatchDogOverflowDeassert, hwTempLoMajor=hwTempLoMajor, b10SensorType=b10SensorType, b32CPUIndex=b32CPUIndex, b22CPUHealth=b22CPUHealth, b2BmcUserAdd=b2BmcUserAdd, blade15FruDescriptionTable=blade15FruDescriptionTable, b1Systeminfo=b1Systeminfo, swi4FruID=swi4FruID, b28CPUInfo=b28CPUInfo, blade11MemoryEntry=blade11MemoryEntry, b11SecretKvmState=b11SecretKvmState, b5fruAll=b5fruAll, b7SensorHealthEvents=b7SensorHealthEvents, b7HealthEvents=b7HealthEvents, b6PowerCapping=b6PowerCapping, b6UpperNonCritical=b6UpperNonCritical, b15fruProductRevision=b15fruProductRevision, b19Presence=b19Presence, b27HealthEvents=b27HealthEvents, hwTempHiMinor=hwTempHiMinor, b3DiskIndex=b3DiskIndex, blade14FruDescriptionTable=blade14FruDescriptionTable, swi4OTMState=swi4OTMState, b17DiskLocation=b17DiskLocation, b24BmcIP=b24BmcIP, b15MEMLocation=b15MEMLocation, b18BmcGateway=b18BmcGateway, blade24MemoryTable=blade24MemoryTable, b23ProductName=b23ProductName, shelfRealTimePower=shelfRealTimePower, smmSnmpSwitchss=smmSnmpSwitchss, b23Target=b23Target, b22SensorHealthEvents=b22SensorHealthEvents, b29SecretKvmVmmIndex=b29SecretKvmVmmIndex, b15MezzInfo=b15MezzInfo, b20FruLed=b20FruLed, b27DiskInfo=b27DiskInfo, b7MEMLocation=b7MEMLocation, blade19FruLedTable=blade19FruLedTable, blade3=blade3, b4ProductName=b4ProductName, shelfHealthEvents=shelfHealthEvents, blade2MezzEntry=blade2MezzEntry, swi2Current=swi2Current, blade4MemoryEntry=blade4MemoryEntry, b9RealTimePower=b9RealTimePower, b17MezzPresent=b17MezzPresent, swi2PhyState=swi2PhyState, b18DiskMark=b18DiskMark, b26MezzInfo=b26MezzInfo, b31DiskPresent=b31DiskPresent, b24SecretVmmState=b24SecretVmmState, b22fruProductSerialNumber=b22fruProductSerialNumber, b30SystemProperties=b30SystemProperties, b2DiskPresent=b2DiskPresent, b9SensorHealth=b9SensorHealth, b4CPUMark=b4CPUMark, b9SlotBitmap=b9SlotBitmap, blade19DiskEntry=blade19DiskEntry, b6Current=b6Current, b30ProductName=b30ProductName, b21UpperNonCritical=b21UpperNonCritical, b20DiskIndex=b20DiskIndex, b29NegativeHysteresis=b29NegativeHysteresis, b21DeviceID=b21DeviceID, b13FRULabel=b13FRULabel, b13Presence=b13Presence, b25FruHotSwapState=b25FruHotSwapState, hwLswFail=hwLswFail, b6fruNum=b6fruNum, b4MezzIndex=b4MezzIndex, blade32MemoryEntry=blade32MemoryEntry, b7DiskMark=b7DiskMark, b11ProductName=b11ProductName, swi2fruBoardPartNumber=swi2fruBoardPartNumber, b25fruProductRevision=b25fruProductRevision, blade31FruLedTable=blade31FruLedTable, b17Target=b17Target, b15RealTimePower=b15RealTimePower, b32WDTBootEnable=b32WDTBootEnable, swi4StackState=swi4StackState, b32Systeminfo=b32Systeminfo, swi2Health=swi2Health, b31FruID=b31FruID, blade10FruEntry=blade10FruEntry, b7SensorFRUInfo=b7SensorFRUInfo, b15MEMInfo=b15MEMInfo, b22fruBoardManufactureDate=b22fruBoardManufactureDate, hwCableInterconnectConfigErr=hwCableInterconnectConfigErr, swi3StackState=swi3StackState, b32MEMHealth=b32MEMHealth, b24MEMIndex=b24MEMIndex, swi1FruLedColorProps=swi1FruLedColorProps, blade12SensorTargetTable=blade12SensorTargetTable, b10Safepwofftime=b10Safepwofftime, b13FruHotSwapState=b13FruHotSwapState, blade29FruTable=blade29FruTable, PYSNMP_MODULE_ID=hwSMM, blade5CPUTable=blade5CPUTable, b12Systeminfo=b12Systeminfo, b10BladeVersion=b10BladeVersion, b3CPUIndex=b3CPUIndex, b29PowerState=b29PowerState, blade32MezzTable=blade32MezzTable, b10fruBoardPartNumber=b10fruBoardPartNumber, b24MEMInfo=b24MEMInfo, powerInfo=powerInfo, b7BmcUserPasswd=b7BmcUserPasswd, b14UpperNonCritical=b14UpperNonCritical)
mibBuilder.exportSymbols("HWSMM-MIB", swi4FruLed=swi4FruLed, b25systemGuid=b25systemGuid, b11CPUIndex=b11CPUIndex, blade20DiskEntry=blade20DiskEntry, blade28=blade28, b15DiskMark=b15DiskMark, b16MezzHealth=b16MezzHealth, b21BmcUserpropertychg=b21BmcUserpropertychg, b11ClearSEL=b11ClearSEL, b14LowerNonRecoverable=b14LowerNonRecoverable, b32LowerCritical=b32LowerCritical, blade25DiskTable=blade25DiskTable, b16MEMMark=b16MEMMark, b8ResetReason=b8ResetReason, b4fruBoardPartNumber=b4fruBoardPartNumber, b4MEMPresent=b4MEMPresent, blade23FruDescriptionTable=blade23FruDescriptionTable, b15fruBoardDescription=b15fruBoardDescription, b9fruProductSerialNumber=b9fruProductSerialNumber, b23FruID=b23FruID, b31DiskInfo=b31DiskInfo, b5BmcUserPasswd=b5BmcUserPasswd, b1FRUControl=b1FRUControl, shelffruAll=shelffruAll, smmUniteLoadProgress=smmUniteLoadProgress, swi1ThresholdsAll=swi1ThresholdsAll, smmKVMConnect=smmKVMConnect, b30DiskIndex=b30DiskIndex, b32FRUControl=b32FRUControl, pemsPowerEntry=pemsPowerEntry, b24SecretKvmVmmIndex=b24SecretKvmVmmIndex, b7UpperCritical=b7UpperCritical, b32SlotBitmap=b32SlotBitmap, powerRuntimePower=powerRuntimePower, b7ClearBiosConfig=b7ClearBiosConfig, shelfFruDescriptionTable=shelfFruDescriptionTable, b21ThresholdsAll=b21ThresholdsAll, b2MezzInfo=b2MezzInfo, b1fruBoardPartNumber=b1fruBoardPartNumber, b4Systeminfo=b4Systeminfo, blade7MezzTable=blade7MezzTable, swi3FruDescriptionTable=swi3FruDescriptionTable, b29BiosBootOption=b29BiosBootOption, swi4fruProductRevision=swi4fruProductRevision, blade29DiskTable=blade29DiskTable, blade19MezzEntry=blade19MezzEntry, hwLogspaStatusFullDeassert=hwLogspaStatusFullDeassert, b28systemGuid=b28systemGuid, b32fruNum=b32fruNum, b9MezzHealth=b9MezzHealth, b27ClearSEL=b27ClearSEL, b13MEMPresent=b13MEMPresent, b12RealTimePower=b12RealTimePower, swi4FruLedEntry=swi4FruLedEntry, b14fruProductRevision=b14fruProductRevision, b6FRUControl=b6FRUControl, b1CPUHealth=b1CPUHealth, blade5MezzEntry=blade5MezzEntry, b17SlotBitmap=b17SlotBitmap, swi4FruLedTable=swi4FruLedTable, blade30=blade30, swi1DeviceID=swi1DeviceID, b6BmcGateway=b6BmcGateway, b2MEMLocation=b2MEMLocation, blade5FruLedTable=blade5FruLedTable, b30PositiveHysteresis=b30PositiveHysteresis, b8CPUPresent=b8CPUPresent, b25SensorHealthEvents=b25SensorHealthEvents, b26fruNum=b26fruNum, b15BmcUserDel=b15BmcUserDel, swi3ThresholdsAll=swi3ThresholdsAll, hwRemovedAlarmStatus=hwRemovedAlarmStatus, blade15DiskTable=blade15DiskTable, hwUIDButton=hwUIDButton, b8MezzMark=b8MezzMark, b12BmcIP=b12BmcIP, b7BiosCfg=b7BiosCfg, b2SensorType=b2SensorType, b7FruID=b7FruID, b18MezzIndex=b18MezzIndex, b11FruID=b11FruID, b8BmcUserDel=b8BmcUserDel, b14ProductName=b14ProductName, b7MEMHealth=b7MEMHealth, blade27MemoryEntry=blade27MemoryEntry, b4fruBoardManufactureDate=b4fruBoardManufactureDate, blade1MemoryEntry=blade1MemoryEntry, swi3FcPortConn=swi3FcPortConn, b17MEMLocation=b17MEMLocation, b31fruNum=b31fruNum, b5SecretKvmState=b5SecretKvmState, b15SensorHealthEvents=b15SensorHealthEvents, b1BiosBootOption=b1BiosBootOption, b17DiskInfo=b17DiskInfo, b15MezzMark=b15MezzMark, b19RealTimePower=b19RealTimePower, shelfListTargets=shelfListTargets, swi2FruID=swi2FruID, b10MACAddress=b10MACAddress, swi4PowerState=swi4PowerState, b17MEMInfo=b17MEMInfo, b24DiskPresent=b24DiskPresent, b14UpperCritical=b14UpperCritical, b8PowerCapping=b8PowerCapping, swi3fruAll=swi3fruAll, blade18FruTable=blade18FruTable, b17MezzMac=b17MezzMac, b19SensorType=b19SensorType, b4SensorHealth=b4SensorHealth, b9Powerreference=b9Powerreference, b8RealTimePower=b8RealTimePower, blade4FruDescriptionEntry=blade4FruDescriptionEntry, swi4DeviceID=swi4DeviceID, b5SecretVmmState=b5SecretVmmState, hwCertStatusExpiredDeassert=hwCertStatusExpiredDeassert, b6MezzIndex=b6MezzIndex, b29FRUControl=b29FRUControl, blade18FruLedTable=blade18FruLedTable, b7CPUPresent=b7CPUPresent, blade27FruLedEntry=blade27FruLedEntry, b13SecretVmmKey=b13SecretVmmKey, b9MezzLocation=b9MezzLocation, blade20SensorTargetTable=blade20SensorTargetTable, b4fruProductManufacturer=b4fruProductManufacturer, b14DiskInfo=b14DiskInfo, blade32FruDescriptionEntry=blade32FruDescriptionEntry, blade8SecretKvmVmmEntry=blade8SecretKvmVmmEntry, b27SensorFRUInfo=b27SensorFRUInfo, b31MezzLocation=b31MezzLocation, b23BmcGateway=b23BmcGateway, b19MezzHealth=b19MezzHealth, b13DiskIndex=b13DiskIndex, b1DeviceID=b1DeviceID, b21fruAll=b21fruAll, b32BmcUserDel=b32BmcUserDel, hwI2cClockDriveLoUnable=hwI2cClockDriveLoUnable, b28MEMPresent=b28MEMPresent, b24LowerNonCritical=b24LowerNonCritical, b12Target=b12Target, b27FruLedProperties=b27FruLedProperties, b27fruBoardManufacturer=b27fruBoardManufacturer, b19MEMMark=b19MEMMark, blade1CPUEntry=blade1CPUEntry, b17ClearBiosConfig=b17ClearBiosConfig, b31fruProductDescription=b31fruProductDescription, b7CPUMark=b7CPUMark, b14Current=b14Current, b8ProductName=b8ProductName, b29SecretKvmState=b29SecretKvmState, b32FRULabel=b32FRULabel, b30SlotBitmap=b30SlotBitmap, b16fruBoardManufactureDate=b16fruBoardManufactureDate, b1CPULocation=b1CPULocation, b32MezzInfo=b32MezzInfo, b3SensorHealthEvents=b3SensorHealthEvents, b3fruBoardSerialNumber=b3fruBoardSerialNumber, swi3fruProductPartNumber=swi3fruProductPartNumber, b21CPUIndex=b21CPUIndex, blade20=blade20, b5BiosBootOption=b5BiosBootOption, b7fruNumber=b7fruNumber, b21fruProductManufacturer=b21fruProductManufacturer, b7MezzMac=b7MezzMac, blade9SecretKvmVmmEntry=blade9SecretKvmVmmEntry, b8BmcUserAdd=b8BmcUserAdd, blade23SensorTargetEntry=blade23SensorTargetEntry, b28MezzMark=b28MezzMark, smmfruBoardManufactureDate=smmfruBoardManufactureDate, blade19SensorTargetEntry=blade19SensorTargetEntry, b30FruLedState=b30FruLedState, b10ResetReason=b10ResetReason, blade29SensorTargetEntry=blade29SensorTargetEntry, smmSensorType=smmSensorType, b7PowerState=b7PowerState, smmTemperatureReading=smmTemperatureReading, b6BiosBootOption=b6BiosBootOption, blade22FruDescriptionEntry=blade22FruDescriptionEntry, b20SensorFRUInfo=b20SensorFRUInfo, b32MezzPresent=b32MezzPresent, blade6MezzEntry=blade6MezzEntry, b16Systeminfo=b16Systeminfo, blade8FruTable=blade8FruTable, b21HealthEvents=b21HealthEvents, b3PowerState=b3PowerState, swi2SaveConfig=swi2SaveConfig, b30Target=b30Target, hwUncorrectableECCDeassert=hwUncorrectableECCDeassert, b26MEMMark=b26MEMMark, b22MEMIndex=b22MEMIndex, smmRemoteSyslogTransport=smmRemoteSyslogTransport, b27fruAll=b27fruAll, blade3DiskEntry=blade3DiskEntry, b21fruProductPartNumber=b21fruProductPartNumber, swi2OTMData=swi2OTMData, b3fruBoardManufactureDate=b3fruBoardManufactureDate, swi4fruNumber=swi4fruNumber, swi1ClearAlarm=swi1ClearAlarm, b30systemGuid=b30systemGuid, b20LowerCritical=b20LowerCritical, b4MEMMark=b4MEMMark, blade28FruEntry=blade28FruEntry, blade9MemoryEntry=blade9MemoryEntry, b32SecretKvmVmmIndex=b32SecretKvmVmmIndex, b20ThresholdsAll=b20ThresholdsAll, b13CPUIndex=b13CPUIndex, smmRemoteSyslogLevel=smmRemoteSyslogLevel, swi4SensorType=swi4SensorType, hwFailoverng=hwFailoverng, swi3fruProductRevision=swi3fruProductRevision, blade7FruDescriptionEntry=blade7FruDescriptionEntry, b26PowerCapping=b26PowerCapping, blade2CPUTable=blade2CPUTable, b31PowerCapping=b31PowerCapping, swi1fruAll=swi1fruAll, b24CPUIndex=b24CPUIndex, b17PowerCapping=b17PowerCapping, hwSystemFirmwareHang=hwSystemFirmwareHang, b25Target=b25Target, b20MEMMark=b20MEMMark, b14BladeVersion=b14BladeVersion, swi2NegativeHysteresis=swi2NegativeHysteresis, hwHardwareIncompatibilityDeassert=hwHardwareIncompatibilityDeassert, b10FRULabel=b10FRULabel, b2fruBoardPartNumber=b2fruBoardPartNumber, b24fruProductDescription=b24fruProductDescription, b26BmcUserDel=b26BmcUserDel, b2DiskLocation=b2DiskLocation, hwPSRemovedDeassert=hwPSRemovedDeassert, b21BundleVersion=b21BundleVersion, b19fruNumber=b19fruNumber, b15SensorType=b15SensorType, b22DiskLocation=b22DiskLocation, swi4PortToBladeSlot=swi4PortToBladeSlot, blade19MezzTable=blade19MezzTable, b31CPUHealth=b31CPUHealth, b12fruProductSerialNumber=b12fruProductSerialNumber, b14FruLedProperties=b14FruLedProperties, hwProcessorDisable=hwProcessorDisable, blade10SecretKvmVmmTable=blade10SecretKvmVmmTable, hwFirmwareIncompatibility=hwFirmwareIncompatibility, b4SecretKvmVmmIndex=b4SecretKvmVmmIndex, blade23FruLedTable=blade23FruLedTable, blade29=blade29, blade26FruEntry=blade26FruEntry, b5UpperCritical=b5UpperCritical, b28WDTBootEnable=b28WDTBootEnable, b17SystemProperties=b17SystemProperties, hwProcessorDisableDeassert=hwProcessorDisableDeassert, blade21CPUEntry=blade21CPUEntry, b22BmcGateway=b22BmcGateway, b32MEMLocation=b32MEMLocation, blade11CPUTable=blade11CPUTable, b2MEMMark=b2MEMMark, b19MEMInfo=b19MEMInfo)
mibBuilder.exportSymbols("HWSMM-MIB", b25DiskMark=b25DiskMark, hwMemoryPresence=hwMemoryPresence, smmKVMServerPort=smmKVMServerPort, swi1PortTargetTable=swi1PortTargetTable, bladehealthEvents=bladehealthEvents, b16ProductName=b16ProductName, b19Systeminfo=b19Systeminfo, b26ClearBiosConfig=b26ClearBiosConfig, smmFruDescriptionTable=smmFruDescriptionTable, b26SensorHealthEvents=b26SensorHealthEvents, blade6CPUEntry=blade6CPUEntry, swi1SensorHealthEvents=swi1SensorHealthEvents, b3BmcUserDel=b3BmcUserDel, swi1PortNum=swi1PortNum, blade2SecretKvmVmmTable=blade2SecretKvmVmmTable, blade11FruLedTable=blade11FruLedTable, b22FruLedState=b22FruLedState, b32MEMInfo=b32MEMInfo, b23LowerNonRecoverable=b23LowerNonRecoverable, b26Current=b26Current, b4Powerreference=b4Powerreference, b28FruID=b28FruID, b20SlotBitmap=b20SlotBitmap, b16fruProductDescription=b16fruProductDescription, b19BundleVersion=b19BundleVersion, b26BmcIP=b26BmcIP, blade23FruLedEntry=blade23FruLedEntry, blade4MemoryTable=blade4MemoryTable, b17MMSecretVmmKey=b17MMSecretVmmKey, b25ProductName=b25ProductName, blade2MemoryEntry=blade2MemoryEntry, b16SensorFRUInfo=b16SensorFRUInfo, b32SecretVmmKey=b32SecretVmmKey, b1CPUPresent=b1CPUPresent, b10Current=b10Current, b31MMSecretVmmKey=b31MMSecretVmmKey, b24MACAddress=b24MACAddress, b15SecretKvmVmmIndex=b15SecretKvmVmmIndex, b28SecretVmmKey=b28SecretVmmKey, b11BladeVersion=b11BladeVersion, b31fruProductSerialNumber=b31fruProductSerialNumber, b19UpperCritical=b19UpperCritical, b25MezzInfo=b25MezzInfo, smmSNMPTrapPort=smmSNMPTrapPort, b27FruHotSwapState=b27FruHotSwapState, b6SensorHealth=b6SensorHealth, b14LowerCritical=b14LowerCritical, b12fruProductPartNumber=b12fruProductPartNumber, swi4SensorTargetTable=swi4SensorTargetTable, swi4FRUControl=swi4FRUControl, b3fruAll=b3fruAll, swi1fruBoardSerialNumber=swi1fruBoardSerialNumber, b7fruProductSerialNumber=b7fruProductSerialNumber, swi4SensorHealthEvents=swi4SensorHealthEvents, b4RealTimePower=b4RealTimePower, b22BmcIP=b22BmcIP, b24MezzLocation=b24MezzLocation, hwInvalidBootSector=hwInvalidBootSector, b10CPUMark=b10CPUMark, blade30MemoryEntry=blade30MemoryEntry, b7fruBoardPartNumber=b7fruBoardPartNumber, b16fruProductManufacturer=b16fruProductManufacturer, swi3FruLedProperties=swi3FruLedProperties, hwHotSwaptoM4=hwHotSwaptoM4, b12CPUPresent=b12CPUPresent, blade10SecretKvmVmmEntry=blade10SecretKvmVmmEntry, b30fruBoardManufacturer=b30fruBoardManufacturer, b20SensorType=b20SensorType, swi2HealthEvents=swi2HealthEvents, blade12SensorTargetEntry=blade12SensorTargetEntry, b4fruProductRevision=b4fruProductRevision, hwPowerButton=hwPowerButton, swi1fruProductPartNumber=swi1fruProductPartNumber, b18fruBoardDescription=b18fruBoardDescription, blade12FruTable=blade12FruTable, b15BladeVersion=b15BladeVersion, b2MEMIndex=b2MEMIndex, swi2FruLedEntry=swi2FruLedEntry, b18BladeVersion=b18BladeVersion, b13SecretKvmVmmIndex=b13SecretKvmVmmIndex, b5PowerState=b5PowerState, blade1DiskTable=blade1DiskTable, b20FRULabel=b20FRULabel, b31NegativeHysteresis=b31NegativeHysteresis, b23MMSecretVmmKey=b23MMSecretVmmKey, b16FruLed=b16FruLed, b23fruProductPartNumber=b23fruProductPartNumber, hwCPUDisable=hwCPUDisable, b21MezzPresent=b21MezzPresent, b20FruHotSwapState=b20FruHotSwapState, b16LowerNonRecoverable=b16LowerNonRecoverable, b13Health=b13Health, blade14SensorTargetTable=blade14SensorTargetTable, b28MMSecretVmmKey=b28MMSecretVmmKey, b21MEMMark=b21MEMMark, b17SecretVmmKey=b17SecretVmmKey, b1CPUMark=b1CPUMark, swi4fruBoardPartNumber=swi4fruBoardPartNumber, b31fruBoardManufactureDate=b31fruBoardManufactureDate, b19CPUPresent=b19CPUPresent, b6FruLedColorProps=b6FruLedColorProps, b27BmcUserpropertychg=b27BmcUserpropertychg, b14MezzLocation=b14MezzLocation, b23DiskLocation=b23DiskLocation, swi4SWIPControl=swi4SWIPControl, b3CPUPresent=b3CPUPresent, b5FruLedColorProps=b5FruLedColorProps, blade10FruTable=blade10FruTable, smmDNSHostname=smmDNSHostname, blade25SensorTargetTable=blade25SensorTargetTable, b23DeviceID=b23DeviceID, blade6MemoryEntry=blade6MemoryEntry, blade14MezzTable=blade14MezzTable, swi1UpperNonCritical=swi1UpperNonCritical, swi2FruHotSwapState=swi2FruHotSwapState, b31systemGuid=b31systemGuid, b21MezzHealth=b21MezzHealth, b1Safepwofftime=b1Safepwofftime, b30UpperCritical=b30UpperCritical, hwCardStatusFaultDeassert=hwCardStatusFaultDeassert, b18Health=b18Health, b30Safepwofftime=b30Safepwofftime, b22Current=b22Current, b8MezzPresent=b8MezzPresent, b26SecretKvmState=b26SecretKvmState, blade15MemoryEntry=blade15MemoryEntry, b27BmcUserDel=b27BmcUserDel, b21CPULocation=b21CPULocation, b1DiskHealth=b1DiskHealth, b30BiosBootOption=b30BiosBootOption, b6SystemProperties=b6SystemProperties, b12MezzPresent=b12MezzPresent, b30FRUControl=b30FRUControl, b20DiskMark=b20DiskMark, blade6SensorTargetTable=blade6SensorTargetTable, b18MezzMac=b18MezzMac, b20fruBoardDescription=b20fruBoardDescription, b10DiskIndex=b10DiskIndex, blade29FruDescriptionTable=blade29FruDescriptionTable, b14DiskLocation=b14DiskLocation, b29PositiveHysteresis=b29PositiveHysteresis, b19WDTBootEnable=b19WDTBootEnable, blade30DiskEntry=blade30DiskEntry, blade7DiskEntry=blade7DiskEntry, swi4ConfigSupport=swi4ConfigSupport, b22CPULocation=b22CPULocation, b17MEMHealth=b17MEMHealth, b18CPUIndex=b18CPUIndex, b19SecretKvmVmmIndex=b19SecretKvmVmmIndex, b8FruLed=b8FruLed, b11fruBoardPartNumber=b11fruBoardPartNumber, blade28CPUTable=blade28CPUTable, blade5MemoryEntry=blade5MemoryEntry, b25BmcUserpropertychg=b25BmcUserpropertychg, b21SensorHealthEvents=b21SensorHealthEvents, b16MezzMark=b16MezzMark, b5fruBoardPartNumber=b5fruBoardPartNumber, blade9CPUEntry=blade9CPUEntry, smmStandbyIpAddr=smmStandbyIpAddr, b3ClearSEL=b3ClearSEL, b17CPUHealth=b17CPUHealth, b14BmcGateway=b14BmcGateway, b2DiskHealth=b2DiskHealth, swi3SensorHealth=swi3SensorHealth, b4systemGuid=b4systemGuid, b9MezzPresent=b9MezzPresent, b21BmcUserAdd=b21BmcUserAdd, b20DeviceID=b20DeviceID, b30SecretKvmVmmIndex=b30SecretKvmVmmIndex, blade13FruLedTable=blade13FruLedTable, blade12CPUEntry=blade12CPUEntry, swi1SensorFRUInfo=swi1SensorFRUInfo, b32CPULocation=b32CPULocation, b20CPUIndex=b20CPUIndex, b4FruHotSwapState=b4FruHotSwapState, b28SensorFRUInfo=b28SensorFRUInfo, b11LowerNonCritical=b11LowerNonCritical, swi3FruLed=swi3FruLed, swi3PortState=swi3PortState, b1ExDiskBoardPresence=b1ExDiskBoardPresence, blade26FruDescriptionTable=blade26FruDescriptionTable, b27FruLed=b27FruLed, b20MezzPresent=b20MezzPresent, b32fruAll=b32fruAll, b23BmcUserpropertychg=b23BmcUserpropertychg, b21Systeminfo=b21Systeminfo, blade10FruDescriptionEntry=blade10FruDescriptionEntry, b26MEMLocation=b26MEMLocation, b16Health=b16Health, b31SlotBitmap=b31SlotBitmap, b28SecretKvmState=b28SecretKvmState, hwLogspaStatus=hwLogspaStatus, b8fruNum=b8fruNum, b18FRULabel=b18FRULabel, hwI2cNoFault=hwI2cNoFault, b11FruHotSwapState=b11FruHotSwapState, b21NegativeHysteresis=b21NegativeHysteresis, b24DiskIndex=b24DiskIndex, b20fruProductPartNumber=b20fruProductPartNumber, b4fruProductSerialNumber=b4fruProductSerialNumber, blade32CPUTable=blade32CPUTable, b17fruBoardDescription=b17fruBoardDescription, b6SecretKvmVmmIndex=b6SecretKvmVmmIndex, blade28MezzTable=blade28MezzTable, b17FruLedProperties=b17FruLedProperties, b13fruProductManufacturer=b13fruProductManufacturer, swi2fruAll=swi2fruAll, blade9FruDescriptionEntry=blade9FruDescriptionEntry, swi3DeviceID=swi3DeviceID, smmHostname=smmHostname, b6Presence=b6Presence, hwTrap=hwTrap, b15ExDiskBoardPresence=b15ExDiskBoardPresence, b21ResetReason=b21ResetReason, b17ClearSEL=b17ClearSEL, b27MEMPresent=b27MEMPresent, b3Current=b3Current, b12ClearSEL=b12ClearSEL, blade1DiskEntry=blade1DiskEntry, b24UpperCritical=b24UpperCritical, hwPowerCapping=hwPowerCapping, b5CPUMark=b5CPUMark, b10RealTimePower=b10RealTimePower, b18BmcUserAdd=b18BmcUserAdd, b12BundleVersion=b12BundleVersion, b28SensorHealthEvents=b28SensorHealthEvents, b13WDTBootEnable=b13WDTBootEnable, smmLowerNonRecoverable=smmLowerNonRecoverable, b31PositiveHysteresis=b31PositiveHysteresis, b13SensorHealth=b13SensorHealth, b23SecretVmmKey=b23SecretVmmKey, hwWatchDogPowerCycleDeassert=hwWatchDogPowerCycleDeassert, b8SensorHealth=b8SensorHealth, b16DiskPresent=b16DiskPresent, b17SensorHealth=b17SensorHealth, b32UpperCritical=b32UpperCritical, b8DeviceID=b8DeviceID, b27SlotBitmap=b27SlotBitmap, b15DiskIndex=b15DiskIndex, b28SensorHealth=b28SensorHealth, b11MezzInfo=b11MezzInfo, b31SecretKvmState=b31SecretKvmState, b11UpperNonRecoverable=b11UpperNonRecoverable, blade14SensorTargetEntry=blade14SensorTargetEntry, b14CPUHealth=b14CPUHealth, b3MACAddress=b3MACAddress, hwRTCBatterylow=hwRTCBatterylow, blade2FruTable=blade2FruTable, blade8MezzTable=blade8MezzTable, hwCPUThermalTripDeassert=hwCPUThermalTripDeassert, blade14SecretKvmVmmEntry=blade14SecretKvmVmmEntry, b1MEMHealth=b1MEMHealth, b10PowerCapping=b10PowerCapping, hwSysRestart=hwSysRestart)
mibBuilder.exportSymbols("HWSMM-MIB", b30MezzMac=b30MezzMac, b2BiosCfg=b2BiosCfg, blade4FruLedEntry=blade4FruLedEntry, b26MezzPresent=b26MezzPresent, b3RealTimePower=b3RealTimePower, b1fruAll=b1fruAll, b17SecretKvmState=b17SecretKvmState, b22PositiveHysteresis=b22PositiveHysteresis, b11PositiveHysteresis=b11PositiveHysteresis, b28fruAll=b28fruAll, hwTRAPObject=hwTRAPObject, blade23=blade23, blade11DiskEntry=blade11DiskEntry, hwControllerAccessibleFailDeassert=hwControllerAccessibleFailDeassert, smmfruAll=smmfruAll, blade15MezzEntry=blade15MezzEntry, b16FRUControl=b16FRUControl, b10UpperCritical=b10UpperCritical, b23Systeminfo=b23Systeminfo, b31FruLedState=b31FruLedState, b14Presence=b14Presence, b16SlotBitmap=b16SlotBitmap, blade25MezzTable=blade25MezzTable, hwMemoryECCLimitationDeassert=hwMemoryECCLimitationDeassert, blade28MemoryTable=blade28MemoryTable, swi1fruNumber=swi1fruNumber, b1FruLedColorProps=b1FruLedColorProps, b32ProductName=b32ProductName, blade20CPUEntry=blade20CPUEntry, b19BmcUserPasswd=b19BmcUserPasswd, b4DiskHealth=b4DiskHealth, b16PowerState=b16PowerState, swi2PhyReset=swi2PhyReset, b25RealTimePower=b25RealTimePower, blade18DiskTable=blade18DiskTable, b23BmcIP=b23BmcIP, b2ExDiskBoardPresence=b2ExDiskBoardPresence, b29SystemProperties=b29SystemProperties, b24ProductName=b24ProductName, b1UpperCritical=b1UpperCritical, b23fruNum=b23fruNum, b25UpperCritical=b25UpperCritical, blade28FruDescriptionTable=blade28FruDescriptionTable, b4SlotBitmap=b4SlotBitmap, b11SecretKvmVmmIndex=b11SecretKvmVmmIndex, b4fruBoardDescription=b4fruBoardDescription, b19NegativeHysteresis=b19NegativeHysteresis, hwCPUCorrectableMachineCheckErr=hwCPUCorrectableMachineCheckErr, b4Safepwofftime=b4Safepwofftime, b16FruLedColorProps=b16FruLedColorProps, b31LowerNonCritical=b31LowerNonCritical, b6DiskIndex=b6DiskIndex, b28FRULabel=b28FRULabel, b8Presence=b8Presence, b11FRUControl=b11FRUControl, b25MezzMark=b25MezzMark, b28fruProductDescription=b28fruProductDescription, b31BladeVersion=b31BladeVersion, b23NegativeHysteresis=b23NegativeHysteresis, blade22FruLedTable=blade22FruLedTable, b12DiskPresent=b12DiskPresent, b14SecretVmmKey=b14SecretVmmKey, hwNoBootableDiskDeassert=hwNoBootableDiskDeassert, hwI2cDataDriveHiUnableDeassert=hwI2cDataDriveHiUnableDeassert, swi4UpperNonCritical=swi4UpperNonCritical, b11DiskInfo=b11DiskInfo, b15CPUInfo=b15CPUInfo, b29MezzMark=b29MezzMark, b1FruLedProperties=b1FruLedProperties, b16WDTBootEnable=b16WDTBootEnable, b9FRUControl=b9FRUControl, b31Target=b31Target, b3fruProductRevision=b3fruProductRevision, smmResetReason=smmResetReason, hwWatchDogPowerDown=hwWatchDogPowerDown, b22SensorFRUInfo=b22SensorFRUInfo, b4DiskPresent=b4DiskPresent, b32PositiveHysteresis=b32PositiveHysteresis, b20fruProductRevision=b20fruProductRevision, swi2Gateway=swi2Gateway, blade32SecretKvmVmmTable=blade32SecretKvmVmmTable, b24fruProductSerialNumber=b24fruProductSerialNumber, b31SecretVmmKey=b31SecretVmmKey, hwSystemFirmwareHangDeassert=hwSystemFirmwareHangDeassert, b8PowerState=b8PowerState, b6Systeminfo=b6Systeminfo, b32BmcIP=b32BmcIP, b20ClearBiosConfig=b20ClearBiosConfig, smmFruID=smmFruID, b22ClearBiosConfig=b22ClearBiosConfig, b23RealTimePower=b23RealTimePower, b32MEMPresent=b32MEMPresent, b4SensorFRUInfo=b4SensorFRUInfo, swi3FruDescriptionEntry=swi3FruDescriptionEntry, b18PowerState=b18PowerState, b26MEMHealth=b26MEMHealth, smmSNMPTrapAddress4=smmSNMPTrapAddress4, b17MezzLocation=b17MezzLocation, b8FruLedColorProps=b8FruLedColorProps, swi1BundleVersion=swi1BundleVersion, b8MezzIndex=b8MezzIndex, b2FruHotSwapState=b2FruHotSwapState, b17ResetReason=b17ResetReason, b24FRUControl=b24FRUControl, blade18FruDescriptionEntry=blade18FruDescriptionEntry, blade27SensorTargetTable=blade27SensorTargetTable, b3BundleVersion=b3BundleVersion, b18Target=b18Target, b23fruBoardPartNumber=b23fruBoardPartNumber, b14BundleVersion=b14BundleVersion, b8UpperCritical=b8UpperCritical, b16fruBoardManufacturer=b16fruBoardManufacturer, b4LowerCritical=b4LowerCritical, swi1Presence=swi1Presence, b12fruProductDescription=b12fruProductDescription, hwLowPowerStatus=hwLowPowerStatus, b24DeviceID=b24DeviceID, b5ExDiskBoardPresence=b5ExDiskBoardPresence, blade27MezzEntry=blade27MezzEntry, b23BladeVersion=b23BladeVersion, blade1=blade1, b17fruProductRevision=b17fruProductRevision, b4FruLedProperties=b4FruLedProperties, b8SensorType=b8SensorType, blade15FruEntry=blade15FruEntry, smmSnmpReboot=smmSnmpReboot, hwCPUPresenceDeassert=hwCPUPresenceDeassert, b31FRULabel=b31FRULabel, b2UpperNonRecoverable=b2UpperNonRecoverable, b4MEMIndex=b4MEMIndex, b4BiosCfg=b4BiosCfg, b7FRUControl=b7FRUControl, b28ClearBiosConfig=b28ClearBiosConfig, softwareVersion=softwareVersion, b19BiosCfg=b19BiosCfg, b29FruLedProperties=b29FruLedProperties, b8DiskMark=b8DiskMark, b21systemGuid=b21systemGuid, blade5CPUEntry=blade5CPUEntry, b20BmcGateway=b20BmcGateway, blade18MemoryEntry=blade18MemoryEntry, hwVoltHiCriticalDeassert=hwVoltHiCriticalDeassert, b19DiskLocation=b19DiskLocation, b17HealthEvents=b17HealthEvents, blade22MemoryTable=blade22MemoryTable, b20DiskHealth=b20DiskHealth, b8NegativeHysteresis=b8NegativeHysteresis, b2FRUControl=b2FRUControl, b12MEMPresent=b12MEMPresent, b27PowerState=b27PowerState, b9MEMIndex=b9MEMIndex, blade32SecretKvmVmmEntry=blade32SecretKvmVmmEntry, b2FruID=b2FruID, swi4ResetReason=swi4ResetReason, b3LowerNonRecoverable=b3LowerNonRecoverable, b2BmcUserPasswd=b2BmcUserPasswd, b22CPUPresent=b22CPUPresent, b25PositiveHysteresis=b25PositiveHysteresis, b22CPUMark=b22CPUMark, b16LowerCritical=b16LowerCritical, b3PowerCapping=b3PowerCapping, b15CPUMark=b15CPUMark, b15Powerreference=b15Powerreference, b2MACAddress=b2MACAddress, b16MEMInfo=b16MEMInfo, b4NegativeHysteresis=b4NegativeHysteresis, b31Presence=b31Presence, b25LowerCritical=b25LowerCritical, b18BmcUserpropertychg=b18BmcUserpropertychg, b4DiskMark=b4DiskMark, b1MEMLocation=b1MEMLocation, b17fruProductDescription=b17fruProductDescription, blade25=blade25, b5SecretVmmKey=b5SecretVmmKey, blade31FruDescriptionTable=blade31FruDescriptionTable, blade23MezzTable=blade23MezzTable, blade22FruLedEntry=blade22FruLedEntry, b3ExDiskBoardPresence=b3ExDiskBoardPresence, blade32DiskTable=blade32DiskTable, b7MEMMark=b7MEMMark, b15LowerCritical=b15LowerCritical, b10Systeminfo=b10Systeminfo, blade10FruLedTable=blade10FruLedTable, blade3MemoryTable=blade3MemoryTable, b32ExDiskBoardPresence=b32ExDiskBoardPresence, swi2ClearSEL=swi2ClearSEL, smmSNMPTrapVersion=smmSNMPTrapVersion, b13fruBoardSerialNumber=b13fruBoardSerialNumber, b20MezzInfo=b20MezzInfo, b9BmcUserAdd=b9BmcUserAdd, b15MEMIndex=b15MEMIndex, b12MezzMark=b12MezzMark, b10UpperNonRecoverable=b10UpperNonRecoverable, blade23MezzEntry=blade23MezzEntry, hwLogspaStatusFull=hwLogspaStatusFull, b4CPULocation=b4CPULocation, b7MezzPresent=b7MezzPresent, b29BmcUserDel=b29BmcUserDel, b18DiskIndex=b18DiskIndex, b11Presence=b11Presence, b9fruAll=b9fruAll, blade12FruDescriptionEntry=blade12FruDescriptionEntry, b13Powerreference=b13Powerreference, b30PowerState=b30PowerState, blade22=blade22, b1NegativeHysteresis=b1NegativeHysteresis, b17DiskHealth=b17DiskHealth, b10ClearBiosConfig=b10ClearBiosConfig, b9SecretVmmKey=b9SecretVmmKey, b15MezzMac=b15MezzMac, blade12SecretKvmVmmEntry=blade12SecretKvmVmmEntry, b9fruBoardDescription=b9fruBoardDescription, b5SlotBitmap=b5SlotBitmap, b19ExDiskBoardPresence=b19ExDiskBoardPresence, b4BmcUserpropertychg=b4BmcUserpropertychg, hwI2cAccessFailDeassert=hwI2cAccessFailDeassert, b2Systeminfo=b2Systeminfo, b10FruLedState=b10FruLedState, blade2FruDescriptionTable=blade2FruDescriptionTable, b2ThresholdsAll=b2ThresholdsAll, b1fruProductManufacturer=b1fruProductManufacturer, hwProcessorEnableStatus=hwProcessorEnableStatus, b21MEMHealth=b21MEMHealth, blade1MezzTable=blade1MezzTable, b28fruProductRevision=b28fruProductRevision, blade15SecretKvmVmmTable=blade15SecretKvmVmmTable, b20Safepwofftime=b20Safepwofftime, b6DiskPresent=b6DiskPresent, b4DeviceID=b4DeviceID, b17fruBoardPartNumber=b17fruBoardPartNumber, b27SecretVmmKey=b27SecretVmmKey, b31DiskLocation=b31DiskLocation, b1PowerCapping=b1PowerCapping, b11BmcGateway=b11BmcGateway, b4MezzLocation=b4MezzLocation, blade29CPUEntry=blade29CPUEntry, hwMemorySpareDeassert=hwMemorySpareDeassert, blade21FruLedTable=blade21FruLedTable, b18fruAll=b18fruAll, b1systemGuid=b1systemGuid, b1BmcUserPasswd=b1BmcUserPasswd, b17SensorType=b17SensorType, b13BundleVersion=b13BundleVersion, swi4fruProductSerialNumber=swi4fruProductSerialNumber, b29DiskPresent=b29DiskPresent, b8FRULabel=b8FRULabel, b25BmcUserAdd=b25BmcUserAdd, b5fruProductManufacturer=b5fruProductManufacturer, b2HealthEvents=b2HealthEvents, b16MACAddress=b16MACAddress, b9HealthEvents=b9HealthEvents, b2LowerNonCritical=b2LowerNonCritical, b13PositiveHysteresis=b13PositiveHysteresis, b3BmcUserAdd=b3BmcUserAdd)
mibBuilder.exportSymbols("HWSMM-MIB", hwPXENotFound=hwPXENotFound, b26BladeVersion=b26BladeVersion, blade5SensorTargetTable=blade5SensorTargetTable, b12ExDiskBoardPresence=b12ExDiskBoardPresence, b21fruBoardManufactureDate=b21fruBoardManufactureDate, b4SecretVmmState=b4SecretVmmState, b4ClearSEL=b4ClearSEL, b5Presence=b5Presence, b30FruLedColorProps=b30FruLedColorProps, b11PowerCapping=b11PowerCapping, smmTemperatureDescriptionEntry=smmTemperatureDescriptionEntry, b9CPUPresent=b9CPUPresent, swi2=swi2, b5Powerreference=b5Powerreference, b7DiskHealth=b7DiskHealth, b21Target=b21Target, swi1=swi1, b27PositiveHysteresis=b27PositiveHysteresis, b20DiskPresent=b20DiskPresent, b2MezzMac=b2MezzMac, b10MezzPresent=b10MezzPresent, b7BiosBootOption=b7BiosBootOption, swi2StackState=swi2StackState, b26systemGuid=b26systemGuid, blade23SensorTargetTable=blade23SensorTargetTable, b2CPUInfo=b2CPUInfo, b13FruLedState=b13FruLedState, b10SystemProperties=b10SystemProperties, b29FruLedColorProps=b29FruLedColorProps, b30ClearBiosConfig=b30ClearBiosConfig, smmListPresent=smmListPresent, hwTempHiMajor=hwTempHiMajor, blade18MemoryTable=blade18MemoryTable, b32NegativeHysteresis=b32NegativeHysteresis, b30SecretKvmState=b30SecretKvmState, b25SecretKvmState=b25SecretKvmState, b4BmcUserAdd=b4BmcUserAdd, b23fruBoardManufacturer=b23fruBoardManufacturer, b11BiosCfg=b11BiosCfg, b8BundleVersion=b8BundleVersion, b2fruBoardSerialNumber=b2fruBoardSerialNumber, b3PositiveHysteresis=b3PositiveHysteresis, b11WDTBootEnable=b11WDTBootEnable, b26DiskMark=b26DiskMark, b8MezzMac=b8MezzMac, b26fruBoardManufactureDate=b26fruBoardManufactureDate, b21ProductName=b21ProductName, b11Powerreference=b11Powerreference, hwFlashUsageHiMajorDeassert=hwFlashUsageHiMajorDeassert, blade10SensorTargetTable=blade10SensorTargetTable, b15fruBoardManufacturer=b15fruBoardManufacturer, b19BmcIP=b19BmcIP, b2BundleVersion=b2BundleVersion, swi1LowerNonCritical=swi1LowerNonCritical, b18HealthEvents=b18HealthEvents, b6CPULocation=b6CPULocation, b16RealTimePower=b16RealTimePower, b16BmcUserPasswd=b16BmcUserPasswd, blade16=blade16, b12MEMLocation=b12MEMLocation, b30BmcGateway=b30BmcGateway, b17DiskMark=b17DiskMark, b19ProductName=b19ProductName, b22DiskMark=b22DiskMark, b28SecretVmmState=b28SecretVmmState, swi1fruProductDescription=swi1fruProductDescription, b19MEMIndex=b19MEMIndex, b16FruID=b16FruID, blade3SecretKvmVmmTable=blade3SecretKvmVmmTable, b12fruNum=b12fruNum, swi4ClearAlarm=swi4ClearAlarm, hwTrapEventTime=hwTrapEventTime, b30Presence=b30Presence, b19CPUIndex=b19CPUIndex, blade6=blade6, b3fruBoardManufacturer=b3fruBoardManufacturer, b8WDTBootEnable=b8WDTBootEnable, b25BmcGateway=b25BmcGateway, blade12FruEntry=blade12FruEntry, blade27SecretKvmVmmTable=blade27SecretKvmVmmTable, b15BiosBootOption=b15BiosBootOption, blade25FruLedEntry=blade25FruLedEntry, b6Health=b6Health, b15UpperNonRecoverable=b15UpperNonRecoverable, blade1FruDescriptionTable=blade1FruDescriptionTable, hwVersionChangeStatus=hwVersionChangeStatus, blade1FruLedTable=blade1FruLedTable, hwMemoryRateHiMinor=hwMemoryRateHiMinor, b24BmcUserPasswd=b24BmcUserPasswd, b23SystemProperties=b23SystemProperties, b9LowerNonCritical=b9LowerNonCritical, b30UpperNonCritical=b30UpperNonCritical, b12BmcUserAdd=b12BmcUserAdd, b18FruLedState=b18FruLedState, blade10MemoryEntry=blade10MemoryEntry, b7fruBoardSerialNumber=b7fruBoardSerialNumber, b4fruProductDescription=b4fruProductDescription, b23MEMLocation=b23MEMLocation, b12LowerCritical=b12LowerCritical, b26SecretVmmState=b26SecretVmmState, b20Presence=b20Presence, b23SlotBitmap=b23SlotBitmap, b15fruBoardPartNumber=b15fruBoardPartNumber, b23SecretKvmVmmIndex=b23SecretKvmVmmIndex, b7Target=b7Target, b18CPUMark=b18CPUMark, b30LowerNonRecoverable=b30LowerNonRecoverable, b32Safepwofftime=b32Safepwofftime, b3SlotBitmap=b3SlotBitmap, b4fruNumber=b4fruNumber, swi3Route=swi3Route, blade25FruTable=blade25FruTable, b14RealTimePower=b14RealTimePower, b31SecretVmmState=b31SecretVmmState, b9MMSecretVmmKey=b9MMSecretVmmKey, b21LowerNonRecoverable=b21LowerNonRecoverable, smmFruHotSwapState=smmFruHotSwapState, b2fruNumber=b2fruNumber, b18DiskInfo=b18DiskInfo, b1fruBoardManufacturer=b1fruBoardManufacturer, b14SensorFRUInfo=b14SensorFRUInfo, b32DiskInfo=b32DiskInfo, b20DiskInfo=b20DiskInfo, shelfSerialNumber=shelfSerialNumber, b27Systeminfo=b27Systeminfo, b25Current=b25Current, b13SensorFRUInfo=b13SensorFRUInfo, b29MEMPresent=b29MEMPresent, b18MEMInfo=b18MEMInfo, b30MEMHealth=b30MEMHealth, b17CPUInfo=b17CPUInfo, smmfruProductManufacturer=smmfruProductManufacturer, b32fruBoardSerialNumber=b32fruBoardSerialNumber, b29BmcGateway=b29BmcGateway, b9CPUInfo=b9CPUInfo, blade9SensorTargetEntry=blade9SensorTargetEntry, blade24FruDescriptionEntry=blade24FruDescriptionEntry, hwFailoverngStatus=hwFailoverngStatus, b8CPUHealth=b8CPUHealth, b5MezzIndex=b5MezzIndex, b24ClearBiosConfig=b24ClearBiosConfig, b29ResetReason=b29ResetReason, b6SensorFRUInfo=b6SensorFRUInfo, blade6FruLedTable=blade6FruLedTable, b4PowerCapping=b4PowerCapping, b10fruProductSerialNumber=b10fruProductSerialNumber, b2RealTimePower=b2RealTimePower, hwVoltLoMajor=hwVoltLoMajor, hwFanFault=hwFanFault, b4CPUIndex=b4CPUIndex, b29MEMHealth=b29MEMHealth, b17Health=b17Health, b3SensorHealth=b3SensorHealth, blade10FruDescriptionTable=blade10FruDescriptionTable, b30DiskMark=b30DiskMark, hwTempLoMinor=hwTempLoMinor, b13BmcUserPasswd=b13BmcUserPasswd, b30MezzIndex=b30MezzIndex, b25fruNum=b25fruNum, b22fruNumber=b22fruNumber, swi2FruLed=swi2FruLed, hwFanPresence=hwFanPresence, b19FruLedProperties=b19FruLedProperties, b20ClearSEL=b20ClearSEL, b9ExDiskBoardPresence=b9ExDiskBoardPresence, b17Safepwofftime=b17Safepwofftime, b29RealTimePower=b29RealTimePower, b27BmcIP=b27BmcIP, b17LowerNonCritical=b17LowerNonCritical, swi1SensorHealth=swi1SensorHealth, b18fruBoardManufactureDate=b18fruBoardManufactureDate, b29Health=b29Health, blade26MemoryEntry=blade26MemoryEntry, b17FruID=b17FruID, hwFanRemoved=hwFanRemoved, blade18MezzEntry=blade18MezzEntry, b11DiskIndex=b11DiskIndex, b12fruBoardManufacturer=b12fruBoardManufacturer, b30BmcUserDel=b30BmcUserDel, swi3PortName=swi3PortName, b29CPUHealth=b29CPUHealth, b1MezzHealth=b1MezzHealth, b16FRULabel=b16FRULabel, b21SensorType=b21SensorType, b16MezzLocation=b16MezzLocation, b26MEMInfo=b26MEMInfo, b17fruAll=b17fruAll, b15CPUHealth=b15CPUHealth, b29FruID=b29FruID, b7DiskPresent=b7DiskPresent, blade31SensorTargetTable=blade31SensorTargetTable, b3CPUMark=b3CPUMark, b29Powerreference=b29Powerreference, b2fruAll=b2fruAll, b6DeviceID=b6DeviceID, b30CPUIndex=b30CPUIndex, blade25MezzEntry=blade25MezzEntry, b5RealTimePower=b5RealTimePower, b31ProductName=b31ProductName, swi1fruNum=swi1fruNum, hwRemovedAlarmDeassert=hwRemovedAlarmDeassert, b21ClearSEL=b21ClearSEL, b20MEMIndex=b20MEMIndex, b6MMSecretVmmKey=b6MMSecretVmmKey, hwMemoryCfgErrorDeassert=hwMemoryCfgErrorDeassert, b10fruBoardManufacturer=b10fruBoardManufacturer, b10BiosCfg=b10BiosCfg, b10LowerNonRecoverable=b10LowerNonRecoverable, b5SecretKvmVmmIndex=b5SecretKvmVmmIndex, blade2SensorTargetEntry=blade2SensorTargetEntry, swi3PositiveHysteresis=swi3PositiveHysteresis, swi2SensorTargetTable=swi2SensorTargetTable, b26SystemProperties=b26SystemProperties, b19DiskIndex=b19DiskIndex, smmfruProductRevision=smmfruProductRevision, b29MEMIndex=b29MEMIndex, blade6FruEntry=blade6FruEntry, b9FruLedProperties=b9FruLedProperties, b7Presence=b7Presence, swi4FRULabel=swi4FRULabel, smmNegativeHysteresis=smmNegativeHysteresis, b28DeviceID=b28DeviceID, b26FRUControl=b26FRUControl, b2fruNum=b2fruNum, b16FruLedState=b16FruLedState, b4CPUPresent=b4CPUPresent, swi3Gateway=swi3Gateway, b22MezzIndex=b22MezzIndex, b3MezzHealth=b3MezzHealth, b1LowerNonCritical=b1LowerNonCritical, blade28SensorTargetEntry=blade28SensorTargetEntry, b9BmcIP=b9BmcIP, b22WDTBootEnable=b22WDTBootEnable, b6DiskMark=b6DiskMark, b7LowerCritical=b7LowerCritical, b29ClearSEL=b29ClearSEL, b31fruProductRevision=b31fruProductRevision, b32RealTimePower=b32RealTimePower, hwTrapSeq=hwTrapSeq, b18ProductName=b18ProductName, b30fruProductRevision=b30fruProductRevision, smmUpperNonRecoverable=smmUpperNonRecoverable, blade26SensorTargetEntry=blade26SensorTargetEntry, swi1FruLedProperties=swi1FruLedProperties, b24SensorType=b24SensorType, blade20MemoryTable=blade20MemoryTable, b2Current=b2Current, b10LowerCritical=b10LowerCritical, b5WDTBootEnable=b5WDTBootEnable, b25DiskPresent=b25DiskPresent, blade25CPUEntry=blade25CPUEntry, smmRemoteSyslogEntry=smmRemoteSyslogEntry, b26MACAddress=b26MACAddress, smmFruLedTable=smmFruLedTable)
mibBuilder.exportSymbols("HWSMM-MIB", b2WDTBootEnable=b2WDTBootEnable, b27WDTBootEnable=b27WDTBootEnable, b21CPUPresent=b21CPUPresent, b24MEMLocation=b24MEMLocation, b26MezzMac=b26MezzMac, b6WDTBootEnable=b6WDTBootEnable, blade28CPUEntry=blade28CPUEntry, b2SystemProperties=b2SystemProperties, b2MezzPresent=b2MezzPresent, swi4fruBoardManufactureDate=swi4fruBoardManufactureDate, b24fruProductPartNumber=b24fruProductPartNumber, b14MezzIndex=b14MezzIndex, smmLowerNonCritical=smmLowerNonCritical, swi1fruBoardDescription=swi1fruBoardDescription, b5FRULabel=b5FRULabel, b9NegativeHysteresis=b9NegativeHysteresis, b11ClearBiosConfig=b11ClearBiosConfig, swi3=swi3, b27CPUPresent=b27CPUPresent, b27MMSecretVmmKey=b27MMSecretVmmKey, b14systemGuid=b14systemGuid, b5UpperNonCritical=b5UpperNonCritical, b26DiskIndex=b26DiskIndex, b3SecretVmmKey=b3SecretVmmKey, b4PositiveHysteresis=b4PositiveHysteresis, b14UpperNonRecoverable=b14UpperNonRecoverable, swi1Health=swi1Health, b4UpperNonCritical=b4UpperNonCritical, b6CPUMark=b6CPUMark, b6BiosCfg=b6BiosCfg, b15Systeminfo=b15Systeminfo, smmUserdel=smmUserdel, b12MezzHealth=b12MezzHealth, b27Powerreference=b27Powerreference, b15fruProductDescription=b15fruProductDescription, b3MEMLocation=b3MEMLocation, hwI2cStatus=hwI2cStatus, b8ClearSEL=b8ClearSEL, b25BiosBootOption=b25BiosBootOption, blade20SensorTargetEntry=blade20SensorTargetEntry, swi4SensorTargetEntry=swi4SensorTargetEntry, b6SecretKvmState=b6SecretKvmState, hwHardwareDeviceFault=hwHardwareDeviceFault, blade32MemoryTable=blade32MemoryTable, b1fruBoardDescription=b1fruBoardDescription, blade30DiskTable=blade30DiskTable, blade27SensorTargetEntry=blade27SensorTargetEntry, swi1FruVersion=swi1FruVersion, b32BmcUserAdd=b32BmcUserAdd, b27CPUHealth=b27CPUHealth, b29fruNum=b29fruNum, b21CPUInfo=b21CPUInfo, b19SlotBitmap=b19SlotBitmap, b14FRUControl=b14FRUControl, swi2ResetReason=swi2ResetReason, b24ResetReason=b24ResetReason, b17DiskPresent=b17DiskPresent, b30WDTBootEnable=b30WDTBootEnable, b16fruAll=b16fruAll, b12Current=b12Current, b19Target=b19Target, hwMemoryOvertempDeassert=hwMemoryOvertempDeassert, blade6SecretKvmVmmEntry=blade6SecretKvmVmmEntry, b27ClearBiosConfig=b27ClearBiosConfig, b24CPUMark=b24CPUMark, smm=smm, b10BmcUserAdd=b10BmcUserAdd, b4SecretKvmState=b4SecretKvmState, b2BmcUserpropertychg=b2BmcUserpropertychg, b4MezzPresent=b4MezzPresent, b18MEMPresent=b18MEMPresent, b16MezzPresent=b16MezzPresent, swi3ClearSEL=swi3ClearSEL, b2FruLedColorProps=b2FruLedColorProps, b11Health=b11Health, b27ThresholdsAll=b27ThresholdsAll, b16CPUInfo=b16CPUInfo, b10FruLedProperties=b10FruLedProperties, b20BmcUserDel=b20BmcUserDel, swi2Presence=swi2Presence, b14SecretKvmState=b14SecretKvmState, b25FRUControl=b25FRUControl, blade8FruLedTable=blade8FruLedTable, b16Presence=b16Presence, b28MezzInfo=b28MezzInfo, b21FruLedColorProps=b21FruLedColorProps, blade15MezzTable=blade15MezzTable, b11CPULocation=b11CPULocation, b26LowerNonCritical=b26LowerNonCritical, blade30FruLedTable=blade30FruLedTable, blade4FruLedTable=blade4FruLedTable, b14FruLed=b14FruLed, b15MACAddress=b15MACAddress, b27Safepwofftime=b27Safepwofftime, blade24CPUTable=blade24CPUTable, b16DiskHealth=b16DiskHealth, b28DiskIndex=b28DiskIndex, b21fruBoardPartNumber=b21fruBoardPartNumber, b2ClearSEL=b2ClearSEL, smmTemperatureIndex=smmTemperatureIndex, b16systemGuid=b16systemGuid, swi1fruProductSerialNumber=swi1fruProductSerialNumber, blade9FruLedEntry=blade9FruLedEntry, b28BmcIP=b28BmcIP, b5FruID=b5FruID, b11DeviceID=b11DeviceID, b27fruBoardDescription=b27fruBoardDescription, b26DiskInfo=b26DiskInfo, b9MACAddress=b9MACAddress, b21FruLedState=b21FruLedState, swi1HealthEvents=swi1HealthEvents, blade7MemoryEntry=blade7MemoryEntry, b10DiskLocation=b10DiskLocation, hwMemoryRateHiMinorDeassert=hwMemoryRateHiMinorDeassert, b28UpperNonRecoverable=b28UpperNonRecoverable, b19SecretVmmKey=b19SecretVmmKey, hwTrapSensorName=hwTrapSensorName, smmThresholdsAll=smmThresholdsAll, b24fruBoardPartNumber=b24fruBoardPartNumber, swi4Current=swi4Current, b10Powerreference=b10Powerreference, swi4FruTable=swi4FruTable, b28HealthEvents=b28HealthEvents, b7Current=b7Current, blade17SensorTargetEntry=blade17SensorTargetEntry, hwCPUCATError=hwCPUCATError, blade6SecretKvmVmmTable=blade6SecretKvmVmmTable, b12PositiveHysteresis=b12PositiveHysteresis, b31MezzMark=b31MezzMark, b10PositiveHysteresis=b10PositiveHysteresis, blade8FruDescriptionEntry=blade8FruDescriptionEntry, b11ExDiskBoardPresence=b11ExDiskBoardPresence, b1LowerNonRecoverable=b1LowerNonRecoverable, b6CPUInfo=b6CPUInfo, b29BmcUserpropertychg=b29BmcUserpropertychg, b3SystemProperties=b3SystemProperties, b32Presence=b32Presence, blade13FruDescriptionTable=blade13FruDescriptionTable, b15UpperCritical=b15UpperCritical, b22BundleVersion=b22BundleVersion, blade23CPUTable=blade23CPUTable, swi1ConfigInfo=swi1ConfigInfo, b29UpperNonCritical=b29UpperNonCritical, b20fruBoardPartNumber=b20fruBoardPartNumber, swi3PortNum=swi3PortNum, blade29FruLedEntry=blade29FruLedEntry, b22FruHotSwapState=b22FruHotSwapState, b6DiskLocation=b6DiskLocation, b23SensorHealth=b23SensorHealth, b14Systeminfo=b14Systeminfo, hwCPUSelfTestFailDeassert=hwCPUSelfTestFailDeassert, smmSNMPTrapCommunity=smmSNMPTrapCommunity, b27BmcUserAdd=b27BmcUserAdd, swi4SensorFRUInfo=swi4SensorFRUInfo, blade1FruLedEntry=blade1FruLedEntry, swi1fruProductManufacturer=swi1fruProductManufacturer, b4BmcIP=b4BmcIP, smmPositiveHysteresis=smmPositiveHysteresis, blade31FruLedEntry=blade31FruLedEntry, b11fruProductSerialNumber=b11fruProductSerialNumber, b25SystemProperties=b25SystemProperties, b1LowerCritical=b1LowerCritical, b32Powerreference=b32Powerreference, b2fruBoardDescription=b2fruBoardDescription, b13fruNum=b13fruNum, b2FRULabel=b2FRULabel, b5fruProductDescription=b5fruProductDescription, b27UpperNonRecoverable=b27UpperNonRecoverable, blade19CPUTable=blade19CPUTable, b25MEMInfo=b25MEMInfo, hwVoltHiCritical=hwVoltHiCritical, hwFailoverngDeassert=hwFailoverngDeassert, b8LowerNonRecoverable=b8LowerNonRecoverable, b1DiskPresent=b1DiskPresent, blade30SensorTargetTable=blade30SensorTargetTable, b18DeviceID=b18DeviceID, b15SlotBitmap=b15SlotBitmap, b7WDTBootEnable=b7WDTBootEnable, b14fruBoardManufacturer=b14fruBoardManufacturer, b29BiosCfg=b29BiosCfg, b3FruLedState=b3FruLedState, hwVoltLoMajorDeassert=hwVoltLoMajorDeassert, blade5MemoryTable=blade5MemoryTable, b30MezzMark=b30MezzMark, swi1PortToBladeSlot=swi1PortToBladeSlot, blade23SecretKvmVmmTable=blade23SecretKvmVmmTable, b3fruNum=b3fruNum, blade26MezzTable=blade26MezzTable, b29CPUPresent=b29CPUPresent, b29fruProductSerialNumber=b29fruProductSerialNumber, blade9SecretKvmVmmTable=blade9SecretKvmVmmTable, b31DiskMark=b31DiskMark, blade14=blade14, b9FRULabel=b9FRULabel, b31Current=b31Current, b6PowerState=b6PowerState, b29MezzInfo=b29MezzInfo, b5BiosCfg=b5BiosCfg, b11BiosBootOption=b11BiosBootOption, b18MEMLocation=b18MEMLocation, b3MEMPresent=b3MEMPresent, b27CPUMark=b27CPUMark, b20FruLedState=b20FruLedState, hwFruInactive=hwFruInactive, b7SecretVmmState=b7SecretVmmState, b9Safepwofftime=b9Safepwofftime, b1fruProductPartNumber=b1fruProductPartNumber, blade18SecretKvmVmmEntry=blade18SecretKvmVmmEntry, b23ThresholdsAll=b23ThresholdsAll, blade32CPUEntry=blade32CPUEntry, b13SystemProperties=b13SystemProperties, b9Health=b9Health, b28fruBoardPartNumber=b28fruBoardPartNumber, blade25SecretKvmVmmEntry=blade25SecretKvmVmmEntry, b22ProductName=b22ProductName, b7PositiveHysteresis=b7PositiveHysteresis, b14BmcUserPasswd=b14BmcUserPasswd, b6fruBoardPartNumber=b6fruBoardPartNumber, hwVoltLoMinorDeassert=hwVoltLoMinorDeassert, b27FRULabel=b27FRULabel, blade6MemoryTable=blade6MemoryTable, b1FRULabel=b1FRULabel, hwPowerSupplyFault=hwPowerSupplyFault, b23MEMInfo=b23MEMInfo, b28MEMIndex=b28MEMIndex, b31DeviceID=b31DeviceID, b8DiskInfo=b8DiskInfo, b18BiosBootOption=b18BiosBootOption, b12systemGuid=b12systemGuid, blade13FruLedEntry=blade13FruLedEntry, swi4NegativeHysteresis=swi4NegativeHysteresis, b10fruProductRevision=b10fruProductRevision, b19FruLedColorProps=b19FruLedColorProps, b8HealthEvents=b8HealthEvents, blade17SecretKvmVmmEntry=blade17SecretKvmVmmEntry, b7SlotBitmap=b7SlotBitmap, b4Presence=b4Presence, b5SensorHealthEvents=b5SensorHealthEvents, swi4fruBoardManufacturer=swi4fruBoardManufacturer, hwTrapEvent=hwTrapEvent, b26FruHotSwapState=b26FruHotSwapState, swi1Route=swi1Route, hwTempLoMinorDeassert=hwTempLoMinorDeassert, b7CPUHealth=b7CPUHealth, b25SensorHealth=b25SensorHealth, b28MACAddress=b28MACAddress, b23BundleVersion=b23BundleVersion, b6Safepwofftime=b6Safepwofftime, b3UpperNonCritical=b3UpperNonCritical, b17FruHotSwapState=b17FruHotSwapState, b28Current=b28Current, blade16MezzTable=blade16MezzTable, swi3LowerNonCritical=swi3LowerNonCritical, blade26=blade26)
mibBuilder.exportSymbols("HWSMM-MIB", b8PositiveHysteresis=b8PositiveHysteresis, blade4FruDescriptionTable=blade4FruDescriptionTable, smmRemoteSyslogState=smmRemoteSyslogState, b29BladeVersion=b29BladeVersion, b10FruLedColorProps=b10FruLedColorProps, b20SecretKvmVmmIndex=b20SecretKvmVmmIndex, smmStaticIpAddr=smmStaticIpAddr, blade15SensorTargetTable=blade15SensorTargetTable, b18MezzInfo=b18MezzInfo, b24BladeVersion=b24BladeVersion, b10MEMIndex=b10MEMIndex, b28BmcUserpropertychg=b28BmcUserpropertychg, b3Systeminfo=b3Systeminfo, b14Powerreference=b14Powerreference, b27BiosBootOption=b27BiosBootOption, b8Safepwofftime=b8Safepwofftime, b29MezzIndex=b29MezzIndex, b27FruID=b27FruID, b1fruProductDescription=b1fruProductDescription, smmClearSEL=smmClearSEL, b29fruBoardManufacturer=b29fruBoardManufacturer, b18BmcUserDel=b18BmcUserDel, b18BundleVersion=b18BundleVersion, b8Systeminfo=b8Systeminfo, blade3FruLedEntry=blade3FruLedEntry, b13BiosCfg=b13BiosCfg, fanInfo=fanInfo, smmUserpasswd=smmUserpasswd, b21SecretVmmState=b21SecretVmmState, blade16MezzEntry=blade16MezzEntry, b20ProductName=b20ProductName, b21SensorHealth=b21SensorHealth, blade27FruDescriptionEntry=blade27FruDescriptionEntry, blade21MezzEntry=blade21MezzEntry, b13FruLed=b13FruLed, b27SensorHealth=b27SensorHealth, b27SensorHealthEvents=b27SensorHealthEvents, b26CPUInfo=b26CPUInfo, blade24SensorTargetTable=blade24SensorTargetTable, b1BmcIP=b1BmcIP, b13DiskPresent=b13DiskPresent, b16MEMIndex=b16MEMIndex, b26BmcGateway=b26BmcGateway, b19ThresholdsAll=b19ThresholdsAll, smmNetworkConfigEntry=smmNetworkConfigEntry, b25fruBoardManufactureDate=b25fruBoardManufactureDate, blade1MezzEntry=blade1MezzEntry, blade12MemoryEntry=blade12MemoryEntry, pems=pems, b23ResetReason=b23ResetReason, b23DiskInfo=b23DiskInfo, b26ClearSEL=b26ClearSEL, b18MEMHealth=b18MEMHealth, b18PowerCapping=b18PowerCapping, b2Safepwofftime=b2Safepwofftime, blade32SensorTargetEntry=blade32SensorTargetEntry, b32BundleVersion=b32BundleVersion, b12DiskHealth=b12DiskHealth, b20ExDiskBoardPresence=b20ExDiskBoardPresence, b12MezzLocation=b12MezzLocation, blade26MezzEntry=blade26MezzEntry, swi2PowerState=swi2PowerState, b27Current=b27Current, b7CPUInfo=b7CPUInfo, b30BmcUserPasswd=b30BmcUserPasswd, b15SecretVmmState=b15SecretVmmState, b5MEMHealth=b5MEMHealth, b19FruLed=b19FruLed, b18FruID=b18FruID, b13fruBoardPartNumber=b13fruBoardPartNumber, b9BmcGateway=b9BmcGateway, b12Health=b12Health, b32FruLedProperties=b32FruLedProperties, b1MMSecretVmmKey=b1MMSecretVmmKey, hwLswFailStatus=hwLswFailStatus, b11Target=b11Target, b32fruProductDescription=b32fruProductDescription, fanStatus=fanStatus, b14NegativeHysteresis=b14NegativeHysteresis, b23LowerCritical=b23LowerCritical, b5ClearBiosConfig=b5ClearBiosConfig, swi1LowerNonRecoverable=swi1LowerNonRecoverable, blade9CPUTable=blade9CPUTable, b12LowerNonCritical=b12LowerNonCritical, blade11FruDescriptionTable=blade11FruDescriptionTable, shelfType=shelfType, b9Target=b9Target, b9DiskPresent=b9DiskPresent, b1MezzInfo=b1MezzInfo, b5CPULocation=b5CPULocation, b27DiskHealth=b27DiskHealth, b23WDTBootEnable=b23WDTBootEnable, b13FruID=b13FruID, b9DeviceID=b9DeviceID, b15fruProductManufacturer=b15fruProductManufacturer, b10CPULocation=b10CPULocation, b2LowerNonRecoverable=b2LowerNonRecoverable, b24ExDiskBoardPresence=b24ExDiskBoardPresence, b7LowerNonRecoverable=b7LowerNonRecoverable, b9SensorType=b9SensorType, blade13=blade13, blade5SecretKvmVmmTable=blade5SecretKvmVmmTable, blade30SecretKvmVmmTable=blade30SecretKvmVmmTable, b5fruNum=b5fruNum, b24fruBoardDescription=b24fruBoardDescription)
